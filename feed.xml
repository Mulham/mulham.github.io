<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ar"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://mulham.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mulham.github.io/" rel="alternate" type="text/html" hreflang="ar" /><updated>2024-10-22T20:34:40+03:00</updated><id>https://mulham.github.io/feed.xml</id><title type="html">مدونة ملهم</title><subtitle>دروس وشروحات قيّمة وحصريّة لا سابق لها في المحتوى العربي</subtitle><entry><title type="html">تاريخ الحواسيب وتطورها وأنواعها</title><link href="https://mulham.github.io/%D8%AA%D8%A7%D8%B1%D9%8A%D8%AE-%D8%A7%D9%84%D8%AD%D9%88%D8%A7%D8%B3%D9%8A%D8%A8-,%D9%88%D8%AA%D8%B7%D9%88%D8%B1%D9%87%D8%A7-%D9%88%D8%A3%D9%86%D9%88%D8%A7%D8%B9%D9%87%D8%A7-%D8%A7%D9%84%D9%8A%D9%88%D9%85/" rel="alternate" type="text/html" title="تاريخ الحواسيب وتطورها وأنواعها" /><published>2024-10-22T00:00:00+03:00</published><updated>2024-10-22T00:00:00+03:00</updated><id>https://mulham.github.io/%D8%AA%D8%A7%D8%B1%D9%8A%D8%AE-%D8%A7%D9%84%D8%AD%D9%88%D8%A7%D8%B3%D9%8A%D8%A8-,%D9%88%D8%AA%D8%B7%D9%88%D8%B1%D9%87%D8%A7-%D9%88%D8%A3%D9%86%D9%88%D8%A7%D8%B9%D9%87%D8%A7-%D8%A7%D9%84%D9%8A%D9%88%D9%85</id><content type="html" xml:base="https://mulham.github.io/%D8%AA%D8%A7%D8%B1%D9%8A%D8%AE-%D8%A7%D9%84%D8%AD%D9%88%D8%A7%D8%B3%D9%8A%D8%A8-,%D9%88%D8%AA%D8%B7%D9%88%D8%B1%D9%87%D8%A7-%D9%88%D8%A3%D9%86%D9%88%D8%A7%D8%B9%D9%87%D8%A7-%D8%A7%D9%84%D9%8A%D9%88%D9%85/"><![CDATA[<p>يُشتقُّ من كلِمَةِ حساب (computing) كلمةُ حاسوب (computer) أي الآلةُ التي تقومُ بالحساب، بعبارةٍ أخرى الآلة الحاسبة، نعم..الآلة الحاسبة الالكترونية هي عبارة عن حاسوب ولكن لهدف محدود. حيث تحوي دارةً لحساب الأعداد وتحوي ذاكرة، وحتى أن بعضَها يكون قابلا للبرمجة. 
والحسابُ في الحقيقة بدأ منذ  زمنٍ بعيدٍ قبل الميلاد.  فهو مهمٌ جدًّا و لا يمكن أن تقومَ أيُ حضارةٍ بدونِ علمِ الحسابِ ووسائلٍ للحساب، فلا يمكن التعميرُ أو إنشاءُ اقتصادٍ.. وغيرُ ذلك من مقومات الحضارة والدول بدون علم الحساب. وكلنا نعلمُ الأهرامات، أحد عجائب الدنيا السبع، والتي يعود تاريخ بنائها لـ ألفين وخمسمئةِ عامٍ قبل الميلاد. فعندما ترى بناءًا مثل الأهرام يجب عليك التيقنُ مباشرةً أن من بناه كان على علمٍ جيد  بالحساب.
وتصديقًا لذلك، فإن أحدَ الاكتشافات التي بيّنت جزءًا من طرقِ الحسابِ لدى الفراعنة هو بُرديةُ أُحمس بابيروس، وهي مكتوبة بالخط الهيراطيقي:</p>

<p><img src="/assets/posts/بردية-أحمس-بابيروس.webp" alt="بُردية أُحمس بابيروس" /></p>

<p>وﻷخذ لمحة سريعة عما وُجد في المخطوطات المكتشفة، وُجد في علم الجبر المعادلات الخطية والكسور ومسائل متقدمة تشمل التحليل البُعدي (Dimensional analysis). أما بالنسبة للهندسة فقد عرفوا بالطبع الأشكال الهندسية من مثلثات ودوائر وحساب المحيط والمساحة والحجم، وقد وُضِّحت تفاصيل كثيرة في كتب عن طرق الحساب وعلم الهندسة لدى المصريين القدماء، وهي ليست مجال بحثنا هنا.</p>

<p>من أقدمِ الأدواتِ التي كانت تُستخدم للحسابِ وبشكلٍ واسع هي المِعداد (تدعى بالإنجليزية abacus) والتي يُعتقد أن أصلها من بابل:</p>

<p><img src="/assets/posts/المعداد.webp" alt="المعداد Abacus" /></p>

<p>وربما رأيتَ مثلَها من قبل، فهي مازالت تُدرّس في العديد من المدارس الابتدائية في وقتنا الحاضر. تُستخدم هذه الآلة لتمثيل أرقامٍ كبيرةٍ يصعب حفظها، وكذلك لإجراء عمليتي الجمع والطرح، فكل سلك معدني موضوعًا عليه الأحجار يمثل خانة في العدد، وعند سحب حجرًا ما في خانة ما فهذا يؤدي إما لطرح أو جمع عدد مع العدد قبل السحب، لنحصل على الناتج بعد السحب.</p>

<p>قد تظن أن الآلة هذه بسيطة جدًا وتمثل أرقامًا بسيطة، ولكنها كانت تُستخدم في العملياتِ التجاريَّةِ الكبرى، تُظهر الآلة هذه الرقم التالي 6,302,715,408، أي أننا نتحدث عن أرقام بالمليارات.</p>

<p><img src="/assets/posts/المعداد-2.webp" alt="المعداد Abacus" /></p>

<p>وكما ترى فالآلة هذه نسخ متعددة في بلدان عدة، بعضها يكون بِعيدان عامودية وبعضها أفقية، وكذلك عدد العيدان (أي الخانات) يختلف بحسب حجم الأعداد المراد التعامل معها.</p>

<p>بالنسبة للآلات الحاسبة ذات الهدف الوحيد وهو حساب وعرض الأعداد، فمازالت تُصنع إلى يومنا هذا، نذكر منها (الصورة التالية على اليمين وهي) الآلة الحاسبة الميكانيكية والتي استُخدمت بشكل واسع في القرن الماضي وتسمى آلة الجمع (Adding machine) وكذلك الآلات الحاسبة التي نعرفها جيدًا اليوم.</p>

<p><img src="/assets/posts/آلة-حاسبة-ميكانيكية.webp" alt="آلة حاسبة ميكانيكية" /></p>

<p><img src="/assets/posts/آلة-حاسبة.webp" alt="آلة حاسبة" /></p>

<p>ولنتعرف الآن على الآلات الحاسبة ذات اﻷهداف العديدة أو العامة، أي الحواسيب، وبحسب التسلسل الزمني. علمًا أن أحدث حاسوب اليوم ليس بمقدور القطعة الرئيسية فيه  (أي وحدةُ المعالجةِ المركزية CPU) سوى جمع وطرح الأرقام، بالإضافة لبعض العمليات المنطقية. أي أنَّ أحدث الحواسيبِ ماهي إلا مجردُ آلاتٍ حاسبةٍ بسيطة، ولكنَّ سرعةَ الحساباتِ فيها (بالإضافة للمساحاتِ التخزينيةِ الكبيرة) أتاحت استخدامَها ﻷهدافٍ عامةٍ مثلَ التعاملِ مع الصوتياتِ والمرئياتِ والنصوص.</p>

<p>من أوائل الحواسيب ذات الأهداف العامة هي الحواسيب المكيانيكية، يُعتقد أن أقدمها بحسب التاريخ المكتشف هو الحاسوب الإغريقي الذي يدعى إنتيكِثيرا Antikythera mechanism (حوالي مئة قبل الميلاد) المخصصُ لحسابِ مواقعِ النجومِ بحسبِ التاريخِ المُعطى. تمثلُ الصورةُ هذه نموذجًا منشئًا للجهاز في عامِ ألفين وسبعة.</p>

<p><img src="/assets/posts/حاسوب-إنتيكيثيرا.webp" alt="حاسوب إنتيكيثيرا" /></p>

<p>ظهرت بعد ذلك بمدة عدةُ حواسيبٍ ميكانيكية من قبل علماءِ فلكٍ مسلمين مثلُ أبو الريحان البيروني الذي طور الاسطرلاب والذي يحوي وظائفَ عدة منها حسابُ مواقعِ النجوم وارتفاعِ الشمسِ ومواقيتِ الصلاة واتجاهِ القبلة ووظائفَ أخرى، وقد قيلَ أنه يوجدُ حوالَي ألفُ استخدامٍ لوظائفِ الاسطرلاب.</p>

<p><img src="/assets/posts/الاسطرلاب.webp" alt="الاسطرلاب" /></p>

<p>وقد اشتُهر بعد ذلك الحاسوبُ الميكانيكي غيرُ المكتمل لتشارْلز بابِج (Charles Babbage) والذي يدعى المحركُ التحليليAnalytical Engine ،( والصورة هذه مأخوذة من متحف العلوم (Science Museum) في لندن).</p>

<p><img src="/assets/posts/المحرك-التحليلي-لتشارلز-بابج.webp" alt="المحرك-التحليلي-لتشارلز-بابج" /></p>

<p>وقد صُمِّم في عام 1837 ألفٍ وثمانمئةٍ وسبعةٍ وثلاثين ليكونَ حاسوبًا ﻷهداف عامةٍ وقابلا للبرمجة وليحتوي على كلِّ الوظائفِ المنطقيةِ الموجودةِ في حاسوبِ اليوم. ولكنه في ذلك الوقت كان مشروعًا حالمًا وخارجًا عن الإمكانيات المتاحة، مما أدى لبقائه بشكلِ تصميم وعدم بنائه، بل تم بناؤه لاحقا من قبل متحف العلوم في لندن في عام ألف وتسمعئة وواحد وتسعين  1991.</p>

<p>ويُذكر في هذا السياق عالمةُ الرياضيات  Eda Loveless) Ada Lovelace (1815 - 1852)) والتي سمعت بمشروع تشارْلز  وأرسلت له أولَ خوارزميةٍ لحاسوبه المقترح والتي تهدفُ لحساب أعداد بِرنولي (وهي متسلسلة من الأعداد الكسرية)، تعد  تلك الخوارزميَّة أولُ برنامجٍ للحاسوب حتى قبل ظهورِ الحاسوبِ الذي يمكنه التعاملَ معها، وبذلك تُعتبرُ تلك العالمة أولُ مبرمجةٍ وفقًا للكثير من المراجع (أي أنَّ أولَ مبرمجٍ هو امرأة).</p>

<p>وبعد ذلك بنحو مئةِ عام، قام المهندسُ الألماني كونراد سوزى Konrad Zuse بتطوير الحاسوب Z1 في عام ألف وتسعمئة وسبعةٍ وثلاثين 1937 والذي يُعتبرُ أولُ حاسوبٍ ميكانيكي (مكتمل). تُظهر الصورة أدناه نموذجًا معادًا إنتاجه لذلك الحاسوب، والموجود في المتحفِ التقني الألماني في برلين.</p>

<p><img src="/assets/posts/z1-computer.webp" alt="Z1 Computer" /></p>

<p>وظهر بعد ذلك عدة حواسيب، منها الحاسوبُ الميكانيكي Harvard Mark I الصادرُ في عام 1944.</p>

<p><img src="/assets/posts/Harvard-Mark-I.webp" alt="Harvard-Mark-I" /></p>

<p>وباستخدام الصماماتِ المفرغة (vacuum tubes)، بدأت الحواسيبُ الرقمية بالظهور، حيث عملت تلك الصمامات عملَ البوابات المنطقية (logic gates). وبهذا يُذكر حاسوبُ ENIAC عام 1945 بصفته أولُ حاسوبٍ رقمي.</p>

<p><img src="/assets/posts/ENIAC.webp" alt="ENIAC" /></p>

<p>وكما ترى فقد كان حجمُه كبيرا جدا، حيث يملأُ مساحةَ مايقربُ من 550 مترٍ مربع ويزنُ 27 طنًا ويحوي آلافَ الصماماتِ المفرغة ويمكنه إجراءُ حوالَي خمسةَ آلافِ عمليةِ طرحٍ وجمعٍ في الثانية.</p>

<p>وقد تحدثت عن الصمامات المفرغة والبوابات المنطقية في <a href="https://play.google.com/store/books/details/%D9%85%D9%84%D9%87%D9%85_%D8%A7%D9%84%D8%A5%D8%A8%D8%B1%D8%A7%D9%87%D9%8A%D9%85_%D8%A7%D9%84%D9%85%D9%86%D8%B7%D9%82_%D9%84%D8%B7%D9%84%D8%A7%D8%A8_%D8%B9%D9%84%D9%85_%D8%A7%D9%84%D8%AD%D8%A7%D8%B3%D9%88%D8%A8?id=Q7v_EAAAQBAJ">كتاب المنطق</a>.</p>

<p>وظهر بعد ذلك الحاسوب UNIVAC عام 1951 ذو الحجمِ الأصغر.</p>

<p><img src="/assets/posts/UNIVAC.webp" alt="UNIVAC" /></p>

<p><strong>ولكن ما الفرق بين الحواسيب الميكانيكية والإلكترونية؟</strong></p>

<p>لنقارنَ الحواسيب المكيانيكية الأخيرة مع الحواسيب الإلكترونية. حيث نحتاج في الحاسوب إلى التعاملِ مع الأصفار والواحدات. استخدمت الحواسيب الميكانيكية المُرحِّلات (Relays) لتمثيل الصفر والواحد.</p>

<p><img src="/assets/posts/المرحل.webp" alt="المرحِّل" /></p>

<p>المُرحِّل (والذي يستخدم في الجرس الكهربائي أيضًا) يعمل <em>عبر إعطائه طاقةٍ كهربائيةٍ صغيرة</em> بتفعيل الحقلِ المغناطيسي والذي يؤدي بدوره لجذب ذراعٍ حديدية مما يؤدي لعمل الدارة (يمثل ذلك الرقم 1  في الحاسوب)، وعند توقف التيار ينعدمُ المجالُ المغناطيسي وتعودُ الذراعُ لمكانها وتتوقفُ الدارةُ عن العمل (يمثل ذلك الرقم 0). لذا تطلبت الحواسيبُ الميكانيكية حركةً فيزيائيةً فعليةً لعملها، بينما تم الاستغناء عن الحركةِ الفيزيائية باستبدال المرحِّلات بالصمامات المفرغة.  وبالاستغناء عن الحركة لم تعد الأجهزة ميكانيكية بل أصبحت الكترونية تعمل وفق حركة الالكترونات فقط في الدارة (في الأسلاك) دون حركة قطع داخل الجهاز،  مما سرَّع من إجراءِ العملياتِ الحسابية.</p>

<p>تُعتبر الحواسيب الالكترونية التي تَستخدم الصمامات المفرغة على أنها الجيل الأول من الحواسيب.</p>

<p>ولكن ماذا عن الحواسيبِ الميكانيكية؟ أليست هي أيضًا أحدُ أجيالِ الحاسوب؟ نعم صحيح..إنها الجيلُ صفر! (لا أمزح)</p>

<p>وباختراع الترانزستور، والذي حل محلَ الصماماتِ المفرغة، تمكن العلماءُ من تصغيرِ حجمِ الحواسيبِ كثيرا إلى أن وصلت إلى ما هي عليه اليوم. وقد كان حاسوب TRADIC هو الأول الذي يَستخدم الترانزستورات عام 1954.</p>

<p><img src="/assets/posts/TRADIC-computer.png" alt="TRADIC computer" /></p>

<p>تُعتبر  الحواسيبُ التي تستخدمُ الترانزستورات الجيلَ الثاني من الحواسيب.
ثم ظهرتِ الداراتُ المتكاملة (Integrated circuits) وهي عبارة عن شرائح (chips) من موادِ نصفِ ناقلة، والتي تكون سيليكون غالبًا، وتحتوي على عدد كبير من الترانزستورات والمقاومات ومكوناتٍ إلكترونية أخرى لتشكل معًا شريحةً متكاملة. 
تدعى الحواسيب ذاتُ الداراتِ المتكاملة هذه بالجيل الثالث من الحواسيب. وهي على خلافِ حواسيبِ الجيل الثاني التي احتوت على ألواح من الدارات التي تحوي ترانزستورات منفصلة.
الداراتُ المتكاملة موجودةٌ في كلِّ حاسوبٍ اليوم، ولكنها أصبحت أصغر بكثير وتحوي عدد من الترانزستورات أكبر بكثير مما كانت عليه. الصورة التالية ﻷحد الدارات المتكاملة مع مخترعها روبرت نويس Robert Noyce  وتعود لعام 1959 ألفٍ وتسعمئة وتسعةٍ وخمسين.</p>

<p><img src="/assets/posts/دارة-متكاملة.png" alt="دارة متكاملة" /></p>

<p>والتي احتوت على بضعة آلاف من الترانزستورات. أما دارات اليوم فهي أصغر بكثير وتحوي على مليارات الترانزستورات. 
وهنا تم التفريق بين الجيل الثالث والرابع والخامس من الحواسيب بناء على عدد الترانزستورات في الدارات المتكاملة، حيث تسمى الدارات المتكاملة في الجيل الرابع من الحواسيب بـ Very Large Scale Integrated (VLSI) واحتوت في بداياتها على أكثر من 10 آلاف ترانزستور، وفي عمومها على عشرات الآلاف من الترانزستورات.
أما الجيل الخامس، والذي بدأ من ثمانينات القرن الماضي وحتى اليوم، فبدأت باحتوائها على مئات ثم ملايين ثم مليارات الترانزستورات في الدارة المتكاملة الواحدة. ولذا سميت هذه الدارات بـ Ultra Large Scale Integration (ULSI).</p>

<h2 id="قانون-مور">قانون مور</h2>

<p>إذا كنت تدرس هندسة الحاسوب، أو تقرأ وتشاهد بعض المقاطع المتعلقة بالتقنية، فلا شك بأنك ستسمع عن شيء يدعى قانون مور (Moore’s law)، لذا وجب علي أن أحدثك عنه سريعا، فهو بسيط، قال شخص يدعى جوردِن مور Gordon Moore في عام 1965 بأن عدد الترانزستورات المضمنة في شريحةٍ (chip) ذاتِ حجمٍ ثابت سيتضاعف كلَّ سنتين تقريبًا. وقد صدَّق تطور التقنية تلك الفرضية أو القانون:</p>

<p><img src="/assets/posts/قانون-مور.png" alt="قانون مور" /></p>

<p>هل برأيك أن قانونَ مور سيبقى صحيحًا، وأن تطورَ التقنية سيستمر بنفس ذلك المعدل؟</p>

<h2 id="أنواع-الحواسيب">أنواع الحواسيب</h2>

<p>تختلف أنواع الحواسيبُ وفق الهدف، حيث لدينا الآلةُ الحاسبة، Playstation المخصصُ للألعاب، الهاتفُ الذكي للتواصلِ بحريةٍ أثناءَ التنقل، والحواسيبُ الثابتةِ المختلفة ذاتُ الأغراضِ العامة.</p>

<p>وتختلفُ وفقَ السرعةِ والأداء، فلدينا:</p>

<ul>
  <li>
    <p>الحاسوب الشخصي PC (Personal Computer): وهو حاسوب صغير بأسعارٍ غيرِ مرتفعة وللاستخداماتِ الشخصية. أُطلق عليه في ثمانينات القرن الماضي اسم microcomputer  ثم استُبدل ذلك الاسم بالاسم الحالي مع بداية هذا القرن. تَستخدمُ المؤسساتُ التجاريةِ كذلك الحواسيبِ الشخصية لمعالجةِ النصوص والنشرِ والمحاسبةِ والتطبيقاتِ الإدارية.</p>
  </li>
  <li>
    <p>الحاسوب الصغير Minicomputer: والذي بدأ في ستينات القرن الماضي. ويتميز بصِغَرِ حجمِهِ وانخفاضِ سِعرِه، ومازال يُستخدم إلى اليوم، فهو أيضًا يستهلكُ طاقةً أقل، والكثيرُ من أنواعِهِ لا تحوي مروحة أصلا مما يجعله صامتًا تمامًا، أما استخداماته فهي عمومًا التطبيقاتُ المكتبية وتصفحُ الإنترنت، ولا يُستخدم للتطبيقات والعمليات التي تتطلب مواردًا عالية.</p>
  </li>
</ul>

<p><img src="/assets/posts/mini-computer.jpg" alt="Mini computer" />
<em>A Gigabyte BRIX</em></p>

<ul>
  <li>الحاسوب المركزي Mainframe computer: حاسوبٌ كبيرٌ باهظُ الثمن يُستخدم لتخديم مئاتِ أو آلافِ المستخدمين في نفس الوقت، حيث يمكنه تنفيذُ عددٍ كبيرٍ من العمليات في نفسِ الوقت. وبالتالي يُستخدم في المؤسسات الكبيرة.</li>
</ul>

<p><img src="/assets/posts/IBM-z15-mainframe.jpg" alt="IBM-z15-mainframe" />
<em>IBM z15 mainframe</em></p>

<ul>
  <li>الحاسوب الفائق Supercomputer: وهو أسرعُ وأغلى حاسوبٍ متاحٍ اليوم. يُستخدم لتطبيقاتٍ متخصصةٍ جدًا تتطلب كمًّا هائلا من العمليات الحسابية، مثلِ أبحاثِ الطاقة النووية وتحليلِ المواقعِ الجغرافية وتوقعِ حالةِ الطقس وكذلك تحليلِ الشفرات (في مجال الأمن السيبراني).</li>
</ul>

<p><img src="/assets/posts/super-computer.jpg" alt="super-computer" />
<em>The IBM Blue Gene/P supercomputer “Intrepid” at Argonne National Laboratory</em></p>

<p>تطرح الفقرة أعلاه عدة أسئلة، بما فيها طريقة عمل الحاسوب بالضبط مع الأصفار والواحدات؟ وكيف يتم تمثيل النصوص والصوتيات والمرئيات بواسطة الأصفار والواحدات؟ 
ستجد إجابات مفصلة على مثل تلك الأسئلة في المقالات اللاحقة إن شاء الله.</p>

<p>للاطلاع:</p>

<ul>
  <li>
    <p>مقطع يُظهر طريقة استخدام أحد الأنواع الشائعة لآلة المعداد (<a href="https://www.youtube.com/watch?v=FTVXUG_PngE">https://www.youtube.com/watch?v=FTVXUG_PngE</a>) والذي يتحدث عن الاستخدام الأساسي فقط، دون الاستخدامات المعقدة لها!</p>
  </li>
  <li>
    <p>الجدول الزمني لتاريخ الحاسوب (إنجليزي):<a href="https://www.computerhistory.org/timeline/computers/">https://www.computerhistory.org/timeline/computers/</a></p>
  </li>
</ul>]]></content><author><name></name></author><category term="تعليم" /><summary type="html"><![CDATA[لنأخذ معًا نبذة عن بداية الحواسيب وتطورها وأنواعها]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mulham.github.io/assets/posts/%D8%AA%D8%A7%D8%B1%D9%8A%D8%AE-%D8%A7%D9%84%D8%AD%D9%88%D8%A7%D8%B3%D9%8A%D8%A8.webp" /><media:content medium="image" url="https://mulham.github.io/assets/posts/%D8%AA%D8%A7%D8%B1%D9%8A%D8%AE-%D8%A7%D9%84%D8%AD%D9%88%D8%A7%D8%B3%D9%8A%D8%A8.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">هل “الذكاء الاصطناعي” ذكاء بالفعل؟</title><link href="https://mulham.github.io/%D9%87%D9%84-%D8%A7%D9%84%D8%B0%D9%83%D8%A7%D8%A1-%D8%A7%D9%84%D8%B5%D9%86%D8%A7%D8%B9%D9%8A-%D8%B0%D9%83%D8%A7%D8%A1-%D8%A8%D8%A7%D9%84%D9%81%D8%B9%D9%84/" rel="alternate" type="text/html" title="هل “الذكاء الاصطناعي” ذكاء بالفعل؟" /><published>2024-10-21T00:00:00+03:00</published><updated>2024-10-21T00:00:00+03:00</updated><id>https://mulham.github.io/%D9%87%D9%84-%D8%A7%D9%84%D8%B0%D9%83%D8%A7%D8%A1-%D8%A7%D9%84%D8%B5%D9%86%D8%A7%D8%B9%D9%8A-%D8%B0%D9%83%D8%A7%D8%A1-%D8%A8%D8%A7%D9%84%D9%81%D8%B9%D9%84</id><content type="html" xml:base="https://mulham.github.io/%D9%87%D9%84-%D8%A7%D9%84%D8%B0%D9%83%D8%A7%D8%A1-%D8%A7%D9%84%D8%B5%D9%86%D8%A7%D8%B9%D9%8A-%D8%B0%D9%83%D8%A7%D8%A1-%D8%A8%D8%A7%D9%84%D9%81%D8%B9%D9%84/"><![CDATA[<p>نشاهد في الصور أعلاه صورة كلب أمام رقعة الشطرنج، وصورة أخرى لطفلة، وأخرى لمسنين يلعبون الشطرنج.
أعتقد أننا متفقون أن الكلب لا يمكن له أن يلعب الشطرنج، فليس بمقدوره فهم قواعدها واللعب وفقًا لتلك القواعد. ولكن هل نقول نتيجة لذلك أن الكلب غبي؟
وبالنسبة للمسنين الذين يلعبون باحترافية نتيجة ممارستهم لتلك اللعبة لسنوات طويلة وحفظهم تقريبًا لجميع الحركات فيها، هل نقول عنهم أنهم أذكياء؟
لو أنك تحفظ حركات معينة تؤدي لهزيمة خصمك في لعبة الشطرنج، فهذا لا يعكس ذكاءك، أليس كذلك؟
أما الطفلة، فلو علمناها قواعد الشطرنج للتو، ولعبنا معها، وأظهرت مقدرتها على التفكير، وإنشاء خطة ذكية في عقلها ثم تنفيذها، فهنا نقول عنها أنها ذكية حقًا، ﻷنها لم يسبق لها أن رأت مثل تلك الخطة من قبل، وقامت هي بابتكارها.
يشبه الحاسوب في الأمثلة أعلاه مثال المسنين، فالحاسوب لديه ذاكرة كبيرة، ويمكنه تخزين كافة حركات وحالات لوحة الشطرنج، أي جميع الحالات على الإطلاق! وكذلك حفظ أفضل حركة يواجه بها الخصم في كل حالة، فهل هذا ذكاء؟ 
لا يوجد في الواقع تعريف متفق عليه للذكاء، ولكنني أعتقد شخصيًا أن الكائن الذكي يجب أن يتصف بصفات عدة، منها الإدراك والقدرة على الاستنتاج والتخطيط. فهل الآلة تدرك؟ وهل يمكنها أن تخطط وتضع طريقة عملها بمفردها؟</p>

<h2 id="مبالغات-البشر">مبالغات البشر</h2>

<p>إذا كنت من مواليد التسعينات، وقد عاصرت ظهور الهواتف النقالة الأولى، فلا شك أنك كنت منبهرًا بذلك الاختراع.</p>

<p><img src="/assets/posts/c4638d24be1846db8189c69b025c07bc.jpg" alt="هاتف محمول" /></p>

<p>هاتف تأخذه معك أينما تريد، وتتحدث مع من تريد وأنت تسير في الشارع!  لا شك أيضًا أنك سمعت الكثير من عبارات الدهشة والانبهار ممن حولك، رغم ضعف مزايا تلك الهواتف مقارنةً بهواتف اليوم، والتي يُقال عنها اليوم أنها ذكية. 
في كل مرة يخترع الإنسان شيئًا جديدًا، يكون ذلك الاختراع مبهرًا له ولمن حوله، ولا يخلو الأمر من المبالغات و “الشطحات” في عبارات الدعاية والتسويق. 
فلقد سمعت ربما عن عبارات مثل “تفوق الذكاء الصناعي على الذكاء البشري”، هذه العبارات التي وُضعت إما من قِبل جهّال، أو أناس يقصدون نشر الجهل والتخاريف. 
وسأناقش معكم بعد قليل الأدوات التي يطلقون عليها صفة الذكاء، ومزاياها التي تجعلهم ينسبون صفة الذكاء إليها. ولكن لكي لا نخرج عن سياق فقرة المبالغات هذه، دعونا نكمل بالعودة للوراء، ﻷول حاسوب ميكانيكي، وما تم وصفه به آنذاك.
من الحواسيب الأولى والتي كانت حواسيب ميكانيكية، حاسوب “محرك الفَرق” (difference engine) لمصممه تشالز بابج (Charles Babbage). نشاهد في الصورة التالية نموذجًا لمحرك الفرق معاد بناؤه من قبل متحف العلوم في لندن.</p>

<p><img src="/assets/posts/5fc1c44fde6c4e219388a661649892e6.webp" alt="حاسوب &quot;محرك الفَرق&quot; تشالز بابج " /></p>

<p>وقد صنع نموذج مبسط منه آنذاك بسبب عدم وجود الإمكانيات الكافية، ذلك النموذج الذي يستطيع إجراء بعض الحسابات على أعداد من 6 خانات فقط. 
عندما رأت البارونة “بايرون” ذلك النموذج، وذلك عام 1833، قالت<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>:</p>

<blockquote>
  <p>“We both went to see the thinking machine (or so it seems) last Monday. It raised several Nos. to the 2nd and 3rd powers, and extracted the root of a Quadratic equation.”</p>
</blockquote>

<blockquote>
  <p>“لقد ذهبنا معًا الاثنين الماضي لمشاهدة الآلة التي تفكر (أو التي تبدو كذلك). حيث حَسَبت أعداد بِأُس 2  وأس 3، وكذلك حسبت جذر معادلة تربيعية”.</p>
</blockquote>

<p>على الرغم من أن برنامج الآلة الحاسبة على هاتفك اليوم أقوى من تلك الآلة بأكملها (بفضل قدرات مكونات هاتفك)، إلا أن “بايرون” ووفقًا لزمنها، وصفت تلك الآلة الحاسبة الميكانيكية ذات القدرات المحدودة بـ “الآلة المفكرة” ونسبت صفة التفكير لها. علمًا أن التفكير بعيد كل البعد عن تلك الآلة أو أي آلة مصنوعة من قبل الإنسان، الآن وإلى آخر الزمان.</p>

<h2 id="الذكاء-الصناعي">الذكاء الصناعي</h2>

<p>تعني كلمة “خوارزمية” طريقة حل، فلحل معادلة رياضية بسيطة، ننقل المجاهيل للطرف الأول، وهذه هي الخطوة الأولى، ثم ننقل المعاليم للطرف الثاني، وهي الخطوة الثانية، ثم نحسب المعاليم والمجاهيل معًا، وهي الخطوة الثالثة. تشكل هذه الخطوات طريقة الحل، أي الخوارزمية.</p>

<p>يُقصد بالذكاء الصناعي اليوم مايعرف بتعلم الآلة، على الرغم من أن مصطلح الذكاء الصناعي أشمل من تعلم الآلة. وعندما نتحدث عن “تعلم الآلة” فنحن نتحدث عن خوارزميات، وأول ما شاع منها خوارزمية اكتشاف الرسائل الضارة (spam) في البريد الإلكتروني. يمكن أن نأخذ تلك الخوارزمية بصفتها مثالًا بسيطًا لتعلم الآلة، حيث نحتاج لبيانات (رسائل كثيرة مصنفة يدويًا إما ضارة أو سليمة) وندخلها للآلة لبناء معادلة رياضية تحدد الصفات الرئيسية للرسائل الضارة. ويمكننا بعد بناء تلك المعادلة، إدخال رسائل جديدة للآلة، لتقوم بدورها بتخمين صنف الرسالة، إما ضارة أو لا. وتَعلم من خلال استخدامك للبريد الإلكتروني، أن البرنامج يقوم أحيانًا بوضع رسائل سليمة في مجلد الرسائل الضارة، وهذا ما يُعرف بخطأ موجب (false positive) أي أنه صنفها خطأً على أنها ضارة. وبالتالي يكون دور الآلة هنا هو مجرد التخمين، قد يصيب ذلك التخمين، وقد يُخطئ.</p>

<p>نقول عن “مودل” لتعلم الآلة أنه جيد، إذا تم تدريبه على الكثير من البيانات وبحيث وصلت الدقة فيه إلى 90% أو أكثر، وهذا يعني أن احتمالية الخطأ في تخمينه لا تتجاوز العشرة بالمئة.</p>

<p>لا يوجد “مودل” دقته مئة بالمئة. ولا يمكن أن يوجد. وبالتالي، بعد أن نعلم ذلك جيدًا، هل يمكن أن نعتمد على تخمين الآلة في قضايا حساسة، هي يمكن أن نسأل الآلة: “هل أبتر قدم هذا المريض أم لا” لتعطينا تخمينًا نعتمده في قرار البتر؟</p>

<p>والتخمين ذلك يعتمد بالتأكيد على البيانات التي تم إدخالها مسبقًا للآلة. ففي مثال السيارات ذاتية القيادة، لا يمكن للآلة أن تتوقف في حال وجود عائق لم تتعرف عليه مسبقًا (لم يكن موجودًا في البيانات التي تدربت عليها). فربما دربنا الآلة على عوائق مثل سيارة تقف أمامنا، وكذلك المشاة. ولكن ماذا عن حالات جديدة كليًا على الآلة، لا بد أن النتائج ستكون كارثية في حال اعتمدنا كليًا عليها. فمثلًا، بينما تقود سيارتك رأيت شجرة على يمين الطريق وهي تميل باتجاه اليسار، أي باتجاه الطريق، ومازالت تميل وتميل، من الواضح أنها ستقع على الطريق، لابد لك هنا أن تتوقف مسبقًا قبل أن تصبح تحتها مباشرة وتقع فوق رأسك، ولكن الآلة غالبًا لم تتدرب على مثل تلك الحالة، والآلة لا تدرك ولا تستنتج، وبالتالي لن تخمن أن الشجرة التي على يمين الطريق ستصبح بعد قليل في منتصفه! وإذا اعتمدت بدورك على القيادة الذاتية، فإنا لله وإنا إليه راجعون.</p>

<p><img src="/assets/posts/giphy.webp" alt="شجرة ترتطم بالسيارة" />
<em><a href="https://giphy.com/gifs/viralhog-viral-hog-tree-falls-across-highway-into-unlucky-motorist-6I4V6oLjM8J0SPv439">via GIPHY</a></em></p>

<ul>
  <li>ولكن يوجد اليوم سيارات ذاتية القيادة
نعم صحيح، بل يوجد أيضًا مترو (قطار الأنفاق) ذاتي القيادة، وهو في الخدمة حاليًا في العديد من المدن، وذلك بسبب وجود سكة واحدة، أي طريق ومسار واحد له، ودون وجود عوائق، وبالتالي نسبة الخطر تكون ضئيلة.</li>
</ul>

<p>تُظهر الصورة التالية مترو بدون سائق في مدينة اسطنبول</p>

<p><img src="/assets/posts/494ae3f895de452a8c9039e625789bcb.webp" alt="مترو بدون سائق في مدينة اسطنبول" /></p>

<p>أما بالنسبة للسيارات، حيث لا يوجد سكة للسيارة، وبالتالي يمكن أن تذهب السيارة بجميع الاتجاهات، ويمكن أن يظهر الكثير من العوائق في الطريق، سواء طفل أو طائر أو رصيف أو سيارة أو عربة، إلخ.. فهذا كله يجعل إمكانية الاعتماد عليها دون وجود سائق صعبًا جدًا، ولهذا لم يتم السماح باستخدام سيارات ذاتية القيادة في معظم البلدان، أما بالنسبة للأماكن والحالات التي رأيتُها وسمعت عنها، فهي سيارات كهربائية بسرعات منخفضة جدًا ومناطق مفتوحة ولا يوجد بها الكثير من السكان، وبهذا يتم تقليل نسبة الخطر بشكل كبير، فالسرعة المنخفضة لوحدها كافية لتخفيف نسبة الخطر كثيرًا.</p>

<p>وإذا أردنا أخذ مثال آخر، فتخيل أنك ركبت طائرة للسفر من مدينتك إلى مدينة أخرى، وقد سمعت عبر مكبرات الصوت أن الطائرة هذه ستُقلع بعد قليل وبدون طيار، فهي تطير عبر استخدام خوارزميات الذكاء الصناعي! هل ستكون سعيدًا حينها؟</p>

<p>الطيار التلقائي في الواقع موجود منذ زمن، حتى قبل انتشار خوارزميات تعلم الآلة، ولكن لا يمكن الاعتماد عليه كليًا، وإنما يستخدم بصفة مساعد ثانوي، حيث يتيح للطيار رفع يده قليلًا عن المقود ليتناول القهوة مثلًا، ولكن يبقى الطيار منتبهًا لكل شيء ومستعدًا للتدخل بشكل فوري. حتى أن مهنة مساعد الطيار لم يتم الاستغناء عنها.</p>

<p>أما بالنسبة للمسيّرات الحربية والتي تكون بدون طيار، فهي لا تحوي ركاب، ويتم التحكم بها لا سلكيًا من قبل الإنسان.</p>

<p>بعد أن علمنا أن كل ما تعطيه الآلة في النهاية هو مجرد تخمين، فيجب أن نتيقن أننا لا يمكننا الاعتماد عليها في اتخاذ قراراتنا، ويجب علينا استخدامها بالشكل الصحيح، باعتبارها أدوات مساعدة لا أكثر. وستبقى التقنية كذلك، فمنذ أن تم اختراع الآلة الحاسبة وإلى يومنا هذا، ظلت التقنية تساعدنا وتوفر علينا الوقت في بعض المهام الروتينية ذات الخطوات المحددة والمعروفة، أما اتخاذ القرار، فذلك شيء آخر. سنتعرف على كوارث الاعتماد في اتخاذ القرار على الآلة في فقرة لاحقة.</p>

<p>وأخيرًا..يُستخدم في هذا المجال كلمات غير صحيحة علميًا، مثل مصطلح “الشبكات العصبية” (neural networks) والتي يتم فيها الادعاء أن خوارزميات تعلم الآلة تعمل بشكل مشابه لعمل الشبكات العصبية في الكائنات الحية، وهذا خاطئ علميًا. إذًا يجب أن تعلم أن المصطلحات المستخدمة في هذا المجال من “ذكاء” و”شبكات عصبية” وماشابه، إنما هي مصطلحات دعائية لا علاقة لها بالعلم.</p>

<h2 id="ما-هي-المهن-التي-يمكن-أن-تقوم-بها-الآلة-بدل-الإنسان">ما هي المهن التي يمكن أن تقوم بها الآلة بدل الإنسان؟</h2>

<p>بما أن الآلة تعتمد في عملها على برمجة مسبقة، أو على التخمين، فلا يمكن استخدامها في أمور حساسة، مثل المجالات الطبية والعسكرية، وأي مجال قد يشكّل خطرًا على حياة الإنسان. (نعم، يُستخدم الذكاء الصناعي اليوم ليساعد الأطباء في تشخيص المرض مثلًا، وليس لاتخاذ القرار أو لكي يحل محل الطبيب)
لقد لاحظت أن الاشخاص الذين يتحدثون عن هذا الموضوع يخلطون بين البرمجة العادية للآلة، وبين موضوع تعلم الآلة الذي انتشر مؤخرًا. لنتعرف على الفرق بينهم عبر الأمثلة.</p>

<p>يمكننا عبر البرمجة العادية استخدام الآلة في مهام روتينية ذات خطوات محدودة تتكرر باستمرار ولا تتضمن مخاطر، فيمكن مثلًا استخدام روبوت لصناعة القهوة، لسببين:</p>

<ol>
  <li>تتألف هذه العملية من خطوات محددة ثابتة</li>
  <li>لا تتضمن هذه العملية أي خطر على حياة الإنسان</li>
</ol>

<p>فأكبر خطأ يمكن أن تقوم به الآلة هنا هو مقادير خاطئة في البن والسكر، أو أن يُسفح المزيج على الأرض مثلًا، وهذه كلها أخطاء مقبولة.</p>

<p>مثل المهمة المذكورة هذه لا تحتاج لتخمين شيء، فالعملية برمتها معروفة، وخطواتها قليلة وثابتة تتكرر باستمرار مع كل فنجان للقهوة.</p>

<p>وبالتالي تُتسخدم الآلات في المصانع لتوفير الوقت والجهد واليد العاملة، وذلك في الحالات التي يتحقق فيها البندين المذكورين أعلاه.</p>

<p>تُظهر الصورة التالية أحد مراحل صناعة السيارات والتي تتم كليًا بواسطة الآلة.</p>

<p><img src="/assets/posts/645b65e22cff4672b2799818392175c0.webp" alt="أحد مراحل صناعة السيارات آليًا" /></p>

<p>أما بالنسبة لتعلم الآلة، فيتم استخدامه عند جهلنا بالخطوات، ففي المثال المذكور سابقًا عن تحديد الرسائل الضارة للبريد الإلكتروني، لا يوجد لدينا مميزات رئيسية ثابتة للرسائل الضارة، وبهذا يمكن استخدام تعلم الآلة، بشرط وجود بيانات كثيرة (رسائل كثيرة مصنفة مسبقًا) وموارد كافية (للحساب وتخزين البيانات)، وهذان الأمران هو ما يحتاجه أي مشروع أو تطبيق لتعلم الآلة.</p>

<p>وبهذا نجد أن المهن التي يتم استخدام تعلم الآلة بها، والتي يمكن أن تحل الآلة بها محل الإنسان، هي مهن أيضًا روتينية، مثل مهنة إدخال البيانات، وخدمة العملاء، وما إلى ذلك، علمًا أن هذه المهن أيضًا لا يمكن الاعتماد فيها على الآلة تمامًا، فمثلًا، إذا كان لدينا جدولًا على ورقة مطبوعة ونريد إدخاله للحاسوب، فيمكن اليوم أن نقوم بتصويره، ويتم التعرف على الكتابة وإدخالها بواسطة خوارزميات تعلم الآلة، وهذا شيئًا مفيدًا فعلًا ويوفر علينا الكثير من الوقت، ولكن لا بد من تدقيق الجدول الناتج من هذه الخوارزميات مرة أخرى وتصويب الأخطاء التي نراها.</p>

<p>إن الاعتماد على الآلة في اتخاذ القرار من قبل تعلم الآلة والتعلم من الأخطاء أو ما يعرف بـ reinforcment learning إنما يستخدم في الألعاب فقط.</p>

<p>وماذا عن ChatGPT؟</p>

<p>يُعتبر هذا التطبيق اليوم من أبرز الأمثلة على تطبيقات تعلم الآلة، والذي يستخدم خوارزميات مخصصة لمعالجة لغات الإنسان، أو ما يُعرف بـ Natural Language Processing واختصارًا NLP. ويبقى كما تطبيقات تعلم الآلة، يحتاج للعنصرين الرئيسيين؛ البيانات الكثيرة والموارد العالية. فمع انتشار النصوص الكثيرة على الإنترنت وبشكل ضخم جدًا، أصبح بالإمكان عمل مودل لتعلم الآلة يتم تدريبه على تلك النصوص لتوليد نصوصًا جديدة، وبعبارة أوضح، لتخمين الكلمة اللاحقة لأي جملة.</p>

<p>لم يتم تدريب مودل ChatGPT على النصوص المتاحة للعامة فقط، بل على نصوص وكتب مدفوعة وغير متاحة للعامة، وفي ذلك خرق لحقوق التأليف والنشر، ولكنه لا يتضح تمامًا بسبب استبدال المودل لمرادفات الكلمات بدلًا من استخدامها كما هي، وبالتالي يصعب تحديد المصدر الذي تم استخدامه عند توليد نص ما، وهذه سلبية أخرى، حيث لا يمكن استخدام شات جي بي تي على أنه مرجعًا علميًا بسبب عدم معرفة المصدر الذي أخذ منه تلك المعلومات، وبالتالي يمكن أن تكون خاطئة، كما أن استبدال مرادفة مكان الأخرى يسبب مشكلة في النصوص العلمية التي يتغير معناها بشكل كبير بحسب الكلمات المستخدمة.</p>

<h2 id="كوارث-الاعتماد-على-الآلة">كوارث الاعتماد على الآلة</h2>

<p>لقد أظهر فيلمًا وثائقيًا نشرته قناة DW على اليوتيوب، مساوئ الاعتماد على الآلة بشكل كامل في اتخاذ القرار. ففي هولندا مثلًا، قامت وزارة الداخلية باستخدام خوارزميات تعلم الآلة لتحديد المواطنين المشتبه بهم والذي يمكن أن يكونوا “إرهابيين”، وهنا تم تصنيف الكثير من المواطنين على أنهم خطرين أو “إرهابيين”، ودون معرفة السبب تمامًا، وحتى دون أن تعرف وزارة الداخلية المعايير التي تتخذها تلك الخوارزميات في تخميناتها تلك، وقد بدا لهم لاحقًا، أن أحد الحالات كان المواطن فيها مصنفًا على أنه خطر وقد كان ذلك الشخص يحمل جنسية أخرى، فقامت الخوارزمية بتصنيف كل شخص يحمل جنسية أخرى غير الجنسية الهولندية على أنه خطر!</p>

<p>وهناك حالات أخرى لحوادث كثيرة مأساوية نتجت من الاعتماد على خوارزميات تعلم الآلة بشكل أعمى، وهذا هو الاسخدام الخاطئ للآلة عمومًا، فالآلة وُجدت لتساعد الإنسان، لا لتحل محله أو تتخذ القرار عنه.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><a href="https://en.wikipedia.org/wiki/Difference_engine">https://en.wikipedia.org/wiki/Difference_engine</a> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;&#xfe0e;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="ذكاء صناعي" /><summary type="html"><![CDATA[يناقش هذا المقال بشكل علمي حقيقة ما يسمى بـ "الذكاء الاصطناعي". ماهو الذكاء؟]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mulham.github.io/assets/posts/a0e17e55683c4f0d84c948ee47e7efb7.webp" /><media:content medium="image" url="https://mulham.github.io/assets/posts/a0e17e55683c4f0d84c948ee47e7efb7.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">فنون البرمجة</title><link href="https://mulham.github.io/%D9%81%D9%86%D9%88%D9%86-%D8%A7%D9%84%D8%A8%D8%B1%D9%85%D8%AC%D8%A9/" rel="alternate" type="text/html" title="فنون البرمجة" /><published>2024-10-19T00:00:00+03:00</published><updated>2024-10-19T00:00:00+03:00</updated><id>https://mulham.github.io/%D9%81%D9%86%D9%88%D9%86-%D8%A7%D9%84%D8%A8%D8%B1%D9%85%D8%AC%D8%A9</id><content type="html" xml:base="https://mulham.github.io/%D9%81%D9%86%D9%88%D9%86-%D8%A7%D9%84%D8%A8%D8%B1%D9%85%D8%AC%D8%A9/"><![CDATA[<p>أذكر أن أول كتاب قرأته في البرمجة كان كتاب “تعلم البرمجة من الصفر مع بايثون 3” وهو مترجم من الفرنسية. حين فتحته وجدت بدايته تقول لي “أهلًا بك في مدرسة السحرة”! نعم لقد شعرت بنفسي دخلت مدرسة هاري بوتر وأمسكت بالعصا وبدأت أتعلم التعليمات اللازمة لتلقينها للحاسوب ليفعل لي ما أريد..شعور جميل. وهذه هي البرمجة حقيقةً، فهي أداة فعالة للتواصل مع الحاسوب ليقوم بفعل ما نريده منه ويوفر علينا الوقت لاحقًا.</p>

<p>سأناقش معكم في هذا المقال أشياء غريبة ومثيرة أنتجتها البرمجة.</p>

<h2 id="المرئيات">المرئيات</h2>

<p>سأخوض معك بدايةً ببعض التفاصيل الرياضية، ولكن لا تفزع! إنها مجرد تفاصيل أولية، ثم أذكر لك نتيجتها الغريبة التي تم الحصول عليها.</p>

<p>نعلم أن الرياضيات تعبّر عمومًا عن أشياء منطقية، فواحد زائد واحد يساوي اثنان. ولكن الحال ليس دائمًا كذلك، فقد نظر علماء الرياضيات ووجدوا أن مربع أي عدد سيُنتج دائمًا عددًا موجبًا:</p>

\[(2)^2 = 4\]

\[(-2)^2 = 4\]

<p>فلم يعجبهم ذلك، فلِمَ لا يكون لدينا عددًا يُنتِج مربعه عددًا سالبًا؟ أليست هذه فكرة جميلة؟ أجاب العالَم بأن ذلك غير منطقي، فقالوا لنفسهم ومن يكترث؟ يكفي أننا نريد ذلك! ولكن لكي يشرّعوا ذلك سموه بالعدد التخيلي (imaginary number)، حيث يكون مربعه ناقص واحد:</p>

\[i^2 = -1\]

<p>(وُضعت هذه الأعداد في الواقع لتمثيل المقاييس الصغيرة جدًا والمرتبطة بالذرات والإلكترونات)</p>

<p>حسنًا، ها قد تحقق الحلم، وقد فتح ذلك بابًا ﻷشياءٍ غريبة غير متوقعة..</p>

<p>أصبح لدينا الآن أعدادًا حقيقة وأعدادًا تخيلية. لننظر أولًا لسلوك الأعداد الحقيقة، وليكن لدينا الدالة f(x) وفق التالي:</p>

<p>f(x) = x +1</p>

<p>لنبدأ مثلًا بإعطاء قيمة 1 لـ x، ستصبح النتيجة 2 ، لنستمر بزيادة 1، فتصبح النتيجة 3 ثم 4 ثم خمسة وهكذا، يمكنك مباشرة فهم سلوك هذه الدالة إلى مالانهاية، فسنبقى دائمًا نضيف واحدًا للناتج، وسيعطي ذلك بيانيًا خطًا مستقيمًا:</p>

<p><img src="/assets/posts/a337d3e60f1a459599c8b02cdf220914.png" alt="مخطط بياني يعبر عن المعادلة f(x) = x+1" /></p>

<p>وإذا نظرنا ﻷي دالة تحوي أعدادًا حقيقة فقط، فسنجد أن سلوكها مفهومًا وواضحًا، سواء كانت تعطي خط مستقيم أو منحني. 
و لنعد الآن إلى الأعداد التخيلية، حيث نسمي أي دالة تحوي عددًا تخيليًا بالعدد المعقد:</p>

\[f(x) = (x + 0.8i)^2\]

<p>وإذا أعطينا x قيمة 0.6 مثلًا، لنسير بخطوات بسيطة، ثم عوضنا الناتج مجددًا بـ x، فنجد أن سلوك الدالة غير مفهوم، فالقيمة الناتجة مختلفة تمامًا في كل مرة، وينتج الرسم البياني التالي:</p>

<p><img src="/assets/posts/9498a9c64c554dd9bf135be7fda7fcb8.png" alt="مخطط بياني يعبر عن المعادلة التي تحوي عددا عقديا" /></p>

<p>حيث نلاحظ أن الخطوات مختلفة في كل مرة ولا يوجد نمط واضح لهذه الدالة. والآن لنسأل أنفسنا، هل هذا السلوك غير الواضح ذو الخطوات المختلفة في كل مرة يمكن أن يُنتج لنا شيئًا مفيدًا؟</p>

<p>لقد قام علماء الرياضيات بدراسة هذا السلوك الغريب في سبعينيات القرن الماضي، حيث قاموا بدراسة مجموعة من الأعداد المعقدة c حيث لا تصل فيها الدالة التالية إلى اللانهاية:</p>

\[f_c(z) = z^2 + c\]

<p>بإعطاء z القيمة 0 وإنشاء سلسلة تبدأ من $f_c(0)$ ثم $f_c(f_c(0))$ إلى آخره..تبقى القيم الناتجة محصورة بمجال محدود. وقد تم تمثيل القيم الناتجة من هذه المجموعة بشكل مرئي، حيث تم تمثيل ذلك بمربع على محور الإحداثيات ضمن مجال معين، حيث يكون كل مربع جزئي فيه هو القيمة المدخلة للدالة، وإذا كانت القيمة الناتجة تقع ضمن المربع فيتم تلوين المربع باللون الأسود، أما إذا كانت القيمة الناتجة من الدالة تقع خارج المربع ذلك، فيتم إعطاء المربع الجزئي لون مختلف بناء على مدى خروج القيمة عن المربع المحدد. وقد نتج عن ذلك التمثيل التالي:</p>

<p><img src="/assets/posts/32e5a321c24b4fdd8ef55aa46e5578f5.png" alt="Benoit Mandelbrot" /></p>

<p>حيث نرى المربع الكبير الذي ذكرناه والمربعات الجزئية التي تحمل ألوان مختلفة وفق ما ذكرناه أيضًا. بعد ذلك قام عالم الرياضيات بينوا ماندلبرو (Benoit Mandelbrot) الظاهر في الصورة أدناه بتمثيل ذلك بتصوير عالي الدقة.</p>

<p><img src="/assets/posts/3f0e92bfe9a34146a084a66a8d678ee9.webp" alt="صورة لعالم الرياضيات بينوا ماندلبرو" />
ونتج عن ذلك الصورة التالية، حيث نرى أنه باستمرار تكبيرها سيظهر لنا دائمًا أشكال جديدة مختلفة وغير مكررة، وذلك بسبب السلوك غير النمطي للأعداد المعقدة.</p>

<p><a href="https://en.wikipedia.org/wiki/File:Mandelbrot_sequence_new.gif">https://en.wikipedia.org/wiki/File:Mandelbrot_sequence_new.gif</a></p>

<p>وتم تسمية هذه المجموعة بمجموعة ماندلبرو  (بالإنجليزية Mandelbrot set ) بناء على العالم الأخير المذكور.</p>

<p>تم إنتاج الصورة أعلاه عام 1980 ومن أحد أجهزة IBM، حيث كانت الحواسيب باهظة الثمن وغير متوفرة للجميع، ومن هنا نكون قد فتحنا الباب لتصاوير غريبة يمكن أن تنتجها الحواسيب، خاصة بعد تطورها ورخص ثمنها وإتاحتها للعامة.</p>

<p>وفي سياق آخر ضمن حديثنا عن المرئيات، أصبح لدينا كم كبير من الأفلام المصنوعة من خلال الحاسوب، ونتكلم بالأخص عن الأفلام المعمولة بالكامل (مكان التصوير والإضاءة واللقطات) من خلال الحاسوب مثل الأفلام ثلاثية الأبعاد.
<img src="/assets/posts/cac10f44fa1c43a19d12e450e475f7b4.webp" alt="أفلام ثري دي" /></p>

<p>لا أدري إن كنا نحتاج هنا للتذكير بأن البرامج التي تُنتج هذه الأفلام هي برمجيات معمولة بلغات البرمجة، وأن عملية إنتاج وتصدير الأفلام (rendering) هي عبارة عن عمليات حسابية. بل في الواقع، لا نحتاج أصلًا لوجود واجهة (محررات الفيديو) لصناعة المقاطع المصورة، فالواجهات بالأصل وُضعت لعامة الناس التي لا تعلم البرمجة لتسهيل استخدامهم للحاسوب ولوظائفه، وهناك الكثير من المقاطع المصورة المصنوعة بدون أي محرر فيديو وباستخدام البرمجة بشكل مباشر، وإذا أردنا مثالًا حديثًا نوعًا ما على ذلك فيمكن ذكر القناة 3Blue1Brown على اليوتيوب، وهي قناة تعليمية  تتناول مواضيع في الرياضيات والفيزياء، وقام منشؤها بتطوير مكتبة للغة بايثون أسماها Manim (Math animation) وهي خاصة بصنع الرسوم المتحركة المتعلقة بالمعادلات الرياضية والرسوم البيانية ثنائية وثلاثية الأبعاد، ويصنع معظم مقاطعه بواسطتها، وبفضل طرحه للمكتبة (الكود البرمجي) بشكل مجاني ومفتوح المصدر، فقد قام المجتمع البرمجي بتطويرها باسم Manim community ووضع شرح وموقع تعريفي لها. والواقع أن مكتبة تحريك الرسوم تلك هي التي أسهمت بشكل رئيسي (برأيي) بجعل مقاطع القناة تبدو أصلية وجديدة، وساهمت طبعًا بتبسيط الأفكار وتوضيحها بشكل غير مسبوق، مما أدى لانتشار المحتوى بشكل كبير وترجمته (دبلجة المقاطع) كذلك لعدة لغات.</p>

<p>وبالحديث عن خوارزميات ما يسمى بـ “الذكاء الصناعي” وخوارزمياته التي تطورت كثيرًا بالتزامن مع تطور الأجهزة وسرعة الحساب، أصبح بالإمكان وباستخدام مودلات تعلم الآلة والتي تسمى Generative models إنتاج صورًا ﻷشخاص غير موجودين في الحقيقة، وذلك عبر دمج عدة صور مع بعضها، مثل أخذ العينين من شخص حقيقي ووضعهم مع أنف من شخص آخر وهكذا، ولكن الصور الناتجة لا تبدو شاذة بسبب تحسين الأعضاء المجمعة لتبدو بشكل متسق ومتناسب، مثل الصورة هذه المولدة تلقائيًا من أحد المودلات تلك:</p>

<p><img src="/assets/posts/c9579e5edaaf4782a1a28bf1ea39c4d3.webp" alt="صورة مولدة عبر الذكاء الصناعي" /></p>

<p>وقد سمعنا كذلك عن خوارزميات اكتشاف العناصر في الصور (object detection)، مثل التي تقوم بالتعرف على الوجه، أو على وجود قطة في الصورة، أو على أرقام لوحة السيارة، وما إلى ذلك. ولكن ما رأيك في العملية العكسية؟ أي إعطاء صورة لا تحوي مثلًا أي كلب فيها، ثم نطلب من مودل تعلم الآلة إيجاد وإبراز كل الكلاب الموجودة في تلك الصورة..لنجرب</p>

<p><img src="/assets/posts/d4c38cc2bc114d53b52c59c210bcb1dd.webp" alt="صورة طحالب في البحر" /></p>

<p>كما ترى فالصورة أعلاه لا تحوي أي كلب فيها، عند طلب إبراز الكلاب في الصورة من مودل تعلم الآلة نحصل على التالي:</p>

<p><img src="/assets/posts/d0d0064fe26144d19f41cb6b8a1a4525.webp" alt="صورة مولدة عبر الذكاء الصناعي" /></p>

<p>وعند طلب زيادة نسبة الإبراز والوضوح للكلاب في الصورة نحصل على التالي:</p>

<p><img src="/assets/posts/e6055de15c1b423f94701d45e51aaf98.webp" alt="صورة مولدة عبر الذكاء الصناعي" /></p>

<p>وكما تلاحظ، فقد نتج لنا أشياء خرافية وأضغاث أحلام. صور مثل الصورة أعلاه أُسميها أنا صورًا مشوهة، ويسميها البعض فن، ولكن البرنامج الذي يولد مثل هذه الصور موضوع بالأصل من أحد مهندسي جوجل باسم DeepDream. فإذا بحثت على الإنترنت عن هذا الاسم ستجد الكثير من الصور المشوهة، أو الكثير من الفن..</p>

<p>وفي سياق المرئيات لا بد أيضًا من الإشارة إلى البرمجيات التي أُطلق عليها Deep fake والتي تقوم باستبدال وجه شخص ما في مقطع مصور بوجه شخص آخر مأخوذًا من صورة. أي يمكن مثلًا وضع وجهك بدلًا من وجه مقدم الأخبار أو رئيس الجمهورية وهو يلقى خطابًا، ويبدو وكأنك أنت من يتحدث، حيث يتم التعرف على أعضاء وأجزاء وجهك في الصورة المعطاة وتحريكها وفقًا لحركة وتعابير وجه الشخص الأصلي في المقطع.. ولكن ماذا عن الصوت؟</p>

<h2 id="الصوتيات">الصوتيات</h2>

<p>لقد بدأ الاهتمام بتمثيل الإشارات الصوتية منذ بداية القرن الماضي مع بالتزامن مع ظهور اختراعات مثل الهاتف والراديو. وقد تحدثنا في مسار “أسس علم الحاسوب” عن طريقة تمثيل تلك الإشارات في الحاسوب.
وبحديثنا عن البرمجة، فقد ظهرت عدة لغات برمجة تهدف لبرمجة الموسيقا! بعبارة أخرى لتأليف الموسيقا عبر البرمجة، ويتم فيها استخدام الحلقات والشروط والمفاهيم المنطقية ﻷي لغة برمجة. من تلك اللغات لغة sonic pi. بالإضافة لمكتبات مثل مكتبة jfugue و JMusic للغة جافا. وغير ذلك. ويوجد اليوم طبعًا الكثير من برامج تحرير الموسيقى وتأليفها وتوزيعها (المصنوعة بلغات البرمجة المعروفة ومكتباتهاالخاصة للموسيقا، وبواجهات للمستخدم)، ويتم استخدام تلك البرامج في كل الألحان تقريبًا التي يتم إنتاجها في عصرنا الحالي.</p>

<p>ولا يقتصر موضوعنا هنا على تأليف الموسيقا، بل جوانب عدة أخرى، مثل استخراج المعلومات من الملفات الموسيقية (Music information retrieval)، ويشمل ذلك أيضًا عدة تطبيقات، أحدها تصنيف الملفات الموسيقية، مثل موسيقى كلاسيكية وجاز وروك وما إلى ذلك، وهو موضوع بحثي مستمر. وفي نفس السياق تُنشر أبحاث عن تحديد نوع الطائر مثلًا من خلال الصوت، أو تحديد اللغة المستخدمة في المقطع الصوتي، وكلها مواضيع بحثية.</p>

<p>من التطبيقات الأخرى كذلك هو كتابة النوتة الموسيقية بشكل تلقائي من الملفات (Automatic music transcription) ويمكنك العثور اليوم على خدمات عبر الإنترنت توفر ذلك، مثل أن تقوم أنت بالعزف على آلة ما، أو حتى مجرد الغناء، ليتم كتابة النوتة الموسيقية للحن. ولكن إذا احتوى المقطع الموسيقي على عدة آلات، فستنخفض دقة صحة النوتة المولّدة تلقائيًا بشكل كبير.</p>

<p>هذا بالإضافة طبعًا لتطبيقات نستخدمها ونستفيد منها جميعًا اليوم، مثل توليد النص تلقائيًا من المقاطع الصوتية (وهذا مشابه لتوليد النوتة الموسيقية)، وكذلك الترجمة الفورية الآلية. ولكن الدقة هنا (أي صحة النص المولّد) أيضًا تختلف كثيرًا وبحسب لغة المقطع الصوتي ووضوحه.</p>

<p>وكما في المرئيات حيث يمكن إنتاج فيديو مزيف لك، يمكن هنا إنتاج مقطع مزيف لصوتك عبر ما يعرف بـ audio deepfake. والتي يُقال أنا وُضعت بدايةً لأغراض حسنة، مثل إنتاج كتب صوتية بصوتك، وهذا يوفر عليك الكثير من الوقت (رغم انخفاض الجودة مقارنة بقراءة النصوص بنفسك)، كذلك لمساعدة الناس الذين فقدوا صوتهم نتيجة لأمراض معينة على إعادة صوتهم بهذه الطريقة. ولكن ذلك فتح بابًا لاستغلال ذلك تجاريًا ولأغراض سيئة، وقد سمعنا بالفعل عن العديد من عمليات الاحتيال التي حدثت مؤخرًا والتي اعتمدت بشكل رئيسي على هذه التقنية.</p>

<h2 id="البرمجة-الفنية">البرمجة الفنية</h2>

<p>نناقش هنا بعض الأكواد التي كُتبت حقًا بشكل فني، وأولها هو مفهوم الكود المُبهم (obfuscated code)، يستخدم هذا المصطلح بشكل رئيسي في مجال أمن المعلومات حيث يتم تعديل الكود ليكون غير قابل للقراءة والتحليل، ولكننا نقصد هنا بتعديل الكود ﻷسباب فنية بحتة، بحيث يشكّل لوحة فنية! فمن المعلوم أن لغات البرمجة تتجاهل الفراغات، لذا يمكن عبر استخدام العدد الذي نرغب من الفراغات ضمن الكود إنشاء أشكال مختلفة للكود، كما في المثال التالي:</p>

<p><img src="/assets/posts/663c62b28b174ae08135d82efeea39cf.png" alt="obfuscated code" /></p>

<p>وهو كود مكتوب بلغة سي، وتم تعديله بالفراغات ليأخذ شكل الكعكة (donut)، وعند تشغيله يظهر الشكل المتحرك التالي على التيرمينال (موجه الأوامر):</p>

<p><a href="https://qph.cf2.quoracdn.net/main-qimg-b8bd8e9ef1120fc69f2766449763d627">https://qph.cf2.quoracdn.net/main-qimg-b8bd8e9ef1120fc69f2766449763d627</a></p>

<p>مصدر الكود: <a href="https://www.a1k0n.net/2006/09/15/obfuscated-c-donut.html">https://www.a1k0n.net/2006/09/15/obfuscated-c-donut.html</a></p>

<p>وهناك الكثير من الأمثلة المشابهة، صحيح أن الكود هذا لا يحوي أي فائدة، ولكننا نتحدث عن الفن هنا..</p>

<p>وبعيدًا عن موضوع الأكواد المعدلة، الكود التالي هو كود بسيط بلغة جافا سكريبت، هل يمكنك تخمين ناتجه؟</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span><span class="c1">//(c)2010 Oscar Toledo G.</span>
<span class="kd">var</span> <span class="nx">B</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="p">[],</span><span class="nx">G</span><span class="o">=</span><span class="mi">120</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="mi">1</span><span class="nx">e4</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span>
<span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">99</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">306</span><span class="p">,</span><span class="mi">297</span><span class="p">,</span><span class="mi">495</span><span class="p">,</span><span class="mi">846</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span>
<span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="o">-</span><span class="mi">11</span><span class="p">,</span><span class="o">-</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="o">-</span><span class="mi">9</span><span class="p">,</span><span class="o">-</span><span class="mi">11</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="o">-</span><span class="mi">20</span><span class="p">,</span><span class="o">-</span><span class="mi">21</span><span class="p">,</span><span class="o">-</span><span class="mi">19</span><span class="p">,</span><span class="o">-</span><span class="mi">12</span><span class="p">,</span><span class="o">-</span><span class="mi">8</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">21</span><span class="p">];</span><span class="kd">function</span>
<span class="nf">X</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">S</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">N</span><span class="o">=-</span><span class="nx">M</span><span class="o">*</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="mi">78</span><span class="o">-</span><span class="nx">h</span><span class="o">&lt;&lt;</span><span class="nx">x</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">y</span><span class="p">?</span><span class="o">-</span><span class="nx">x</span><span class="p">:</span><span class="nx">x</span><span class="p">;</span>
<span class="nx">y</span><span class="o">^=</span><span class="mi">8</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">w</span><span class="o">||</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&gt;=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nc">X</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">M</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="o">=</span><span class="nx">O</span><span class="p">]){</span><span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="o">&amp;</span><span class="nx">z</span><span class="o">^</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">&lt;</span><span class="mi">7</span><span class="p">){</span><span class="nx">A</span><span class="o">=</span><span class="nx">q</span><span class="o">--&amp;</span>
<span class="mi">2</span><span class="p">?</span><span class="mi">8</span><span class="p">:</span><span class="mi">4</span><span class="p">;</span><span class="nx">C</span><span class="o">=</span><span class="nx">o</span><span class="o">-</span><span class="mi">9</span><span class="o">&amp;</span><span class="nx">z</span><span class="p">?[</span><span class="mi">53</span><span class="p">,</span><span class="mi">47</span><span class="p">,</span><span class="mi">61</span><span class="p">,</span><span class="mi">51</span><span class="p">,</span><span class="mi">47</span><span class="p">,</span><span class="mi">47</span><span class="p">][</span><span class="nx">q</span><span class="p">]:</span><span class="mi">57</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="nx">r</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="o">+=</span><span class="nx">l</span><span class="p">[</span><span class="nx">C</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">w</span><span class="o">|</span><span class="nx">p</span><span class="o">==</span><span class="nx">w</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">q</span><span class="o">|</span><span class="nx">p</span><span class="o">+</span><span class="nx">a</span><span class="o">-</span><span class="nx">S</span><span class="p">?</span><span class="mi">0</span>
<span class="p">:</span><span class="nx">S</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="o">&amp;</span><span class="p">(</span><span class="o">!!</span><span class="nx">q</span><span class="o">|</span><span class="nx">A</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">||!!</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="mi">1</span><span class="o">&amp;</span><span class="nx">z</span><span class="o">^</span><span class="nx">y</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">|</span><span class="nx">A</span><span class="o">&gt;</span><span class="mi">2</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">=!</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span><span class="mi">2</span><span class="o">&amp;</span><span class="mi">7</span><span class="p">))</span><span class="k">return</span> <span class="nx">y</span><span class="o">^=</span><span class="mi">8</span><span class="p">,</span><span class="nx">I</span><span class="p">[</span><span class="nx">G</span><span class="o">--</span><span class="p">]</span><span class="o">=</span>
<span class="nx">O</span><span class="p">,</span><span class="nx">K</span><span class="p">;</span><span class="nx">J</span><span class="o">=</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="o">&amp;</span><span class="nx">z</span><span class="p">;</span><span class="nx">E</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="o">-</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">z</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nx">q</span><span class="o">|</span><span class="nx">E</span><span class="o">-</span><span class="mi">7</span><span class="p">?</span><span class="nx">n</span><span class="p">:(</span><span class="nx">n</span><span class="o">+=</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="o">^</span><span class="nx">y</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;=</span><span class="nx">t</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">r</span><span class="p">?</span><span class="nx">l</span><span class="p">[</span><span class="nx">r</span><span class="o">&amp;</span><span class="mi">7</span><span class="o">|</span><span class="mi">32</span><span class="p">]</span><span class="o">-</span><span class="nx">h</span><span class="o">-</span><span class="nx">q</span><span class="p">:</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span>
<span class="nx">s</span><span class="p">)</span><span class="nx">L</span><span class="o">+=</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">q</span><span class="p">?</span><span class="nx">l</span><span class="p">[(</span><span class="nx">p</span><span class="o">-</span><span class="nx">p</span><span class="o">%</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">x</span><span class="o">+</span><span class="mi">37</span><span class="p">]</span><span class="o">-</span><span class="nx">l</span><span class="p">[(</span><span class="nx">O</span><span class="o">-</span><span class="nx">O</span><span class="o">%</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">x</span><span class="o">+</span><span class="mi">37</span><span class="p">]</span><span class="o">+</span><span class="nx">l</span><span class="p">[</span><span class="nx">p</span><span class="o">%</span><span class="nx">x</span><span class="o">+</span><span class="mi">38</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="nx">q</span><span class="p">?</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="nx">l</span><span class="p">[</span><span class="nx">O</span><span class="o">%</span><span class="nx">x</span><span class="o">+</span><span class="mi">38</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">:</span>
<span class="o">!!</span><span class="nx">m</span><span class="o">*</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">!</span><span class="nx">q</span><span class="p">?</span><span class="o">!</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">^</span><span class="nx">n</span><span class="p">)</span><span class="o">+!</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">^</span><span class="nx">n</span><span class="p">)</span><span class="o">+</span><span class="nx">l</span><span class="p">[</span><span class="nx">n</span><span class="o">&amp;</span><span class="mi">7</span><span class="o">|</span><span class="mi">32</span><span class="p">]</span><span class="o">-</span><span class="mi">99</span><span class="o">+!!</span><span class="nx">g</span><span class="o">*</span><span class="mi">99</span><span class="o">+</span><span class="p">(</span><span class="nx">A</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">):</span><span class="mi">0</span><span class="p">)</span><span class="o">+!</span><span class="p">(</span><span class="nx">E</span><span class="o">^</span><span class="nx">y</span><span class="o">^</span><span class="mi">9</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">h</span>
<span class="o">||</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">s</span><span class="o">&amp;</span><span class="nx">s</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="o">&gt;</span><span class="nx">z</span><span class="o">|</span><span class="nx">d</span><span class="p">){</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">I</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">?(</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">I</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span><span class="nx">g</span><span class="p">?</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">L</span><span class="o">-=</span><span class="nc">X</span><span class="p">(</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">|</span><span class="nx">d</span><span class="p">?</span><span class="mi">0</span><span class="p">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">L</span>
<span class="o">-</span><span class="nx">N</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">I</span><span class="p">[</span><span class="nx">G</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">J</span><span class="o">=</span><span class="nx">q</span><span class="o">|</span><span class="nx">A</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">?</span><span class="mi">0</span><span class="p">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">h</span><span class="o">||</span><span class="nx">s</span><span class="o">-</span><span class="mi">1</span><span class="o">|</span><span class="nx">B</span><span class="o">-</span><span class="nx">O</span><span class="o">|</span><span class="nx">i</span><span class="o">-</span><span class="nx">n</span><span class="o">|</span><span class="nx">p</span><span class="o">-</span><span class="nx">b</span><span class="o">|</span><span class="nx">L</span><span class="o">&lt;-</span><span class="nx">M</span><span class="p">))</span><span class="k">return</span> <span class="nc">W</span><span class="p">(),</span><span class="nx">G</span><span class="o">--</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">J</span><span class="p">;</span>
<span class="nx">J</span><span class="o">=</span><span class="nx">q</span><span class="o">-</span><span class="mi">1</span><span class="o">|</span><span class="nx">A</span><span class="o">&lt;</span><span class="mi">7</span><span class="o">||</span><span class="nx">m</span><span class="o">||!</span><span class="nx">s</span><span class="o">|</span><span class="nx">d</span><span class="o">|</span><span class="nx">r</span><span class="o">|</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">z</span><span class="o">||</span><span class="nc">X</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">M</span><span class="p">;</span><span class="nx">I</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">m</span><span class="p">?(</span><span class="nx">I</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
<span class="nx">g</span><span class="p">?</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="mi">9</span><span class="o">^</span><span class="nx">y</span><span class="p">:</span><span class="mi">0</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="o">&gt;</span><span class="nx">N</span><span class="o">||</span><span class="nx">s</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="o">==</span><span class="nx">N</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nb">Math</span><span class="p">.</span><span class="nf">random</span><span class="p">()</span><span class="o">&lt;</span><span class="p">.</span><span class="mi">5</span><span class="p">){</span><span class="nx">I</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="nx">O</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">-</span><span class="nx">L</span>
<span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="nx">y</span><span class="o">^=</span><span class="mi">8</span><span class="p">,</span><span class="nx">G</span><span class="o">--</span><span class="p">,</span><span class="nx">L</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">O</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">p</span><span class="p">;}</span><span class="nx">N</span><span class="o">=</span><span class="nx">L</span><span class="p">;}</span><span class="nx">n</span><span class="o">+=</span><span class="nx">J</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">O</span><span class="p">?</span><span class="nx">g</span><span class="o">-</span><span class="mi">3</span><span class="p">:</span><span class="nx">g</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="nx">I</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">z</span><span class="o">|</span><span class="nx">I</span><span class="p">[</span>
<span class="nx">m</span><span class="o">+</span><span class="nx">O</span><span class="o">-</span><span class="nx">p</span><span class="p">]</span><span class="o">||</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="o">+=</span><span class="nx">p</span><span class="o">-</span><span class="nx">O</span><span class="p">])?</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span><span class="p">;}}}}</span><span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="o">&amp;</span><span class="nx">q</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">||</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">O</span><span class="p">,</span><span class="nx">q</span><span class="o">|</span><span class="nx">A</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">|</span><span class="nx">o</span><span class="o">&gt;</span><span class="nx">z</span><span class="o">&amp;!</span><span class="nx">r</span><span class="o">&amp;&amp;++</span><span class="nx">C</span><span class="o">*--</span><span class="nx">A</span><span class="p">));}}}</span><span class="k">while</span><span class="p">(</span>
<span class="o">++</span><span class="nx">O</span><span class="o">&gt;</span><span class="mi">98</span><span class="p">?</span><span class="nx">O</span><span class="o">=</span><span class="mi">20</span><span class="p">:</span><span class="nx">e</span><span class="o">-</span><span class="nx">O</span><span class="p">);</span><span class="k">return</span> <span class="nx">y</span><span class="o">^=</span><span class="mi">8</span><span class="p">,</span><span class="nx">G</span><span class="o">--</span><span class="p">,</span><span class="nx">N</span><span class="o">+</span><span class="nx">M</span><span class="o">*</span><span class="nx">M</span><span class="o">&amp;&amp;</span><span class="nx">N</span><span class="o">&gt;-</span><span class="nx">K</span><span class="o">+</span><span class="mi">1924</span><span class="o">|</span><span class="nx">d</span><span class="p">?</span><span class="nx">N</span><span class="p">:</span><span class="mi">0</span><span class="p">;}</span><span class="nx">B</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">y</span><span class="o">=</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">B</span><span class="o">++&lt;</span>
<span class="mi">120</span><span class="p">)</span><span class="nx">I</span><span class="p">[</span><span class="nx">B</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="o">%</span><span class="nx">x</span><span class="p">?</span><span class="nx">B</span><span class="o">/</span><span class="nx">x</span><span class="o">%</span><span class="nx">x</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">|</span><span class="nx">B</span><span class="o">%</span><span class="nx">x</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">?</span><span class="mi">7</span><span class="p">:</span><span class="nx">B</span><span class="o">/</span><span class="nx">x</span><span class="o">&amp;</span><span class="mi">4</span><span class="p">?</span><span class="mi">0</span><span class="p">:</span><span class="nx">l</span><span class="p">[</span><span class="nx">i</span><span class="o">++</span><span class="p">]</span><span class="o">|</span><span class="mi">16</span><span class="p">:</span><span class="mi">7</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span>
<span class="dl">"</span><span class="s2">&lt;table cellspacing=0 align=center&gt;</span><span class="dl">"</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">18</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span><span class="nx">a</span><span class="o">+=++</span><span class="nx">i</span><span class="o">%</span><span class="mi">10</span><span class="o">-</span><span class="mi">9</span><span class="p">?</span>
<span class="dl">"</span><span class="s2">&lt;th width=60 height=60 onclick=Y(</span><span class="dl">"</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="dl">"</span><span class="s2">) id=o</span><span class="dl">"</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span>
<span class="dl">"</span><span class="s2"> style='line-height:50px;font-size:50px;border:2px solid #dde' bgcolor=#</span><span class="dl">"</span><span class="o">+</span>
<span class="p">(</span><span class="nx">i</span><span class="o">*</span><span class="p">.</span><span class="mi">9</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">?</span><span class="dl">"</span><span class="s2">c0c</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">f0f</span><span class="dl">"</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">0f0&gt;</span><span class="dl">"</span><span class="p">:(</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="dl">"</span><span class="s2">&lt;tr&gt;</span><span class="dl">"</span><span class="p">));</span>
<span class="nx">a</span><span class="o">+=</span><span class="dl">"</span><span class="s2">&lt;th colspan=8&gt;&lt;select id=t style='font-size:20px'&gt;&lt;option&gt;&amp;#9819;&lt;option&gt;</span><span class="dl">"</span><span class="p">;</span>
<span class="nb">document</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="dl">"</span><span class="s2">&amp;#9820;&lt;option&gt;&amp;#9821;&lt;option&gt;&amp;#9822;&lt;/select&gt;&lt;/table&gt;</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">function</span> <span class="nf">W</span><span class="p">(){</span><span class="nx">B</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="mi">21</span><span class="p">;</span><span class="nx">p</span><span class="o">&lt;</span><span class="mi">99</span><span class="p">;</span><span class="o">++</span><span class="nx">p</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">o</span><span class="dl">"</span><span class="o">+</span><span class="nx">p</span><span class="p">)){</span><span class="nx">q</span><span class="p">.</span>
<span class="nx">innerHTML</span><span class="o">=</span><span class="dl">"</span><span class="se">\</span><span class="s2">xa0</span><span class="se">\</span><span class="s2">u265f</span><span class="se">\</span><span class="s2">u265a</span><span class="se">\</span><span class="s2">u265e</span><span class="se">\</span><span class="s2">u265d</span><span class="se">\</span><span class="s2">u265c</span><span class="se">\</span><span class="s2">u265b  </span><span class="se">\</span><span class="s2">u2659</span><span class="se">\</span><span class="s2">u2654</span><span class="se">\</span><span class="s2">u2658</span><span class="se">\</span><span class="s2">u2657</span><span class="se">\</span><span class="s2">u2656</span><span class="se">\</span><span class="s2">u2655</span><span class="dl">"</span><span class="p">.</span><span class="nf">charAt</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">z</span><span class="p">);</span>
<span class="nx">q</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">=</span><span class="nx">p</span><span class="o">==</span><span class="nx">B</span><span class="p">?</span><span class="dl">"</span><span class="s2">red</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">#dde</span><span class="dl">"</span><span class="p">;}}</span><span class="nc">W</span><span class="p">();</span>
<span class="kd">function</span> <span class="nf">Y</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">^</span><span class="nx">y</span><span class="p">)</span><span class="o">&amp;</span><span class="nx">z</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">&gt;</span><span class="mi">8</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="nc">W</span><span class="p">();}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&lt;</span><span class="mi">9</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">B</span><span class="p">]</span><span class="o">&amp;</span><span class="nx">z</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">i</span><span class="o">&amp;</span>
<span class="mi">7</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">&lt;</span><span class="mi">29</span><span class="o">|</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">90</span><span class="p">))</span><span class="nx">i</span><span class="o">=</span><span class="mi">14</span><span class="o">-</span><span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">t</span><span class="dl">"</span><span class="p">).</span><span class="nx">selectedIndex</span><span class="o">^</span><span class="nx">y</span><span class="p">;</span><span class="nc">X</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span>
<span class="nx">u</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="nf">setTimeout</span><span class="p">(</span><span class="dl">"</span><span class="s2">X(0,0,0,21,u,2/*ply*/),X(0,0,0,21,u,1)</span><span class="dl">"</span><span class="p">,</span><span class="mi">250</span><span class="p">);}}</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>يقوم الكود أعلاه بإنشاء لعبة شطرنج على المتصفح! نعم لقد قرأتها صحيحًا، ليس مجرد رسم لوح شطرنج، بل لعبة جاهزة للعب، وذلك بكود بسيط قصير في الجافا سكريبت يحوي كل قواعد الشطرنج.</p>

<p><img src="/assets/posts/504b3bedec864c42be6923b87c567d75.png" alt="لوح شطرنج" /></p>

<p>المصدر: <a href="https://nanochess.org/chess4.html">https://nanochess.org/chess4.html</a></p>

<p>وهناك الكثير من الأمثلة على أكواد قصيرة جدًا تقوم بإعطاء نتائج مذهلة.
دعني أسرد لك هذه الطرفة، حيث يُروى أنه في مسابقة للأكواد المعدلة (obfuscated codes) عام 2005، قام أحدهم بالاشتراك بالمسابقة بملف فارغ، وأرفق معه الشرح بأن الملف هو عبارة عن كود، إذا تم تنفيذه على المفسر (compiler) فلن يعطي أي ناتج، بعبارة أخرى، فالملف هو عبارة عن كود يقوم عند تنفيذه بطباعة الكود المصدري الخاص به، أي أنه كود يطبع نفسه. طبعا هنا اضطرت اللجنة لإضافة قاعدة للاشتراك بالمسابقة هو أن الكود يجب أن يتألف من حرف واحد على الأقل، ولكن إذا عدنا لفكرة “كود يطبع نفسه” فهذا شيء ليس سهلا أبدا، ولكن البشر يحبون فعل الأشياء الغريبة، فقد قاموا بالفعل بعمل ذلك..</p>

<p>فالكود التالي المكتوب بلغة سي شارب يقوم بطباعة نفسه عند التنفيذ</p>

<p><img src="/assets/posts/abb48b3369db4fc49893c92584c39266.webp" alt="مثال على كود يطبع نفسه بلغة سي شارب" /></p>

<p>ولكنه ليس مبهرًا تمامًا، إليك ما هو أقوى من ذلك، فالسطر التالي في جافا سكريبت يقوم تمامًا بطباعة نفسه، ويمكنك تجربته مباشرة على الـ console في المتصفح لديك:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nx">$</span><span class="o">=</span><span class="nx">_</span><span class="o">=&gt;</span><span class="s2">`$=</span><span class="p">${</span><span class="nx">$</span><span class="p">}</span><span class="s2">;$()`</span><span class="p">;</span><span class="nf">$</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/posts/3897f2a46925470eafc3b713ca429197.webp" alt="مثال على كود يطبع نفسه بلغة جافاسكريبت" /></p>

<p>ولكن هل هذا ممكن خارج لغات البرمجة بلغة مثل HTML؟ فمن المعلوم أن HTML ليست لغة برمجة وإنما لغة تنسيقية، ولكن هناك من قام بذلك بلغة HTML بالاستعانة أيضًا بلغة CSS التنسيقية أيضًا.</p>

<p><img src="/assets/posts/0c9e01c3713343939e11359f1a27c171.webp" alt="مثال على كود يطبع نفسه بلغة HTML" /></p>

<p>الفكرة الأغرب من كل ما ذكرناه إلى الآن موجودة في الكود التالي:</p>

<p><img src="/assets/posts/39201c2480be4083bf0cccaf039ce44b.webp" alt="مثال على كود يطبع نفسه" /></p>

<p>إذا نظرت بتمعن إلى الكود أعلاه، ستجد أن بداخله حيلة ذكية، فهو يحوي رموز تستخدم لإضافة تعليق بلغات مختلفة، أي أننا إذا قرأناه على أنه كود بلغة بايثون فنتجاهل بعض الأسطر والتعليمات بسبب وجود رمز التعليق الخاص ببايثون وهو المربع #، وإذا قرأناه على أنه لغة سي فنتجاهل الرموز <em>/ و /</em> الخاصة لإضافة تعليق بلغة سي ولغات أخرى. والسحر في هذا الكود أنه عند تنفيذه بلغة سي سيقوم بطباعة نفسه، وماذا إذا نفذناه على أنه كود بلغة روبي؟ سيقوم أيضًا بطباعة نفسه! هل يمكن ذلك بلغة بايثون؟ نعم سيطبع نفسه أيضًا، حسنًا..هل يمكن تجربته على أنه كود بيرل perl؟ نعم سيطبع نفسه كذلك!</p>

<p>وهنا نكون قد فتحنا الباب لفكرة جديدة، الكود الصالح بأكثر من لغة!</p>

<p>قام الياباني Yusuke Endoh بكتابة كود بلغة روبي بالشكل المعدل التالي:</p>

<p><img src="/assets/posts/8d2c9e589a914c5fb75f5119a172275c.png" alt="مثال على كود يولد نفسه" /></p>

<p>يقوم هذا البرنامج عند تنفيذه بإعطاء كود بلغة Rust، وعند تنفيذ ذلك الكود يعطي كودًا آخرا بلغة scala، والحلقة تستمر لتمر على 128 لغة برمجة إلى الوصول لبايثون والذي يُنتِج كودا بلغة R والذي ينتج كودا بلغة Ratfor يليه كود rc يليه كود REXX والذي ينتج بدوره كود روبي مجددًا. وهذه هي قائمة اللغات التي ينتجها ابتداء من روبي في منتصف اليسار.</p>

<p><img src="/assets/posts/035fc58308.webp" alt="Yusuke Endoh code" /></p>

<p>مصدر الكود على جتهب: <a href="https://github.com/mame/quine-relay">https://github.com/mame/quine-relay</a></p>

<p>من  الواضح أن هذا الكود ليس له أي فائدة، ولكنه مذهل حقًا، وأنا أعتقد أن الذي كتبه ذكي حقًا، وبرأيي أنه يعطينا مثالًا عن الذكاء الحقيقي.</p>

<h2 id="لغات-برمجة-غريبة">لغات برمجة غريبة</h2>

<p>وُضِع مصطلح “لغات البرمجة الباطنية” (esoteric programming languages / esolang)  للدلالة على لغات البرمجة الغريبة التي لم توضع لهدف البرمجة والاستخدام الحقيقي، ولكن لتنفيذ بعض الأفكار الغريبة وإثبات أن ذلك ممكنًا، وكذلك بصفته نوع من الفنون في عالم الحاسوب. من اللغات الغريبة القديمة لغة وُضعت عام 1993 تدعى (أعتذر عن الاسم) Brainfuck، ميزتها أنها صغيرة جدًا، حيث تحوي فقط ثمانية رموز وهي</p>

<p>+-&lt;&gt;[],.</p>

<p>أي أن مفسرها يفهم فقط هذه الرموز ويتجاهل أي حرف أو  رمز آخر، وبذلك يكون البرنامج الذي يطبع عبارة “Hello, world!” بالشكل التالي:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>++++++++[&gt;++++[&gt;++&gt;+++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;+&gt;+&gt;→&gt;+[&lt;]&lt;-]&gt;&gt;.&gt;---.+++++++..+++.&gt;&gt;.&lt;-.&lt;.+++.------.--------.&gt;&gt;+.&gt;++.
</pre></td></tr></tbody></table></code></pre></div></div>

<p>من اللغات الغريبة الأخرى لغة شكسبير، حيث يكون الكود فيها عبارة عن مسرحيات لشكسبير! ولذا فطباعة كل حرف فيها يتطلب جملة طويلة، وبالتالي يكون البرنامج الذي يطبع عبارة “Hello, world!” مؤلفًا من ثلاث صفحات تشكل حوارا ضمن مسرحية لشكسبير.</p>

<p>من اللغات الغريبة والمثيرة للاهتمام هي لغة Whitespace، عندما تفتح ملفًا يحوي كود مكتوب بتلك اللغة فلن تجد أي شيء مكتوب، ﻷن الأحرف الوحيدة التي تُفسَّر في هذه اللغة هي الفراغ وال tab والإنتر return. وبالتالي لن تجد أي حرف أو رمز في الكود الخاص بهذه اللغة! إلا على سبيل التعليق. وهذا يعني أيضًا أنه من الممكن إخفاء أكواد هذه اللغة ضمن أي كود أو نص آخر.</p>

<p>ولنطلع على لغة شيف Chef، حيث تبدو الأكواد فيها بشكل وصفات للطبخ. يتألف كل برنامج في هذه اللغة من عنوان (اسم الطبخة) وقائمة بالمتغيرات وقيمهم (المقادير) ومجموعة التعليمات (طريقة التحضير).
الكود التالي يطبع عبارة “Hello, world!”، ويشرح لك طريقة عمل كعكة بالشوكولا!</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre>Hello World Cake with Chocolate sauce.

This prints hello world, while being tastier than Hello World Souffle. The main
chef makes a " world!" cake, which he puts in the baking dish. When he gets the
sous chef to make the "Hello" chocolate sauce, it gets put into the baking dish
and then the whole thing is printed when he refrigerates the sauce. When
actually cooking, I'm interpreting the chocolate sauce baking dish to be
separate from the cake one and Liquify to mean either melt or blend depending on
context.

Ingredients.
33 g chocolate chips
100 g butter
54 ml double cream
2 pinches baking powder
114 g sugar
111 ml beaten eggs
119 g flour
32 g cocoa powder
0 g cake mixture

Cooking time: 25 minutes.

Pre-heat oven to 180 degrees Celsius.

Method.
Put chocolate chips into the mixing bowl.
Put butter into the mixing bowl.
Put sugar into the mixing bowl.
Put beaten eggs into the mixing bowl.
Put flour into the mixing bowl.
Put baking powder into the mixing bowl.
Put cocoa  powder into the mixing bowl.
Stir the mixing bowl for 1 minute.
Combine double cream into the mixing bowl.
Stir the mixing bowl for 4 minutes.
Liquify the contents of the mixing bowl.
Pour contents of the mixing bowl into the baking dish.
bake the cake mixture.
Wait until baked.
Serve with chocolate sauce.
</pre></td></tr></tbody></table></code></pre></div></div>

<p>المصدر: <a href="https://www.mike-worth.com/2013/03/31/baking-a-hello-world-cake">https://www.mike-worth.com/2013/03/31/baking-a-hello-world-cake</a></p>

<p>الجميل في هذه اللغة أنها تعطي نص له تفسيره في مجالين مختلفين، فالوصفة أعلاه هي وصفة حقيقية يمكن أن تفسرها في مطبخك لتُنتج لك قطعة حلوى لذيذة مغطاة بالشوكولاه، ولكنها في نفس الوقت برنامجًا يمكن أن يفسره الحاسوب ليعطي ناتجًا ما.
بعيدًا عن النصوص بالكامل، تعتمد لغة  piet على المربعات الملونة، حيث يبدأ تفسير اللغة بمؤشر في الصورة ويسير باتجاه ما، حيث يغير اتجاهه بحسب لون المربع الذي يصل إليه، تحوي هذه اللغة 20 لونًا لكل لون معنى محدد. يطبع البرنامج التالي الكلمة Piet</p>

<p><img src="/assets/posts/bf670843053e467aa31bd4c096e6cd49.png" alt="كود بلغة piet" /></p>

<p>فيما يطبع البرنامج التالي العبارة “Hello World”</p>

<p><img src="/assets/posts/5890cd29635649a78d9a80afb1604c1c.gif" alt="كود بلغة piet" /></p>

<p>تم الاعتماد في فكرة المقال والكثير من محتواه على المحاضرة:
<a href="https://youtu.be/6avJHaC3C2U">https://youtu.be/6avJHaC3C2U</a></p>]]></content><author><name></name></author><category term="برمجة" /><summary type="html"><![CDATA[استخدامات غريبة للبرمجة تسمع عنها للمرة الأولى!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mulham.github.io/assets/posts/381971125cc44d2aa9320cea925ebb2b.jpg" /><media:content medium="image" url="https://mulham.github.io/assets/posts/381971125cc44d2aa9320cea925ebb2b.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">المسميات الوظيفية في مجال علم الحاسوب</title><link href="https://mulham.github.io/%D8%A7%D9%84%D9%85%D8%B3%D9%85%D9%8A%D8%A7%D8%AA-%D8%A7%D9%84%D9%88%D8%B8%D9%8A%D9%81%D9%8A%D8%A9-%D9%81%D9%8A-%D9%85%D8%AC%D8%A7%D9%84-%D8%B9%D9%84%D9%85-%D8%A7%D9%84%D8%AD%D8%A7%D8%B3%D9%88%D8%A8/" rel="alternate" type="text/html" title="المسميات الوظيفية في مجال علم الحاسوب" /><published>2023-09-19T00:00:00+03:00</published><updated>2024-04-22T00:00:00+03:00</updated><id>https://mulham.github.io/%D8%A7%D9%84%D9%85%D8%B3%D9%85%D9%8A%D8%A7%D8%AA-%D8%A7%D9%84%D9%88%D8%B8%D9%8A%D9%81%D9%8A%D8%A9-%D9%81%D9%8A-%D9%85%D8%AC%D8%A7%D9%84-%D8%B9%D9%84%D9%85-%D8%A7%D9%84%D8%AD%D8%A7%D8%B3%D9%88%D8%A8</id><content type="html" xml:base="https://mulham.github.io/%D8%A7%D9%84%D9%85%D8%B3%D9%85%D9%8A%D8%A7%D8%AA-%D8%A7%D9%84%D9%88%D8%B8%D9%8A%D9%81%D9%8A%D8%A9-%D9%81%D9%8A-%D9%85%D8%AC%D8%A7%D9%84-%D8%B9%D9%84%D9%85-%D8%A7%D9%84%D8%AD%D8%A7%D8%B3%D9%88%D8%A8/"><![CDATA[<p>تضم القائمة أدناه المناصب الوظيفية الأشهر في إعلانات التوظيف، والتي تخص مجال علم الحاسوب. يتم تحديث القائمة بحسب المستجدات وبمساعدتكم. يمكنكم دائمًا التواصل معنا لتحديث الصفحة وتزويدنا بأي معلومات إضافية لديكم لم يتم ذكرها هنا. 
انقر على المسمى الوظيفي أدناه للاطلاع على العلوم المطلوبة والمهام الخاصة به. علمًا أن المتطلبات والمهام لكل مسمى وظيفي تختلف من شركة لأخرى وبحسب مكان الشركة وحجمها، وكذلك يوجد مسميات وظيفية تتساوى تقريبًا في المتطلبات والمهام في كثير من الشركات. وتم ذكر تلك الحالات في التفاصيل أدناه.
انتبه إلى أن التسميات العربية ليست كلها شائعة ومستخدمة، وإنما محاولة مني لتوضيح المسميات بالعربي.</p>

<ul id="markdown-toc">
  <li><a href="#مهندس-برمجيات" id="markdown-toc-مهندس-برمجيات">مهندس برمجيات</a></li>
  <li><a href="#مهندس-إدراة-البرمجيات-devops-engineer" id="markdown-toc-مهندس-إدراة-البرمجيات-devops-engineer">مهندس إدراة البرمجيات (DevOps Engineer)</a></li>
  <li><a href="#مدير-قواعد-البيانات" id="markdown-toc-مدير-قواعد-البيانات">مدير قواعد البيانات</a></li>
  <li><a href="#مهندس-البيانات" id="markdown-toc-مهندس-البيانات">مهندس البيانات</a></li>
  <li><a href="#مهندس-تعلم-الآلة" id="markdown-toc-مهندس-تعلم-الآلة">مهندس تعلم الآلة</a></li>
  <li><a href="#عالم-البيانات" id="markdown-toc-عالم-البيانات">عالم البيانات</a></li>
  <li><a href="#مهندس-شبكات" id="markdown-toc-مهندس-شبكات">مهندس شبكات</a></li>
  <li><a href="#مهندس-الخدمات-السحابية" id="markdown-toc-مهندس-الخدمات-السحابية">مهندس الخدمات السحابية</a></li>
  <li><a href="#مهندس-نظم" id="markdown-toc-مهندس-نظم">مهندس نظم</a></li>
  <li><a href="#مهندس-الدعم" id="markdown-toc-مهندس-الدعم">مهندس الدعم</a></li>
  <li><a href="#مهندس-اختبار" id="markdown-toc-مهندس-اختبار">مهندس اختبار</a></li>
  <li><a href="#اختصاصي-أمن-سيبراني" id="markdown-toc-اختصاصي-أمن-سيبراني">اختصاصي أمن سيبراني</a></li>
  <li><a href="#مطور-الوب" id="markdown-toc-مطور-الوب">مطور الوب</a>    <ul>
      <li><a href="#تطوير-الواجهة" id="markdown-toc-تطوير-الواجهة">تطوير الواجهة</a></li>
      <li><a href="#تطوير-الخلفية-أو-البنية-التحتية-backend" id="markdown-toc-تطوير-الخلفية-أو-البنية-التحتية-backend">تطوير الخلفية أو البنية التحتية (Backend)</a></li>
    </ul>
  </li>
  <li><a href="#مطور-تطبيقات-الجوال" id="markdown-toc-مطور-تطبيقات-الجوال">مطور تطبيقات الجوال</a></li>
  <li><a href="#مطور-ألعاب" id="markdown-toc-مطور-ألعاب">مطور ألعاب</a></li>
  <li><a href="#أكاديمي" id="markdown-toc-أكاديمي">أكاديمي</a></li>
</ul>

<h2 id="مهندس-برمجيات">مهندس برمجيات</h2>

<p>تسمية عامة جدًا، لا يُعرف منها التقنيات المطلوبة، ولكن يعُرف منها شيء أساسي، وهو أنه يجب أن تكون مهندسًا (خريج هندسة حاسوب). تتضمن هندسة البرمجيات المرحلة الأولى، وهي التخطيط للتطبيق البرمجي، ووضع المخططات اللازمة، وكتابة التقارير التي تصف عمل التطبيق وتعرض تلك المخططات. المخططات التي أتحدث عنها هي مخططات UML، والتي تضم أنواعًا كثيرة، وتختار ماهو مطلوب منك وما هو كافي لشرح عمل التطبيق بشكل كامل.</p>

<p>ويأتي بعد التخطيط التنفيذ، أي البرمجة، وبعد البرمجة الاختبار، أي تشغيل التطبيق واختبار جميع وظائفه الموصوفة في التقرير والتأكد أنها تعمل بالشكل المطلوب، وبشكل آمن. ثم يأتي بعد مرحلة الاختبار التصدير والنشر للمستخدم النهائي (deployment)، قد يتطلب النشر تنصيب التطبيق على السيرفر، في حال كان تطبيق وب مثلًا، وهذا يتطلب معرفة بأمور أخرى مثل نظام لينكس والتطبيق المستخدم لعمل سيرفر مثل Apache أو Nginx بالإضافة للمعرفة بأمور أخرى خاصة بالتعامل مع السيرفر.</p>

<p>إذًا الشهادة مطلوبة هنا، لذا لا داعي للحديث أكثر، فالجامعة هي التي ستعلمك ذلك، فقد درست أنا مادة تدعى هندسة البرمجيات، والتي تحوي مشروعًا يتم تطبيق المعلومات النظرية فيه وفي استراتيجية العمل عليه، وإنتاج تطبيق برمجي وتقريره الكامل.</p>

<h2 id="مهندس-إدراة-البرمجيات-devops-engineer">مهندس إدراة البرمجيات (DevOps Engineer)</h2>

<p>تجمع كلمة DevOps بين كلمتي Development و Operations. وهو مصطلح جديد وُضع محاولةً لحل مشكلة ما..دعني أشرح لك الحكاية..</p>

<p>لنقل أنك قمت بعمل تطبيق وب، ورفعته للسيرفر، وهو الآن يعمل ومتاح للمستخدمين، جميل. لقد حان الوقت الآن لكي تضيف ميزة جديدة للتطبيق، فكيف تقوم بذلك؟</p>

<p>يكون للتطبيق دائمًا نسختين على الأقل، نسخة للتطوير، وتكون غالبًا على جهازك، حيث تقوم بتغيير برمجة التطبيق وإضافة كود إليه، واختباره، والنسخة المتاحة للعامة والمعروضة للمستخدمين، والموجودة على السيرفر، والتي يجب أن ترفع التحديثات من جهازك إليها لتصبح متاحة لهم.</p>

<p>تتم عملية تحديث التطبيق ونشر التحديث للعامة وفق المراحل التالية الظاهرة في الصورة، والتي تكرر نفسها في كل عملية تحديث، والتي تشمل إضافة ميزة جديدة للتطبيق أو حل مشكلة برمجية موجودة فيه.</p>

<p><img src="/assets/posts/8d48efdcf19442419eae17979554995c.png" alt="development-cycle.png" /></p>

<p>تسمى عملية النشر بالإنجليزية بـ deployment وقد تسمع عنها كثيرًا.</p>

<p>ماهو إذًا الـ DevOps؟</p>

<p>لا تتم العملية أعلاه في الشركات الكبيرة (أي في المشاريع الكبيرة) من قبل شخص واحد، ولا فريق واحد، بل يمكن أن يكون هناك فريق لكل مرحلة من المراحل الظاهرة في الصورة أعلاه. ولكننا هنا نهتم بفريقين رئيسيين، وهم المطورين developers والذين يقومون بالتنفيذ والاختبار المبدئي وتصدير التطبيق، وهذا هو الجزء Dev من الاسم لدينا (من development)، ثم يأتي دور فريق التشغيل operation، والمسؤول عن تحديث نسخة التطبيق على السيرفر والتأكد من عملها بدون أي مشاكل.</p>

<p>وهنا قد يحدث بعض التعارضات بين فريق التطوير وفريق التشغيل، حيث يهتم المطورون بعمل الميزة الإضافية التي قاموا ببرمجتها، ويريدون رؤيتها على السيرفر متاحة للمستخدمين بأسرع وقت ممكن، بينما يهتم فريق التشغيل باستقرار التطبيق المعروض للمستخدمين وعدم حدوث أي مشاكل معهم. مهمة فريق التشغيل إذًا التأكد من سلامة النسخة الجديدة من التطبيق وأنها ستعمل على السيرفر (وعند المستخدم) بدون أي مشاكل في الأداء ولا مشاكل أمنية تؤدي مثلًا لفتح ثغرات تسهل من سرقة المعلومات أو من تعطل التطبيق وخروجه عن الخدمة، وهنا يؤدي فريق التشغيل <em>وفق وظيفته</em> لتأخير نشر التغييرات وظهورها للعامة.</p>

<p>ومن المشاكل التي تحدث بين فريق التطوير وفريق التشغيل، هو عدم معرفة فريق التطوير بكيفية نشر التطبيق على السيرفر، وعدم إضافة تقارير كافية ربما للتحديثات التي أجروها، وبالتالي قد تكون النسخة الجديدة التي أصدروها من التطبيق غير قابلة للتشغيل على السيرفر. دعني أشير هنا لمشكلة الاعتماديات حيث يعمل التطبيق على جهازك ولكنك عند تصديره لا يعمل على جهاز آخر، وذلك بسبب وجود حزمة أو أكثر يعتمد عليها تطبيقك وتكون موجودة على جهازك ولكن لا يتم تصديرها مع التطبيق، ولهذا يتم استخدام برنامج لتتبع الاعتماديات وتصديرها مع التطبيق، مثل برنامج Docker الأشهر لذلك.</p>

<p>لا يهتم المطورون كذلك كثيرًا بالأداء، فقد يصدروا التطبيق ويكتشف فريق التشغيل يأنه يستهلك الذاكرة على السيرفر بشكل كبير، مما قد يجعل السيرفر خارج الخدمة! 
إذًا، تشمل عملية DevOps كلا عمليتي التطوير والتشغيل، والتقنيات المستخدمة فيها هي التقنيات المستخدمة في كلا عمليتي التطوير والتشغيل، وهدف DevOps هو إزالة العوائق التي تحصل والتي تعرقل من سرعة إصدار النسخ الجديدة للتطبيق ونشرها، ويتم ذلك عبر أتمتة عمليات التصدير والاختبار والنشر.</p>

<p>وهنا يظهر لدينا مصطلح جديد، وهو ما يُعرف بـ CI/CD وهو اختصار لـ continuous integration  و continuous delivery. يُقصد بالـ integration هو اختبار ودمج التغييرات الجديدة في الفرع الرئيسي للمشروع على Git، والـ delivery هو النشر باختصار. حيث يقلل الدمج المستمر والسريع من حدوث تعارضات في الكود بين المطورين، ويساعد النشر المستمر والسريع على حل المشاكل التي يعاني منها المستخدمين في التطبيق وبسرعة، وكذلك على توفير مزايا جديدة للمستخدمين. والمهم هنا هو أتمتة تلك العمليات، حيث يتطلب الدمج والنشر دائمًا خطوات ثابتة معروفة، ويتم بأتمتتها (جلعها تتم بشكل تلقائي) تسريع العملية والتقليل من احتمالية حدوث أخطاء.</p>

<p>الهدف إذًا من عملية DevOps هو نشر التغييرات بجودة عالية وبسرعة.
لنراجع إذًا التقنيات المطلوبة هنا بحسب ماذكرنا، أي التقنيات المطلوبة في عمليتي التطوير والتشغيل:</p>

<ol>
  <li>لغات البرمجة: المستخدمة في تطوير تطبيق الشركة.</li>
  <li>Git: لتنسيق العمل بين المطورين والتحكم بإصدارات التطبيق وحفظ تاريخ التطبيق (حيث يُحفظ كل إصدار رئيسي وجزئي للتطبيق بحيث يمكن التراجع لنسخة سابقة)</li>
  <li>Jenkins (أو ما شابه): يُستخدم ﻷتمتة مهام التصدير والاختبار والنشر</li>
  <li>المعرفة بنظام لينكس: حيث تستخدم معظم السيرفرات على الإنترنت نظام لينكس، لذا يتطلب المعرفة بنظام التشغيل ذاك وكيفية ضبطه بالشكل الصحيح لتنصيب وتشغيل التطبيق عليه</li>
  <li>لغة Bash script: تُستخدم ﻷتمتة المهام على نظام لينكس، ويقابلها Powershell على نظام ويندوز.</li>
  <li>المعرفة بكيفية إدارة السيرفرات: حيث يُستخدم مثلًا سيرفر (تطبيق) nginx لتطبيقات الوب، ويجب المعرفة به وكيفية ضبطه بالشكل الصحيح وبحسب متطلبات التطبيق، هذا بالإضافة طبعًا ﻷدوات ومهام أخرى تتعلق بالسيرفر وإدارته، مثل إنشاء عدة سيرفرات لتخديم الكثير من المستخدمين في نفس الوقت، وهذا يتطلب ما يمسى بـ load balancer لتوزيع المستخدمين على تلك السيرفرات وعدم حدوث ضغط على سيرفر واحد دون الآخر، ويُستخدم لذلك تطبيقات مثل kubernetes.</li>
  <li>المعرفة بأساسيات الشبكات والحماية: من أجل أخذ الإجراءات اللازمة لجعل التطبيق والسيرفر الذي يعمل عليه التطبيق آمنًا.</li>
  <li>المعرفة بما يُسمى بـ  containers أي الحاويات، وذلك كما ذكرت أعلاه لتتبع اعتماديات التطبيق وتصديرها مع التطبيق، وبالتالي لضمان عمل التطبيق على أي جهاز آخر. ويُستخدم عادةً تطبيق docker لذلك.</li>
  <li>المعرفة بخدمات الوب التجارية الشهيرة والتي قد تستخدمها الشركة لتشغيل التطبيق (بدلًا من عمل سيرفر خاص بها)، مثل AWS و Azure و Google cloud.
وبالتالي، التقنيات المطلوب معرفتها من مهندس DevOps هي التقنيات هذه. علمًا أن الأدوات والمهام التفصيلية تختلف  من شركة ﻷخرى.</li>
</ol>

<p>أليس هذا كثيرًا؟</p>

<p>طبعًا. لم يُقصد بعملية DevOps أن تكون منصب وظيفي، ومن الصعب عمومًا وجود شخص واحد يعلم بكل هذه الأمور، ولكن الشركات الآن تطرحه في إعلانات التوظيف لديها على أنه مسمى وظيفي، مطلوب DevOps Engineer! ولكن الجانب الجيّد أن المهندس هنا لا يعمل على تطوير التطبيق نفسه، فتبقى مهمة التطوير للمطورين (بحسب ما يشيع من معلومات..)، ولهذا أسميت المنصب بالعربي “مهندس إدارة البرمجيات” وليس “مهندس تطوير وتشغيل البرمجيات”.</p>

<p>ويُطلب طبعًا شهادة جامعية في المجال. ويُطلب عادةً خبرة سابقة كذلك!.</p>

<p>وأخيرًا، تعرض الصفحة التالية خارطة طريق لهذا المجال ومصادر مجانية لتعلم أدواته:
<a href="https://github.com/milanm/DevOps-Roadmap">https://github.com/milanm/DevOps-Roadmap</a></p>

<h2 id="مدير-قواعد-البيانات">مدير قواعد البيانات</h2>

<p>راجع المقطع الأول من “تطوير الخلفية” بما يخص قواعد البيانات. حيث تم ذكر النوعين الرئيسين لقواعد البيانات. وهذا ما يجب تعلمه.</p>

<p>يعمل مدير قواعد البيانات على تخطيط وإنشاء قاعدة البيانات بالشكل الأمثل بحسب المتطلبات، وصيانة قاعدة البيانات وتغيير الهيكلية إن تطلب الأمر بحسب متغيرات العمل ونمو التطبيق، ويتأكد مدير قواعد البيانات من أن البيانات محفوظة بشكل صحيح وآمن وبأنها تعمل بدون مشاكل (يتم الوصول لها وإعطاء الصلاحيات لذلك بالشكل المطلوب، لا أكثر؛ بحيث تعطى صلاحيات لمن لا يسمح له، ولا أقل بحيث لا يتمكن من هو مخول بالكتابة عليها والقراءة منها من القيام بذلك). يتم التعاون غالبًا بين مدير قواعد البيانات والمبرمجين لإضافة مزايا جديدة أو حل أي مشاكل موجودة.</p>

<p>يتطلب المنصب هذا غالبًا شهادة جامعية في المجال.</p>

<h2 id="مهندس-البيانات">مهندس البيانات</h2>

<p>يُطلب من مهندس البيانات التعامل مع بيانات ضخمة غير منظمة، والمطلوب منه فهمها وتنظيفها وتنظيمها ووضعها في قاعدة بيانات بشكل صحيح، للتمكن من التعامل معها واستخراج المعلومات منها بسلاسة وبالشكل المطلوب. المطلوب هنا المعرفة بقواعد البيانات وكيفية تصميمها لتلائم البيانات المعطاة، وكذلك المعرفة ببايثون في الغالب أو جافا. والمعرفة بالتطبيقات الشهيرة المختصة بالتعامل مع البيانات الضخمة، مثل Apache Spark، وكذلك التطبيقات التي تعالج البيانات الضخمة الموجودة على سيرفرات مختلفة، مثل Apache Hadoop و Apache Kafka.</p>

<h2 id="مهندس-تعلم-الآلة">مهندس تعلم الآلة</h2>

<p>هذا المجال الذي شاع كثيرًا في السنوات الأخيرة، وأخذ دعاية كبيرة حتى أكبر من حجمه الطبيعي. على أية حال، ليست وظيفتنا تقييمه في هذا المقال (من المخطط مناقشة ذلك في مقال منفصل).</p>

<p>يتطلب العمل في هذا المجال المعرفة بأساسيات الإحصاء (statistics)، والخوارزميات، ثم خوارزميات تعلم الآلة الشائعة، ويتم العمل غالبًا باستخدام لغة بايثون، حيث تحوي مكتبات جاهزة لتعلم الآلة وكذلك للتعامل مع البيانات ومعالجتها.</p>

<p>ويجب كذلك فهم مبدأ التعلم العميق (deep learning) وخوارزمياته، وتطبيقاته.</p>

<p>وطبعًا يجب معرفة التعامل مع البيانات وتحليلها وعرضها بشكل رسوم بيانية (data visualization).</p>

<p>يُستخدم تعلم الآلة في العديد من المجالات، منها معالجة اللغات المحكية (Natural Language Processing)، والرؤية (computer vision) حيث يتم تطوير موديلات تعطي وصفًا للصور وما تحتويها. بالإضافة لمجالات أخرى كثيرة، ولكل مجال خوارزمياته الخاصة.
يشمل أي مشروع تعلم آلة الخطوات التالية:</p>

<ol>
  <li>
    <p>قراءة البيانات. إما أن تُعطى البيانات لك من قبل الشركة أو العميل، أو يمكنك العثور على بيانات جاهزة على موقع مثل Kaggle. أو يمكنك كذلك جمع البيانات بنفسك! ولكن العملية الأخيرة خارج موضوعنا هنا.</p>
  </li>
  <li>
    <p>فهم البيانات وتحليلها (ويتضمن ذلك عرض البيانات بشكل مخططات ورسوم بيانية لفهمها) وحذف البيانات غير السليمة أو التي لا تعطي معلومات مفيدة. وتهيئة البيانات المتبقية للتدريب.</p>
  </li>
  <li>
    <p>تطبيق خوارزميات تعلم الآلة (تعطيك المكتبات على بايثون دالات جاهزة)، أو بناء مودل تعلم آلة (machine learning model) خاص بك (وهذا ما يجب عليك فعله، أو القدرة على فعله بصفتك مهندس تعلم الآلة)، ثم تدريبه على تلك البيانات، بعبارة أخرى، تدريب الآلة على تلك البيانات.</p>
  </li>
  <li>
    <p>عرض النتائج بشكل مخططات ورسوم بيانية.</p>
  </li>
  <li>
    <p>تقييم النتائج التي تم الحصول عليها، أي تقييم أداء المودل، ويتطلب غالبًا إعادة التدريب بعد إجراء بعض التعديلات على المودل أو على البيانات وطريقة تمثيلها.</p>
  </li>
  <li>
    <p>حفظ المودل الذي تم تدريبه وتصديره للاستخدام.</p>
  </li>
</ol>

<p>مصادر مفيدة:</p>
<ul>
  <li>لتعلم لغة بايثون: كتاب Dive into Python3 by Mark Pilgrim</li>
  <li>كتاب تعلم البرمجة من الصفر مع بايثون 3. ترجمة هشام رزق الله</li>
  <li>لتعلم الآلة: كتاب Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition
by Aurélien Géron.</li>
</ul>

<p>الشهادة الجامعية مطلوبة للعمل في الشركات.</p>

<p>المدة التخمينية للتعلم: الفهم الحقيقي لهذا التخصص والقدرة على معالجة البيانات بشكل فعال وبناء مودل خاص بك وتحسينه  يتطلب تعلم طويل، والكتاب الأخير أعلاه يكفي تمامًا لذلك. ولدراسة ذلك الكتاب (بعد تعلم بايثون) يتطلب منك حوالي 300 ساعة أو يزيد.</p>

<h2 id="عالم-البيانات">عالم البيانات</h2>

<p>يتشابه كثيرًا مع مهندس تعلم الآلة، فقد ذكرت لك أن أي مشروع تعلم آلة يبدأ بفهم البيانات وتحليلها وعرضها على شكل رسوم بيانية، وهذه هي مهام عالم البيانات، بالإضافة لاستخدام خوارزميات تعلم الآلة كذلك وذلك لفهم البيانات بشكل أفضل، وهو ما يسمى تعدين البيانات (data mining). إذًا متطلبات هذه الوظيفة هي نفس متطلبات مهندس تعلم الآلة.</p>

<h2 id="مهندس-شبكات">مهندس شبكات</h2>

<p>وهو المسؤول عن تصميم وإدارة الشبكة الداخلية للشركة وكذلك السيرفر الذي تقدم الشركة خدماتها عبره. والإدارة تعني التأكد من عمل الشبكة بالشكل الأمثل والأفضل أداء، بالإضافة لحماية الشبكة ورفع مستوى الأمان فيها.</p>

<p>يتطلب هنا معرفة نظرية بكيفية عمل الشبكات، وكذلك المعرفة التطبيقية في هيكليات الشبكات المختلفة وكيفية اختيار الأمثل وتصميم الشبكة بالشكل الأفضل. ويتطلب معرفة بالتطبيقات المستخدمة لمراقبة الشبكة وإدارة المستخدمين على الشبكة، مثل تطبيق Active directory على الويندوز. ولا بد طبعًا من تعلم أساسيات سطر أوامر لينكس وذلك ﻷن معظم السيرفرات على شبكة الإنترنت اليوم تستخدم نظام تشغيل لينكس. ويتطلب كذلك المعرفة بالبرمجة لكتابة أكواد ﻷتمتة بعض المهام.</p>

<p>يُطلب شهادة جامعية في مجال الحاسوب في الغالب، بالإضافة غالبًا لشهادة من جهات مختصة بالشبكات (وهي الأهم فعليًا).</p>

<p>من أشهر الجهات التي توفر تعليم وشهادات في هذا المجال هي Cisco. ويوفر موقع skillsforall.com جزء من دورات Cisco بشكل مجاني.</p>

<h2 id="مهندس-الخدمات-السحابية">مهندس الخدمات السحابية</h2>

<p>أي خدمة تُقدم لك الآن عبر الإنترنت فهي خدمة سحابية، فالمقصود بالسحابة هو السيرفر. جوجل درايف ومستندات جوجل مثلًا هي خدمات سحابية.</p>

<p>وُضع هذا المصطلح عندما وُجدت خدمات يستخدمها الملايين، مثل اليوتيوب، ولم يعد يكفي سيرفر ولا ثلاثة ولا عشرة لتلك الخدمات، أي أن الخدمات تلك تتطلب وجود العديد من السيرفرات حول العالم لتخدم هذا العدد الهائل من طلبات المستخدمين وفي نفس الوقت. وهنا وُضعت تطبيقات أخرى لإدارة السيرفرات المختلفة لنفس التطبيق، وهو ما يُعرف بالأنظمة الموزعة (distributed systems) والتي تم الإشارة لها في مسار أسس علم الحاسوب على هذه المنصة.</p>

<p>لذا يُطلب منك هنا المعرفة بإدارة الخدمات السحابية والتطبيقات الخاصة بتوزيع الطلبات على السيرفرات المختلفة، كما يُطلب منك معرفة بخدمات تجارية شهيرة مثل AWS أو Azure أو Google cloud أو غير ذلك. وطبعًا أساسيات الشبكات وحمايتها. وكذلك المعرفة بإدارة قواعد البيانات. بالإضافة لمتطلبات أخرى بحسب كل شركة.</p>

<p>يُطلب في الغالب شهادة جامعية في المجال بالإضافة لشهادة تُمنح من أحد الخدمات المراد التعامل معها مثل AWS. حيث توفر شركات تلك الخدمات (أي أمازون وميكروسوفت مثلًا) برامج تدريبية وتمنح شهادات فيها.</p>

<h2 id="مهندس-نظم">مهندس نظم</h2>

<p>هندسة النظم هي تسمية عامة جدًا تُستخدم في قطاعات مختلفة. تكون مهمة مهندس النظم بشكل عام هي تصميم هيكلية نظام ما وتحديد متطلباته والعمل على جعله بسيطًا قدر الإمكان.
ولا نقصد بالنظم هنا أنظمة تشغيل الحاسوب (تحديدًا)، وإنما أي نظام، ففي صناعة الطائرات مثلًا، يقوم مهندسو الكهرباء على تصميم النظام الكهربائي للطائرة، ومهندسو الحاسوب على تصميم النظام التقني (الفيزيائي والبرمجي) لها.</p>

<p>تختلف التقنيات والمتطلبات كثيرًا من قطاع لآخر ومن شركة لأخرى. ولا تخلو مهام مهندس النظم من مهمة تقديم الدعم التقني، حيث يحل المشاكل التي تطرأ على الأجهزة المستخدمة، وعلى الشبكة، لذا تتطلب غالبًا معرفة بالشبكات، وبأنظمة التشغيل، وحماية التطبيقات، وحماية الشبكة.  وكما ذكرت لك، لا يُقصد عادةً من كلمة نظم هنا أنظمة تشغيل الحاسوب، وإنما أنظمة الشركة، فإذا كانت شركة في القطاع المالي فيكون لديها تطبيق أو تطبيقات برمجية في ذلك القطاع، وتلك هي أنظمتها. وقد تكون وظيفة مهندس النظم حينها هو اختبار النظام ذاك، ودمج المزايا الجديدة بشكل صحيح، ومراقبة السيرفر الذي يعمل عليه التطبيق والتأكد من عمله بشكل سليم وفعّال، وأخذ نسخ احتياطية للبيانات، وتحديث التطبيقات والأنظمة المستخدمة على أجهزة الشركة، بالإضافة لتوفير الدعم التقني وحل المشاكل، ويتطلب هذا تواصل مباشر مع الموظفين، أو مع الزبائن الذين يستخدمون تطبيقات الشركة، وقد يُطلب منه تدريبهم على نظام (تطبيق) الشركة.</p>

<p>وقد يُطلب من مهندس الأنظمة أن يؤدي دور خدمة العملاء (الدعم التقني)، يتواصل مع الزبائن مباشرة ويحل لهم مشاكلهم. الزبائن هنا يكونوا موظفين بشركات أخرى في الغالب، والذين يستخدمون برنامجًا ما من عمل الشركة التي تعمل بها. لذا يتطلب منك تعلم تطبيق شركتك والمشاكل الشهيرة التي تطرأ عليه، لكي تقول “ألو..كيف يمكنني مساعدتك” وتسمع أحدهم يشتمك على الطرف الآخر من المكالمة! وذلك بسبب تطبيقكم الفاشل!</p>

<p>يُطلب عادةً شهادة جامعية في المجال.</p>

<h2 id="مهندس-الدعم">مهندس الدعم</h2>

<p>وهو الذي يقدم الدعم التقني للزبائن، أي باختصار “خدمة عملاء” ولكن في الجانب التقني، ويشمل ذلك الرد على المكالمات ورسائل البريد الإلكتروني والرسائل على منصات لتنظيم طلبات الدعم (tickets) والتي تستخدمها الشركة. ويكون الزبائن إما موظفين في شركات أخرى، في حال كانت شركتك تقدم خدمات للشركات، أو أفراد عاديين.</p>

<p>يتم التفريق عادةً بين ثلاث مستويات للدعم، حيث يتطلب أولها معرفة بأساسيات التقنية (وهذا هو دور المرأة التي ترد عليك عند الاتصال بخدمة عملاء مزود الإنترنت، حيث تطلب منك إطفاء المودم وإعادة تشغيله!)، وهكذا تتدرج المعرفة للمستوى الثالث التي تتطلب خبراء يمكنهم تقديم الدعم التقني ﻷصعب المشاكل.</p>

<p>تتطلب الشركات الكبيرة خدمات دعم لزبائنها على مدار الساعة، وبالتالي يتم توظيف مهندسي دعم من مناطق جغرافية مختلفة، للاستفادة من فرق التوقيت وتوفير الدعم بشكل مستمر للزبائن.</p>

<p>يتطلب غالبًا شهادة جامعية في المجال.</p>

<p>أما التقنيات وما يمكن تعلمه، فلا يوجد شيء أذكره لك هنا، بل يتم توفير فترة تدريبية لمهندسي الدعم الجدد من قبل الشركات، حيث يتم تدريبهم على تطبيق الشركة وخدماتها.</p>

<h2 id="مهندس-اختبار">مهندس اختبار</h2>

<p>وهو المسؤول عن كتابة اختبارات مؤتمتة للبرمجيات وتنفيذها وتحليل نتائجها، واكتشاف أي مشكلة في التطبيقات التي يتم إجراء الاختبارات عليها وكتابة التقارير حول عمليات الاختبار ونتائجها.</p>

<p>يتم كتابة الاختبارات المؤتمتة بأحد لغات البرمجة، وبحسب نوع الاختبار. من المكتبات المعروفة والمخصصة لعمل اختبارات لتطبيقات الوب مثلًا هي مكتبة selenium، والتي يمكن استخدامها في لغات برمجة عدة مثل جافا وبايثون وسي شارب.</p>

<p>علمًا أنه يمكن كذلك إجراء اختبارات يدوية، أي يوجد من يعمل على ذلك، ولكن معظم الشركات اليوم تتجه لأتمتة الاختبارات (التي يمكن أتمتتها).</p>

<p>وتنقسم الاختبارات لعدة أنواع، مثل اختبار الوظائف، أي التأكد من أن جميع وظائف التطبيق تعمل بشكل صحيح، واختبار الأداء، مثل السرعة واستهلاك الطاقة والذاكرة، والتأكد كذلك من أن التطبيق يعمل بشكل جيد لدى المستخدم، وهذا يعني مثلًا إذا كنا نتحدث عن تطبيق وب، فيجب اختباره على متصفحات الوب المختلفة وأحجام الشاشات المختلفة. ويوجد أخيرًا اختبارات الأمان.</p>

<p>من الأمثلة على اختبارات الوظائف بالنسبة لتطبيق الوب، هو اختبار نموذج تسجيل الدخول مثلًا، وهنا يجب اختبار جميع الحالات والتأكد من أن النتيجة هي نفسها المطلوبة وفق التقارير، فمثلًا، ماذا لو أدخل المستخدم عنوان بريد إلكتروني غير صالح (صيغة خاطئة)، ماذا لو أدخل عنوان صالح ولكن غير مسجل بعد، وما إلى ذلك. يمكن عمل تلك الاختبارات بشكل يدوي، والأفضل في هذه الحالة أتمتتها، ﻷنها اختبارات ستتكرر كما هي مع كل عملية تحديث للتطبيق.</p>

<p>وبالنسبة لمهندس ضمان الجودة أي Quality Assurance واختصارًا QA فمهمته التأكد من أن التطبيق يطابق معايير الجودة أو المزايا والاتفاقيات التي تم إبرامها مع العميل (الزبون). تكون المهام غالبًا مشتركة مع مهندس الاختبار. ولايوجد فرق واضح بينهم. 
لاحظ هنا أنه لا يمكن الاستغناء عن بعض الاختبارات اليدوية، فقد تعمل وظائف التطبيق كما المتوقع، ولكن تجربة المستخدم قد تكون سيئة، ربما الواجهة غير واضحة، ربما الألوان، أو غير ذلك. يجب في النهاية أن تضع نفسك مكان المستخدم وتختبر التطبيق من وجهة نظره.
من المهم كذلك معرفة أن الوظيفة هذه حساسة جدًا ويجب إتقان العمل فيها على أكمل وجه، قد يعمل مهندس الاختبار في بنك، حيث التعاملات المالية وحيث لا مجال أبدًا للخطأ، وقد يوظف البنك مطورين من غير المهندسين لبرمجة تطبيقه! وبالتالي يقوموا بتطوير تطبيق يفتح العديد من الثغرات الأمنية، أو ربما الأخطاء الحسابية، أو أيًا يكن.. عندما يحصل خرق أمني أو مشاكل حسابية نتيجة البرمجة الرديئة، ويخسر البنك الملايين بسبب ذلك، فيتم إلقاء كل اللوم على مهندس الاختبار، وليس على المطور، فمهندس الاختبار هو الذي صادق على كود المطور ووافق على نشره دون أن يشير إلى تلك المشاكل أو يكتشفها.</p>

<p>يُطلب عادةً شهادة في مجال علم الحاسوب، وتختلف التقنيات والأدوات المستخدمة (لإجراء الاختبارات المؤتمتة) بحسب الشركة وقطاعها ونوعية تطبيقاتها ونوعية الاختبارات المطلوبة.</p>

<h2 id="اختصاصي-أمن-سيبراني">اختصاصي أمن سيبراني</h2>

<p>يبدو هذا العنوان جذابًا ومثيرًا، ولكن اعلم أن معظم الدورات التدريبية التي تجدها على الإنترنت هي مجرد أساسيات ومعلومات سطحية، تعطيك أساسيات أنظمة التشغيل، والشبكات، وليس لها علاقة بالأمن السيبراني فعليًا (لن تأخذك لأي مرحلة متقدمة ذات صلة بهذا المسمى). أما الشهادات، فهي مثل الدورات. يوجد شهادات شهيرة في هذا المجال، وتُطلب من بعض الشركات، مثل شهادة CEH، ولكنها أيضًا لا تعطيك أي علم حقيقي في المجال، وإنما مجرد أساسيات ومعلومات بدائية.</p>

<p>أما عن الحاجة لهذا التخصص، فليس في البلدان النامية. ربما أكثر ما يُطلب في أمريكا، ولكن ليس من السهل العثور على مصادر تدرّس العلم الحقيقي في هذا المجال. ويتطلب غالبًا شخص محترف بالفعل ولديه العلم الحقيقي لينقله لك بشكل شخصي.</p>

<p>عندما نتحدث عن اختصاصي أمن سيبراني، فيجب عليه معرفة إنشاء هجمات حقيقية على الشبكة، حتى يستطيع التصدي لتلك الهجمات. ولكي يعرف ذلك، يجب أن يدرس أنظمة التشغيل بعمق، والشبكات طبعًا وبعمق، ويفهم كيف يعمل كل شيء خلف الكواليس، لكي يعرف كيف يتم تحليل عمل التطبيقات وأنظمة التشغيل وإيجاد ثغرات، ولكي يعرف كيف يراقب الشبكة ليكتشف أي سلوك غير طبيعي ويتخذ الإجراء اللازم بشكل مباشر.</p>

<p>لا يهم أي شهادة هنا إذا أردت الوصول للعلوم الحقيقية، لا يوجد أي شهادة تمثل علم حقيقي في هذا المجال، وإذا كنت متقنًا بالفعل لما تفعل، ويمكنك اكتشاف ثغرات وسدها، فستأتي الشركات لقدميك لكي تخدمها!</p>

<p>أما عن المدة المتوقعة، فتتطلب دهرًا..التصدي لهجمات والتعامل مع المخترقين هي لعبة القط مع الفأر، لعبة لا تنتهي، لا يوجد تطبيقات بدون ثغرات، ويجب دائمًا وجود أنظمة دفاعية ووضع سيناريوهات محتملة وإجراءات مسبقة للتعامل معها.</p>

<p>واعلم أن الكثير ممن دخلوا المجال قد خرجوا منه، بسبب ما يحتويه من إرهاق وبحث دائم، وعدم الحصول على تقدير لذلك، وبسبب ضعف الدخل المادي. لا تهتم معظم الشركات الصغيرة والمتوسطة بتوظيف أحد مسؤول عن الحماية، ويقتصر الموضوع على الشركات الكبرى والدول.</p>

<h2 id="مطور-الوب">مطور الوب</h2>

<p>استخدمنا سابقًا تطبيقات الحاسوب والتي تدعى اليوم تطبيقات سطح المكتب (desktop application) بكثرة، وكانت تُباع على أقراص ليزرية (CDs)، إلى أن ظهر الإنترنت وانتشر في كل مكان، ورخصت تكاليفه. ففي البداية كان من يريد الوصول لشبكة الإنترنت يذهب لمقهى الإنترنت ويدفع بالساعة، إلى أن وصل للبيوت وأصبح اليوم الإنترنت يصل لكل منزل تقريبًا في كثير من البلدان. وعند تلك النقطة، تم التحول تدريجيًا من تطوير تطبيقات سطح المكتب، إلى تطوير تطبيقات الوب، وذلك ﻷن المستخدم يفضل استخدام التطبيقات مباشرة من متصفحه، دون الحاجة لتنصيب أي شيء محليًا على جهازه، بالإضافة إلى أن تطبيق الوب يكون مستقلًا عن أي نظام تشغيل وبالتالي يعمل على أي جهاز  يحوي متصفحًا للوب. وبالتالي يمكن القول عمومًا أنه تم استبدال تطوير تطبيقات سطح المكتب إلى تطوير تطبيقات الوب، وأنك اليوم لو أدرت عمل تطبيق ما، فلا فائدة غالبًا من جعله تطبيقًا لسطح المكتب، بل يفضل ويجب في كثير من الحالات تصميمه وتطويره على أنه تطبيق وب يعمل على متصفحات الوب.</p>

<p>المسميات الوظيفية الفرعية: تتضمن تطبيقات الوب بناء قاعدة بيانات والتواصل معها، بالإضافة لتصميم وتطوير واجهة المستخدم. العاملون على تصميم وتطوير واجهة المستخدم فقط يُدعون مطورو الواجهة (Frontend developers) والذين يعملون على بناء قاعدة البيانات وبرمجة التواصل مع قاعدة البيانات فقط يُدعون مطورو البنية التحتية (Backend developers) ومن يقومون بكلا الوظيفتين معًا يُدعون مطور شامل (fullstack developers). علمًا أن المسميات العربية غير متداولة.</p>

<p>من الممكن عمل مواقع وب بشكل واجهة فقط، ونسمي الموقع حينئذٍ بأنه موقع ستاتيكي (static website) حيث لا يمكن للمستخدم أن يتفاعل معه، مثل المواقع التعريفية بالشركات، والتي تتألف غالبًا من صفحة واحدة أو بضع صفحات.</p>

<p>لنبدأ الآن بالتعرف على التقنيات والعلوم المطلوبة لكل من مطور الواجهة ومطور الجانب الخلفي لتطبيقات الوب.</p>

<h3 id="تطوير-الواجهة">تطوير الواجهة</h3>

<p>الواجهة هي تلك التي تراها على متصفحك، إذا ضغطت باليمين على أي صفحة (من الحاسوب المكتبي وليس الجوال) واخترت عرض المصدر (view page source) فستجد كود الواجهة. لذا نتحدث هنا عن:</p>

<p>HTML, CSS وهي لغات تنسيقية، أي ليست لغات برمجة، وإنما هدفها عرض المحتوى وتحديد أماكن العناصر وأبعادها وما شابه.</p>

<p>JavaScript وهي لغة برمجة، تختص عمومًا لبرمجة الواجهة، ونعني ببرمجة الواجهة بشكل رئيسي التواصل مع الأكواد في الخلفية التي تدير قواعد البيانات، أي إرسال طلب للسيرفر لأخذ معلومات أو إضافة أو تعديل أو حذف معلومات من قاعدة البيانات. وللغة جافا سكريبت أيضًا مزايا خاصة بواجهة المستخدم وتحسينها. ولا داعي للخوض في تفاصيل ذلك هنا.</p>

<p>وهذه هي العلوم الأساسية المطلوبة من مطور واجهات الوب فقط لا غير. ولكن..</p>

<p>ظهرت الكثير من الأدوات وبيئات العمل (frameworks) لتسهيل الكتابة في تلك اللغات الثلاث. بالنسبة لـ CSS مثلًا، فيوجد بيئات عمل مثل Bootstrap و tailwind و bulma وغيرهم. ما يقومون به هو تزويد مطور الواجهة بعناصر معرفة ومكتوبة مسبقًا بلغة CSS لاستخدامها مباشرةً في HTML، بعبارة أوضح، لا يحتاج المطور الذي يستخدم بيئات العمل هذه من أن يكتب أي شيء في CSS، مما يوفر عليه الوقت وبالتالي يزيد الإنتاجية، وهذا هو الهدف من بيئات العمل.</p>

<p>ونفس الشيء بالنسبة لجافاسكريبت، يوجد الكثير من بيئات العمل، كل منها له طريقة كتابة (Syntax) خاصة به، وله نفس الهدف؛ توفير الوقت، فالميزة التي يتطلب برمجتها كتابة عشرة أسطر مثلًا  في جافا سكريبت، تتطلب ربما ثلاثة أسطر في بيئات العمل. وتقوم بيئات العمل في النهاية بتحويل ما تكتبه ضمنها إلى لغة جافا سكريبت (فمتصفحات الوب لا تفهم سوى HTML و CSS وجافاسكريبت). من بيئات العمل تلك Angular و React و Svelte وغيرهم الكثير.</p>

<p>وهذا كل شيء بالنسبة لتطوير الواجهة.</p>

<ul>
  <li>ولكني لم أستفد شيئًا! مالذي يجب أن أتعلمه الآن ﻷصبح مطور واجهات؟
في البداية لا بد من تعلم أساسيات HTML و CSS، قد تقرأ كتابًا عنهم، أو تشاهد مقطعًا عنهم بحدود ثلاث إلى ست ساعات، وقد يكفي هذا غالبًا، مع ضرورة عمل شيء بيدك ولو كان بسيطًا. 
كذلك يفضل جدًا تعلم أساسيات جافاسكريبت نفسها، الأساسيات فقط تكفي.</li>
</ul>

<p>ثم يأتي السؤال:</p>

<p>هل تريد أن تعمل في شركات؟ أم تعمل بشكل مستقل (مع الزبون مباشرة)؟</p>

<p>إذا أردت العمل بشركات، فيجب عليك البحث في السوق الموجود في بلدك، ابحث عن شركات تطوير الوب في بلدك وابحث عن بيئات العمل التي يستخدمونها والتي يطلبونها في إعلانات التوظيف لديهم. تُظهر كذلك بعض المواقع إحصائيات عن بيئات العمل واستخدامها بحسب الموقع الجغرافي.</p>

<p>أما إذا أردت العمل بشكل مستقل، فهذا يعني أنك ستخدم الزبون مباشرة، والزبون لا يفقه غالبًا بكل هذه الأمور، هذا يعني أن اختيار بيئة العمل عائد لك، وبالتالي يمكنك البحث عن الأسهل والأحدث والأفضل أداء، وباعتقادي هنا أن Svelte بيئة عمل ممتازة لجافاسكريبت. أما بالنسبة لبيئات عمل CSS فابحث بنفسك عن مقارنة بينهم، فللموضوع تفصيل، يوجد بيئات عمل تعطيك حرية كبيرة جدًا، والحرية دائمًا تعني ضرورة وجود علم أكبر، وغالبًا تعامل أصعب، وأتحدث غالبًا عن tailwind هنا، وفي المقابل، حرية أقل في تخصيص العناصر وشكلها وأبعادها، مع سهولة أكبر وحاجة أقل للتعلم، وأعتقد أني أتحدث هنا عن materializecss أو skeleton css. ويوجد الكثير غيرهم أيضًا، لا بد من البحث والمقارنة بنفسك.</p>

<p>الشهادات المطلوبة: لا يُطلب في الغالب شهادة جامعية هنا، فالمهم هو وجود معرض أعمال، أي أن تقوم بعمل بعض الواجهات بنفسك وبناء معرض أعمالك (المبهرة، أو لنقل الأنيقة)، عندها ستُفتح لك الأبواب للعمل بصفة مطور واجهات إن شاء الله.</p>

<p>المدة التخمينية للتعلم: 225 ساعة.</p>

<h3 id="تطوير-الخلفية-أو-البنية-التحتية-backend">تطوير الخلفية أو البنية التحتية (Backend)</h3>

<p>يجب هنا أولًا المعرفة بقواعد البيانات. والتي تنقسم لقسمين رئيسيين بحسب الهيكلية، قواعد البيانات المنظمة (structured) وغير المنظمة. اللغة المستخدمة في الأولى هي SQL، ولها أنظمة إدارة أشهرها ربما هم MySQL و PostgreSQL و Oracle SQL.</p>

<p>أما قواعد البيانات غير المنطمة، فيطلق عليها عمومًا NoSQL، وتستخدم لغة JSON في الغالب، ومن أشهر أنظمتها MongoDB و Redis، بالإضافة للكثير غيرهم. لكل منهم مزاياه وعيوبه واستخداماته، لذا يجب مراجعة تلك المعلومات في حال أردت بناء تطبيق جديد، وإعطاء القرار حول التقنيات الأفضل لذلك التطبيق بحسب متطلباته. وهي عملية ليست سهلة الحقيقة وتحتاج للإلمام بالعديد من الجوانب أهمها الأداء وسهولة التوسيع والنمو والدعم الموجود على الإنترنت في حال ظهور مشاكل (مجتمع الأسئلة والأجوبة والشروحات الرسمية) وغيرها.</p>

<p>ثم نحتاج للغة برمجة، مهمتها التحقق من البيانات القادمة من المستخدم في الواجهة، وإرسالها لقواعد البيانات، والعكس، أي تنسيق البيانات القادمة من قواعد البيانات وإرسالها لواجهة المستخدم بالشكل المطلوب، وكذلك إدارة الصلاحيات، بالإضافة لبرمجة المزايا المطلوبة من التطبيق. لنتعرف على أشهر لغات البرمجة المستخدمة اليوم في تطبيقات الوب مع بيئات العمل الخاصة بهم:</p>

<ul>
  <li>PHP: رغم أنها لغة قديمة إلا أنها مازالت مستخدمة اليوم بكثرة، وقد ساعدت بيئات العمل التي ظهرت لها على إبقائها على قيد الحياة، أشهر بيئة عمل تستخدم لغة PHP هي Laravel.</li>
  <li>Python: بيئة العمل الأشهر لها هي جانغو (Django).</li>
  <li>Java: حيث بيئة العمل الأشهر هنا Spring.</li>
  <li>Javascript: نعم! يمكن استخدام جافا سكريبت لبرمجة الخلفية! وقد حدث ذلك مؤخرًا عندما وضعت بيئات عمل لهذا الغرض، مثل Node js و Next js.</li>
</ul>

<p>وتنقسم كذلك بيئات العمل بحسب تخصصها للتالي:</p>

<ul>
  <li>بيئات عمل لتطوير الواجهة فقط: وهي التي ذكرتها لك في قسم تطوير الواجهة، مثل Angular و React و svelte</li>
  <li>بيئات عمل لتطوير الخلفية فقط: مثل Spring و Fast API (بايثون)</li>
  <li>
    <p>بيئات عمل لتطوير تطبيق وب كامل: مثل Laravel و Django و Svelte Kit، والذين يمكن استخدامهما لتطوير تطبيق وب كامل، ويمكن كذلك استخدام بعضها لتطوير الخلفية فقط (بالإضافة لإمكانية الاعتماد عليها بشكل كامل)، حيث يمكن إضافة الحزمة Django rest framework للأخيرة لجعلها للخلفية فقط.</p>
  </li>
  <li>لماذا أستخدم بيئة عمل للواجهة مختلفة عن بيئة عمل الخلفية، طالما يوجد بيئات عمل تتيح برمجة كلا الواجهة والخلفية؟</li>
</ul>

<p>سؤال جميل. يمكن مثلًا لـ django كما ذكرنا أن تساعدك ببناء تطبيق وب كامل، ولكنها في الواقع مختصة أكثر بالخلفية وبرمجتها بلغة بايثون، أي أنها غير مختصة بالواجهة، ويتطلب عمل الواجهة عليها الكتابة بالجافا سكريبت. في حين أنك تعلم الآن أن البرمجة عبر بيئات عمل جافا سكريبت أفضل من الكتابة بلغة جافا سكريبت نفسها، حيث قلنا أن بيئات العمل توفر الوقت وتزيد الإنتاجية. وقد تقول هنا: إذًا لماذا لا أستخدم بيئة عمل تستخدم جافا سكريبت لكلا الواجهة والخلفية؟ يمكن ذلك طبعًا، ولكن هل تريد استخدام موديلات تعلم الآلة في تطبيقك (ما يُعرف بالذكاء الصنعي)؟ إذا كان الجواب نعم فستحتاج لاستخدام بايثون في الخلفية وليس جافا سكريبت. ويبقى في النهاية لكل لغة استخداماتها، لذا لا تفيدك دائمًا جافاسكريبت في الخلفية.</p>

<p>ويجب هنا تعلم API (وهي اختصار لـ Application programming interface أي واجهة التطبيق البرمجية) حيث يتم استخدامها فقط في حال استخدام بيئات عمل مختلفة للواجهة والخلفية. والـ API هي عبارة عن روابط url يتم استخدامها لتواصل الواجهة مع الخلفية.</p>

<p>ويجب كذلك تعلم عمل اختبارات للتأكد من عمل روابط الـ API بشكل صحيح، والتطبيق الأشهر لاختبار ذلك هو Postman.</p>

<p>هذا عدا عن تطبيقات الوب الجاهزة، والتي يتم أخذها كما هي دون الحاجة للبرمجة، وتخصيصها عبر تنزيل إضافات وما إلى ذلك. من أشهر التطبيقات الجاهزة المستخدمة في الكثير من مواقع الوب اليوم هو تطبيق Wordpress والذي يستخدم لغة PHP وقاعدة بيانات MySQL.</p>

<p>إذًا من أين أبدأ؟</p>

<p>من قواعد البيانات، وأعتقد أن تعلم SQL سيفيدك في جميع الحالات، ثم تطلع أيضًا على NoSQL. ثم فهم معنى الـ API وعمله، وتطبيق Postman.
ولكن أي لغة برمجة، وأي بيئة عمل، فهذا جوابه نفس المناقشة السابقة، في حال أردت العمل في شركات أو بشكل مستقل.</p>

<p>الشهادات المطلوبة: هنا تتطلب الشركات غالبًا شهادة في هندسة الحاسوب، أو معهد برمجة (سنتين). فالبنسبة للشخص الذي تعلم الجانب العملي فقط وليس لديه أساس نظري، فلا يمكن الاعتماد عليه في عمل تطبيقات في مجالات حساسة مثل القطاع الصحي والمالي (تطبيقات البنوك)، ﻷن ذلك يتطلب معرفة بالأساس النظري لطريقة عمل الحاسوب ولغات البرمجة، ولا يُقبل أي خطأ في تلك المجالات، ﻷن أي خطأ صغير سيكون مكلف كثيرًا وعواقبه سيئة.</p>

<p>المدة التخمينية للتعلم: بالنسبة للخريج الجامعي (يعرف الأساس النظري، والبرمجة، وقواعد البيانات ويريد الدخول لمجال برمجة الوب (Backend) فيتطلب تعلم بيئة عمل ما، وعمل تطبيق بسيط للتدريب، أو عدة تطبيقات صغيرة، وهذا يتطلب حوالي 100 ساعة)
لا أنصح غير الخريج بالدخول في هذا المجال إذا أراد التوظيف، فإما أن فرصه ستكون قليلة (ابحث على كل عن متطلبات الشركات في بلدك) أو سيُعطى راتبًا أقل من غيره ممن يؤدي نفس المهام. أما إذا أردت العمل بشكل مستقل وتعرف السوق المناسب لذلك، فيتطلب تعلم بعض الأسس النظرية ثم البرمجة ثم قواعد البيانات، بالإضافة لبيئة عمل ما، وهذا يحتاج لحوالي 300 ساعة بحسب تخميني.</p>

<h2 id="مطور-تطبيقات-الجوال">مطور تطبيقات الجوال</h2>

<p>ذكرت لك في بداية فقرة مطور الوب أن تطبيقات الحاسوب (تطبيقات سطح المكتب) قد تم استبدالها بتطبيقات الوب. وهنا وبشكل مشابه، تم استبدال الحاسوب بالهواتف الذكية، وهذا بالنسبة للأفراد طبعًا. معظم الأفراد اليوم يستخدمون الهاتف الذكي بشكل أساسي للوصول للإنترنت، بل أن معظمهم لا يمتلكون حاسوب مكتبي أصلًا، ولهذا السبب ظهرت أهمية تطبيقات الجوال، رغم أن مواقع الوب اليوم (واجهات المستخدم فيها) يتم عملها بحيث تكون متوافقة مع جميع أحجام الشاشات (تُدعى هذه الميزة بـ Responsive)، أي أنه يمكنك الاكتفاء ببرمجة تطبيق وب وجعل الواجهة متوافقة لتظهر بشكل سليم على شاشة الهاتف الذكي، وذلك عند تصفح تطبيقك عبر متصفح الوب من الهاتف، ومع هذا، تعمد الكثير من الشركات وغيرها لإنشاء تطبيقات للجوال، (وهذا يحدث أحيانًا بالإضافة لوجود تطبيق وب) وذلك لعدة أسباب، منها إمكانية وسهولة عرض إشعارات للمستخدمين (Push Notifications)، وربما أيضًا لسهولة سرقة بيانات المستخدمين!</p>

<p>نظامي التشغيل المسيطرين على السوق حاليًا بالنسبة للهواتف الذكية هما أندرويد و iOS. تعمل هواتف أبل بنظام iOS، فيما تعمل كل الهواتف الأخرى تقريبًا بنظام أندرويد.
يُستخدم اليوم تطبيق Android Studio بلغتي البرمجة جافا أو Kotlin لإنشاء تطبيقات لنظام أندرويد.</p>

<p>أما بالنسبة لتطوير تطبيقات iOS فيتطلب العمل حصرًا على نظام macOS، وهذا يعني عمومًا وجوب العمل على حاسوب ماك من شركة أبل. ثم تنصيب تطبيق Xcode، والعمل ضمنه على لغة برمجة تدعى Swift.</p>

<p>يتطلب نشر تطبيقات أندرويد على Google play دفع مبلغ 25$ لمرة واحدة، بينما يتطلب نشره على متجر أبل دفع 99$ سنويًا.(الأرقام هذه بحسب تاريخ المقال)</p>

<p>إذًا تقنيات تطوير تطبيقات الهاتف الذكي أصبحت معروفة وبحسب النظام المستهدف.
يتطلب التطبيق بلا شك التواصل مع قواعد بيانات، والتي تكون إما محلية توضع على جهاز المستخدم (فقد لا يتطلب التطبيق اتصال بالإنترنت أو تفاعل مع مستخدمين آخرين)، وأحد الخيارات لذلك هي قاعدة بيانات sqlite. وقد يتطلب اتصالًا، ومن الخيارات المتاحة في تلك الحالة خدمة جوجل لقواعد البيانات والتي تدعى firebase وهي قاعدة بيانات NoSQL.</p>

<p>الشهادة المطلوبة: لا يتطلب في الغالب شهادة جامعية للعمل بصفة مطور تطبيقات وب، ويبقى الموضوع يختلف من بلد لآخر ومن شركة لأخرى.</p>

<p>المدة التخمينية للتعلم: تعلم لغة برمجة (مثل kotlin أو swift) + تعلم التعامل مع البرنامج المخصص لتطوير التطبيق + تعلم التصدير والنشر. كل ذلك قد يستغرق مدة تقريبية بحدود 150 ساعة.</p>

<h2 id="مطور-ألعاب">مطور ألعاب</h2>

<p>لنتحدث أولًا عن صناعة الألعاب عمومًا، ثم عن مطور الألعاب بشكل خاص.</p>

<p>تتطلب صناعة الألعاب العمل على جوانب فنية مختلفة، مثل تصاميم الشخصيات والمراحل، والمؤثرات الصوتية والموسيقى والإضاءة، وتحريك الشخصيات، وتصميم المراحل بما فيها من جوائز وأماكن سرية ونقاط، وربما قصة اللعبة، بالإضافة طبعًا للبرمجة وقواعد البيانات. يعني أن عمل لعبة يتطلب منك معرفة كل شيء تقريبًا! ولا يمكن بشكل عام إنتاج لعبة جميلة وطويلة من قبل شخص واحد، بل يتطلب ذلك عملًا جماعيًا.</p>

<p>نعم..يوجد ألعاب تتم من قبل فرد واحد، وتدعى تلك الألعاب (indie games) يمكنك البحث والاطلاع عليها، إنها ألعاب بسيطة جدًا.</p>

<p>لذا يجب أن تحدد هدفك وتعرف أين ستعمل والسوق المستهدف قبل الدخول في هذا المجال المتعب، بالإضافة للأخذ بالاعتبار أن معظم الألعاب لا تحمل أي رسالة أو قيمة، مجرد تسلية وتضييع وقت، هذا إذا افترضنا عدم وجود رسائل سلبية ضمنها.  ولكن إن تم العمل على ألعاب هادفة (مثل تلك التي صُنعت من قبل شركة صخر سابقًا، مثل ألعاب المسابقات والألعاب التعليمية) فسيكون ذلك شيئاً رائعًا بلا شك.</p>

<p>وكما أنه يوجد بيئات عمل في مجال تطوير الوب، والتي توفر عليك الوقت وتزيد من إنتاجيتك، يوجد هنا ما يسمى بمحركات الألعاب (Game Engine). يوفر عليك محرك الألعاب الكثير من الوقت، عبر تزويدك بالأدوات اللازمة لتطوير اللعبة، تجميع جميع التصاميم في مكان واحد والعمل عليها وتحريكها ضمن محرك الألعاب، ويعطيك خيارات كثيرة لتحريك العناصر بناء على دالات رياضية أو خواص فيزيائية، ويسهل عليك كذلك عملية تصدير اللعبة بشكل منتج نهائي لنشره في المكان الذي تريد.</p>

<p>من محركات الألعاب الشهيرة Unity ويوفر خدمات مجانية ومدفوعة، ومحرك الألعاب الذي عملت عليه بشكل شخصي، وهو Godot المجاني تمامًا ويعمل على جميع الأنظمة (ويندوز ولينكس وماك) وبإمكانه التصدير كذلك لكافة الأنظمة بما فيها أندرويد وتطبيق ستيم steam وغير ذلك..هذا بالإضافة طبعًا لمحركات ألعاب أخرى. ويتم تحديد محرك الألعاب المناسب لك بحسب متطلباتك وميزانيتك ولغة البرمجة التي تريد العمل عليها.</p>

<p>لقد حدثتك إلى الآن بشكل عام عن صناعة الألعاب، ولكن بالنسبة للعمل بصفة مطور ألعاب في شركة ما، فهذا يعني عادةً العمل بصفة مبرمج ألعاب، وبالتالي تكون مهمتك البرمجة تحديدًا، ولكن بأي لغة؟ يختلف ذلك بحسب محرك الألعاب كما ذكرنا.  ويتطلب كذلك المعرفة بالفيزياء (قليلًا) وبعض الدالات الرياضية، وذلك لبرمجة حركة بعض العناصر باستخدام الدالات ووفقًا بعض قوانين الفيزياء ووفقًا لطريقة تفاعلها مع المستخدم. حيث يتم على سبيل المثال أخذ قانون الجاذبية بعين الاعتبار وجعل اللاعب يعود للأرض بعد القفز.</p>

<p>يتطلب كذلك المعرفة بأسس الشبكات والبروتوكولات المستخدمة للتواصل، وذلك ﻷن معظم الألعاب في عصرنا تستخدم الإنترنت إما للعب الجماعي أو لإرسال بيانات عن سلوك المستخدم للمطورين لتحليلها وتحسين اللعبة في إصداراتها القادمة.</p>

<p>أما بخصوص متطلبات الشهادة فيُطلب غالبًا شهادة جامعية، ﻷن برمجة اللعبة بالنهاية هي برمجة تطبيق متكامل واختباره وتصديره والتأكد من عمله على المنصة/المنصات المستهدفة، وتشمل نفس مراحل هندسة البرمجيات (بناء أي تطبيق كامل).</p>

<p>الوقت المتوقع للإتقان: رغم عملك هنا على البرمجة فقط، إلا أنه يجب التعرف على مراحل صنع اللعبة لفهم طريقة العمل والبرمجة بشكل صحيح وسليم ووفق المطلوب. وقد يستغرق ذلك وقتًا بحدود 100 ساعة، أو أكثر من ذلك بكثير..</p>

<p>وأفيدك هنا في حال أردت عمل لعبة بسيطة بمفردك، أنه يوجد مواقع توفر لك مؤثرات صوتية وتصاميم مجانية، الموقع الأشهر ربما هو pixabay، ولكن بالنسبة للتصميم تحديدًا فسيتطلب منك المعرفة به للتعديل على الأقل على التصاميم الجاهزة. برنامج التصميم الذي أنصح به هنا هو Inkscape.</p>

<h2 id="أكاديمي">أكاديمي</h2>

<p>هل نحتاج لذكر ذلك؟</p>

<p>يمكنك إكمال دراسة الماجستير ثم الدكتوراه. يعمل طالب الماجستير في التدريس في الجامعة بصفته مساعد للدكتور (مدرس الجزء العملي) وذلك أثناء دراسته لمرحلة الماجستير، وهذه فرصة جيدة وراتب جيد أثناء الدراسة.</p>

<p>يمكن للدكتور في الجامعة العمل على التدريس، أو على البحث العلمي، أو على كلاهما معًا، وهذا طبعًا إذا احتوت الجامعات لديك على شيء يدعى البحث العلمي (ليس في البلدان النامية للأسف).</p>

<p>لا تكمل دراستك من أجل الراتب العالي لدكتور الجامعة، أو العمل المريح، فسكان كوكبنا هذا أصبحوا كثر، ويحصل سنويًا مئات آلاف الأشخاص على شهادة الدكتوراة، ولا تتسع جامعات العالم لتلك الأعداد الكبيرة التي تتخرج سنويًا. ويمكن جدًا أن تحصل على شهادة دكتوراة ولا تجد أي فرصة عمل في أي جامعة. ومع هذا، تتطلب الكثير من الوظائف في الشركات شهادة الدكتوراة، خاصة في مجال البحث العلمي مجددًا، أو في مجال إدارة المهندسين (رئيس قسم). ولكن الأعداد الكبيرة تجعل المنافسة دائمًا قوية.</p>]]></content><author><name></name></author><category term="تعليم" /><summary type="html"><![CDATA[يشرح هذا المقال أشهر المسميات الوظيفية التي تجدها في إعلانات التوظيف للشركات، والخاصة فيما يتعلق بالبرمجة وعلم الحاسوب]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://mulham.github.io/assets/posts/8fc7ee1ac5da4043af7df6617cfc8a8f.webp" /><media:content medium="image" url="https://mulham.github.io/assets/posts/8fc7ee1ac5da4043af7df6617cfc8a8f.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">بناء هيكلية تطبيق جافا</title><link href="https://mulham.github.io/java-project-structure/" rel="alternate" type="text/html" title="بناء هيكلية تطبيق جافا" /><published>2021-03-02T00:00:00+03:00</published><updated>2024-10-18T00:18:26+03:00</updated><id>https://mulham.github.io/java-project-structure</id><content type="html" xml:base="https://mulham.github.io/java-project-structure/"><![CDATA[<blockquote class="prompt-info">
  <p>هذه الصفحة جزء من شرح <a href="/java-project-from-scratch">بناء تطبيق جافا إف إكس من الصفر</a></p>
</blockquote>

<p>هناك عدة طرق معروفة لتنظيم المشروع البرمجي لدينا وذلك وفق تقسيم الملفات البرمجية ضمن مجلدات بحيث يكون لكل مجلد وظيفة معينة، وللاختصار لن أخوض في أنواع التنسيق تلك بل يكفي أن نطبق الهيكلية التي سنسير عليها والتي شرحتها في الدرس الأول في فقرة “<a href="/java-project-from-scratch/#تخطيط-البرنامج">تخطيط البرنامج</a>”.</p>

<p>وللقيام بذلك ستجد ضمن تطبيق IntelliJ وفي المشروع لديك ضمن مجلد src مجلد باسم sample، قم بالضغط عليه باليمين ثم اختر New ثم Package وقم بتسمية الحزمة (المجلد) الجديد باسم controller (لاتحذف .sample من الحقل)</p>

<p>كرر العملية لإنشاء مجلد جديد باسم view</p>

<p>كرر العملية لإنشاء مجلد جديد باسم model (والذي سيبقى فارغا حاليا)</p>

<p>قم بنسخ ملف sample.fxml لمجلد view (بالسحب والإفلات والضغط على زر Refactor)</p>

<p>قم بنسخ ملف Controller لمجلد controller</p>

<p>الآن قم بإضافة السطر التالي لملف “module-info.java”:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>       exports sample.controller;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>وقم بتشغيل البرنامج للتأكد بأن كل شيئ مايزال على مايرام.</p>

<p>سيتطلب منك لكل مجلد تنشؤه ويحوي ملفات جافا توضيحه في ملف “module-info.java” كما في السطر أعلاه. لذا لعدم الوقوع في مشاكل لاحقة سأطلعك على الكود النهائي لهذا الملف ويمكنك نسخه ولصقه لديك في ذلك الملف:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>    requires javafx.fxml;
    requires javafx.controls;
    requires javafx.graphics;
    exports sample.controller;
    opens sample;
    requires javafx.base;
    requires java.sql;
    requires java.desktop;
    opens sample.controller;
    opens sample.model;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>يمكنك معاينة ملفات المشروع حتى الوضع الحالي على <a href="https://github.com/Mulham/Java-Project/tree/initialize">هذا الرابط</a></p>

<hr />

<p><strong>التالي:</strong> <a href="/javafx-interface-design">تصميم الواجهة</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[تنفيذ هيكلية وبناء التطبيق وتقسيم الحزم (المجلدات) لتطبيق جافا إف إكس]]></summary></entry><entry><title type="html">تهيئة بيئة العمل لتطبيق جافا إف إكس</title><link href="https://mulham.github.io/javafx-initialization/" rel="alternate" type="text/html" title="تهيئة بيئة العمل لتطبيق جافا إف إكس" /><published>2021-03-02T00:00:00+03:00</published><updated>2024-10-18T00:18:26+03:00</updated><id>https://mulham.github.io/javafx-initialization</id><content type="html" xml:base="https://mulham.github.io/javafx-initialization/"><![CDATA[<blockquote class="prompt-info">
  <p>هذه الصفحة جزء من شرح <a href="/java-project-from-scratch">بناء تطبيق جافا إف إكس من الصفر</a></p>
</blockquote>

<h2 id="تهيئة-المحرر">تهيئة المحرر</h2>

<p>كما هو مذكور فسنعمل على برنامج IntelliJ Edu المجاني، بعد تنصيبه وفتحه قم بالذهاب من الأعلى لقائمة File ثم New ثم Project.</p>

<p>بعدها ستظهر لك نافذة كما في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/new-javafx-project.png" alt="تهيئة محرر الكود IntelliJ للعمل على تطبيق جافا إف إكس" /></p>

<ol>
  <li>
    <p>اختر من القائمة اليسرى خيار Java FX</p>
  </li>
  <li>
    <p>من الأعلى ستجد خيار “Project SDK” من المستحسن أن تعمل على نفس الإصدار الذي أعمل عليه وهو 15 أو مافوق</p>
  </li>
  <li>
    <p>اضغط في النهاية في الأسفل على زر Next</p>
  </li>
</ol>

<p>في النافذة التي تليها قم بإعطاء اسم لمشروعك، مثلا “java-project” واضغط في الأسفل على Finish</p>

<p>الآن سيفتح البرنامج على مشروعك الجديد، على اليسار ستجد شجرة الملفات الخاصة بمشروعك، اضغط على السهم بجانب اسم المشروع لعرض الملفات التي بداخله ثم اضغط باليمين على مجلد src واختر New ثم module-Info.java كما في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/java-module-info.png" alt="كتابة معلومات تطبيق جافا module info" /></p>

<p>ثم داخل الملف على اليمين قم بكتابة التالي (مع تغيير الاسم إن لم يكن اسم مشروعك java-project):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>    module java.project {
        requires javafx.fxml;
        requires javafx.controls;
        requires javafx.graphics;
        opens sample;
    }
</pre></td></tr></tbody></table></code></pre></div></div>

<p>اضغط الآن من الأعلى على قائمة File ثم Project Structure. ستظهر لك نافذة كما في الصورة</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/IntelliJ-project-structure.png" alt="إعدادات المشروع في محرر الكود IntelliJ" /></p>

<ol>
  <li>
    <p>اضغط من القائمة اليسارية على خيار Project</p>
  </li>
  <li>
    <p>تأكد من اختيارك للـ SDK الصحيح في حقل Project SDK</p>
  </li>
  <li>
    <p>من القائمة اليسارية مجددا اضغط على خيار Libraries</p>
  </li>
  <li>
    <p>اضغط على زر + أعلى القائمة الوسطى ثم اختر Java كما في الصورة</p>
  </li>
</ol>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/IntelliJ-project-libraries.png" alt="طريقة إضافة مكتبات لبرنامج IntellıJ" /></p>

<p>بعدها في متصفح الملفات اختر المجلد Javafx-sdk الذي قمت بتحميله (كما وضحت في فقرة المتطلبات) ثم اختر مجلد lib الذي بداخله واضغط على ok. ثم قم بإغلاق النافذة الأصل بالضغط على ok مجددًا.</p>

<p><strong>ملاحظة:</strong> عند تشغيل الكود الخاص بي ستجد في قسم المكتبات الموضح أعلاه مكتبات مضافة مسبقا، قم بحذفها بالكامل حيث أن مساراتها لن تتوافق لديك، ثم أضف المكتبات الموجودة لديك كما هو مشروح.</p>

<p>الآن من اليمين في الأعلى سترى زر تشغيل أخضر قم بالضغط عليه لتشغيل المشروع، إن ظهرت لك نافذة فارغة باسم “Hello World” فهذا يعني أن كل شيئ على مايرام، أما إن ظهرت أخطاء فقم بالذهاب من الأعلى بجانب زر التشغيل لخيار Main أو أيا كان اسمه ثم Edit Configurations وتأكد من الـ SDK للمشروع أنه مضبوط بشكل صحيح وأن ملف  Main معرف كما في الصورة</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/IntelliJ-run-configurations.png" alt="إعدادات تشغيل تطبيق جافا في برنامج إنتيلي جي" /></p>

<h2 id="استخدام-محرر-واجهة-خارجي">استخدام محرر واجهة خارجي</h2>

<p>محرر الواجهة أو باني المشاهد أو Scene Builder هو التطبيق الذي يتيح لك تصميم نوافذ برنامجك، مثل اختيار الأزرار والحقول وأماكنهم في النافذة وإعطاء كل حقل id مخصص. وهذه العملية ضمن محرر الواجهة تتم بشكل سلس جدا بالسحب والإفلات، فقط قم بسحب الزر أو الحقل أو أي عنصر تريده للمكان الذي ترغب في النافذة.</p>

<p>محررات البرمجة أو مايسمى IDE تأتي غالبا مع محرر واجهة مبني معهم، ولكن محرر الواجهة الافتراضي ذاك مزاياه محدودة والتعامل معه غير سلس تماما، لذلك سنقوم باستخدام محرر واجهة خارجي يدعى Gloun Scene Builder.</p>

<p>بعد تنصيب البرنامج لديك، ضمن المشروع في برنامج IntelliJ اذهب إلى قائمة File ثم Settings، بعد ذلك وكما هو موضح في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/IntelliJ-setting-SceneBuilder.png" alt="الإعدادات في برنامج إنتيلي جي" /></p>

<ol>
  <li>
    <p>اذهب من القائمة اليسرى لخيار Languages &amp; Frameworks</p>
  </li>
  <li>
    <p>ثم اضغط على خيار JavaFX</p>
  </li>
  <li>
    <p>قم بتعريف المسار الصحيح حيث يوجد ملف Gloun Scene Builder القابل للتشغيل (على الويندوز يكون بلاحقة exe)</p>
  </li>
</ol>

<p>الآن إذا قمت بالضغط باليمين على أي ملف ينتهي بـ .fxml مثل الملف sample.fxml ثم اخترت Open in SceneBuilder فيجب أن يفتح المشهد ضمن برنامج Gluon.</p>

<h2 id="إضافة-مكتبات-لمحرر-الواجهة">إضافة مكتبات لمحرر الواجهة</h2>

<blockquote class="prompt-info">
  <p>هذا القسم من الشرح لن نستخدمه في تطبيقنا ولكنني تركته للاطلاع</p>
</blockquote>

<p>ضمن برنامج Gluon ستجد في الأعلى على اليسار حقل للبحث وعلى يمينه أيقونة الإعدادات، اضغط عليها واختر JAR/FXML Manager كما في الصورة</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/Gluon-add-library.png" alt="إضافة مكتبات لمحرر الواجهة جلون Gluon" /></p>

<p>ثم اختر “Add Library/FXML from file system” كما في الصورة</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/Gluon-jfoenix.png" alt="طريقة إضافة مكتبة لباني المشاهد Gluon" /></p>

<p>سيظهر لك مستعرض الملفات، حيث يمكنك اختيار المكتبة الخارجية التي قمت بتحميلها وتود إضافتها، لتجدها قد ظهرت على القائمة كما في الصورة أعلاه.</p>

<hr />

<p><strong>التالي:</strong> <a href="/java-project-structure">هيكلة المشروع</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[تهيئة محرر الكود IntelliJ ومحرر الواجهة Gluon لتطبيق جافا إف إكس]]></summary></entry><entry><title type="html">آلية تسجيل الدخول في تطبيق جافا إف إكس</title><link href="https://mulham.github.io/java-sign-in/" rel="alternate" type="text/html" title="آلية تسجيل الدخول في تطبيق جافا إف إكس" /><published>2021-03-02T00:00:00+03:00</published><updated>2024-10-18T00:18:26+03:00</updated><id>https://mulham.github.io/java-sign-in</id><content type="html" xml:base="https://mulham.github.io/java-sign-in/"><![CDATA[<blockquote class="prompt-info">
  <p>هذه الصفحة جزء من شرح <a href="/java-project-from-scratch">بناء تطبيق جافا إف إكس من الصفر</a></p>
</blockquote>

<p>الآن وبعد <a href="/javafx-interface-design">تصميم الواجهة</a> و <a href="/java-database-handler">ربط التطبيق مع قاعدة البيانات</a>، سننشئ دالة لزر تسجيل الدخول، بحيث عندما يضغط المستخدم عليه نأخذ القيم من حقلي اسم المستخدم وكلمة المرور ونرسلها لقاعدة البيانات للتحقق من صلاحياتها، وإذا كانت تلك البيانات صالحة نقوم بتحويل المستخدم للنافذة الرئيسية ويكون بذلك قد أتم تسجيل الدخول.</p>

<p>لنبدأ أولًا بكتابة الدالة “getUser” التي تأخذ اسم المستخدم وكلمة المرور وتبحث عنهم في قاعدة البيانات:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>
<span class="kd">public</span> <span class="nc">ResultSet</span> <span class="nf">getUser</span><span class="o">(</span><span class="nc">String</span> <span class="n">username</span><span class="o">,</span> <span class="nc">String</span> <span class="n">password</span><span class="o">){</span>
                <span class="nc">ResultSet</span> <span class="n">resultset</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
               <span class="nc">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"SELECT * FROM "</span> <span class="o">+</span> <span class="n">dbName</span> <span class="o">+</span> <span class="s">"."</span> <span class="o">+</span> <span class="nc">Const</span><span class="o">.</span><span class="na">USERS_TABLE</span> <span class="o">+</span> <span class="s">" where "</span> <span class="o">+</span> <span class="nc">Const</span><span class="o">.</span><span class="na">USERS_FIRSTNAME</span> <span class="o">+</span><span class="s">"=? and "</span> <span class="o">+</span> <span class="nc">Const</span><span class="o">.</span><span class="na">USERS_PASSWORD</span> <span class="o">+</span> <span class="s">" =?"</span><span class="o">;</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="nc">PreparedStatement</span> <span class="n">preparedStatement</span> <span class="o">=</span> <span class="n">getDbConnection</span><span class="o">().</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
                    <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">username</span><span class="o">);</span>
                    <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span> <span class="mi">2</span><span class="o">,</span> <span class="n">password</span><span class="o">);</span>
                    <span class="n">resultset</span> <span class="o">=</span> <span class="n">preparedStatement</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SQLException</span> <span class="o">|</span> <span class="nc">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="k">return</span> <span class="n">resultset</span><span class="o">;</span>
            <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>لاحظ أننا استخدمنا المعطيات في ملف Const كما ذكرنا سابقا، وللعلم فإننا نضع إشارة استفهام في عبارة SQL كما ترى في متغير query أعلاه، ثم لاحظ السطر:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    preparedStatement.setString(1, username);
</pre></td></tr></tbody></table></code></pre></div></div>

<p>أي قم باستبدال إشارة الاستفهام الأولى بالمتغير username، وهكذا.</p>

<p>الدالة تُرجع Resultset وهي تعني مجموعة من النتائج، أي إذا أردنا إرجاع عدة مستخدمين يشتركون في نفس المعلومات المعطاة، قد لا يتطلب هنا فعليا إرجاع resultset وإنما يمكن جعلها فقط ترجع صح true أو خطأ false أي تُرجع فقط المعلومة فيما إذا كان المستخدم موجود في قاعدة البيانات أم لا، يمكنك تغيير الدالة لتعمل بهذا الشكل أو بالشكل الذي تريد، سأترك ذلك كتمرينا لك.</p>

<p>ولنذهب الآن لملف LoginController، في البداية لنقم باستدعاء الصنف DatabaseHandler، لذا وقبل السطر:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    public class LoginController {
</pre></td></tr></tbody></table></code></pre></div></div>

<p>أضف التالي:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>    import sample.Database.DatabaseHandler;
    import java.sql.ResultSet;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>وقبل سطري</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>    @FXML
     void initialize() {
</pre></td></tr></tbody></table></code></pre></div></div>

<p>لنقم بإضافة السطر التالي (حيث سنقوم بإنشاء عنصر من صنف DatabaseHandler):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>      private DatabaseHandler databaseHandler;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>ولنقم الآن بإضافة التالي للصنف (بين القوسين):</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="rouge-code"><pre>
 <span class="kt">void</span> <span class="nf">initialize</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">databaseHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DatabaseHandler</span><span class="o">();</span>    <span class="c1">// إنشاء عنصر من صنف قواعد البيانات</span>
        <span class="n">loginButton</span><span class="o">.</span><span class="na">setOnAction</span><span class="o">(</span><span class="n">event</span> <span class="o">-&gt;</span> <span class="o">{</span>  <span class="c1">// هذه الدالة تعني أنه عند الضغط على زر تسجيل الدخول افعل ما بداخلها</span>

            <span class="nc">String</span> <span class="n">loginText</span> <span class="o">=</span> <span class="n">loginUsername</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">trim</span><span class="o">();</span>  <span class="c1">//خذ محتوى حقل اسم المستخدم واحفظه في المتغير هذا</span>
            <span class="nc">String</span> <span class="n">loginpwd</span> <span class="o">=</span> <span class="n">loginPassword</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">trim</span><span class="o">();</span>   <span class="c1">// ﻷخذ محتوى حقل كلمة السر</span>

   
         <span class="k">if</span><span class="o">(!</span><span class="n">loginText</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)</span> <span class="o">||</span> <span class="o">!</span><span class="n">loginpwd</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">))</span> <span class="o">{</span>       
         <span class="c1">// لاحظ إشارة التعجب للنفي، أي إذا كان الحقلين غير فارغين</span>
                <span class="nc">ResultSet</span> <span class="n">userRow</span> <span class="o">=</span> <span class="n">databaseHandler</span><span class="o">.</span><span class="na">getUser</span><span class="o">(</span><span class="n">loginText</span><span class="o">,</span> <span class="n">loginpwd</span><span class="o">);</span>
        <span class="c1">//كون الدالة getUser تُرجع مجموعة نتائج فيجب حفظها في مجموعة نتائج هنا</span>
                <span class="kt">int</span> <span class="n">counter</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="k">while</span> <span class="o">(</span><span class="n">userRow</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>    <span class="c1">//بينما يوجد نتيجة تالية في مجموعة النتائج</span>
                        <span class="n">counter</span><span class="o">++;</span>
                    <span class="o">}</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">counter</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// يجب أن يكون لدينا نتيجة واحدة أي مستخدم واحد</span>
                        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Login Successful!!!"</span><span class="o">);</span>
                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>    <span class="c1">// غير ذلك أي أننا لم نحصل على ناتج من قاعدة البيانات التي أعطت مجموعة النتائج فارغة</span>
                        <span class="n">label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"wrong username or password!"</span><span class="o">);</span>
                        <span class="nc">Shaker</span> <span class="n">shaker</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Shaker</span><span class="o">(</span><span class="n">loginUsername</span><span class="o">);</span>  <span class="c1">//اهتزاز حقل اسم المستخدم </span>
                        <span class="n">shaker</span><span class="o">.</span><span class="na">shake</span><span class="o">();</span>
                        <span class="nc">Shaker</span> <span class="n">shaker1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Shaker</span><span class="o">(</span><span class="n">loginPassword</span><span class="o">);</span>
                        <span class="n">shaker1</span><span class="o">.</span><span class="na">shake</span><span class="o">();</span>
                    <span class="o">}</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SQLException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span>
<span class="o">});</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>قم الآن بتشغيل الكود وأدخل معلومات المستخدم الذي أدخلته سابقا في جدول Users في قاعدة البيانات، أنا لدي البيانات “admin” لكلا اسم المستخدم وكلمة المرور، اضغط على تسجيل الدخول، إذا ظهرت في طرفية IntelliJ رسالة “Login Successful!!!” فهذا يعني أن كل شيئ على مايرام.</p>

<p>يمكنك معاينة الكود حتى الوضع الحالي من <a href="https://github.com/Mulham/Java-Project/tree/login">هنا</a></p>

<hr />

<p><strong>التالي:</strong> <a href="/javafx-scene-changer">الانتقال بين النوافذ</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[شرح كيفية التأكد من بيانات المستخدم في قاعدة البيانات وتسجيل الدخول في تطبيق جافا FX]]></summary></entry><entry><title type="html">تصميم الواجهة في تطبيق جافا إف إكس</title><link href="https://mulham.github.io/javafx-interface-design/" rel="alternate" type="text/html" title="تصميم الواجهة في تطبيق جافا إف إكس" /><published>2021-03-02T00:00:00+03:00</published><updated>2024-10-18T00:18:26+03:00</updated><id>https://mulham.github.io/javafx-interface-design</id><content type="html" xml:base="https://mulham.github.io/javafx-interface-design/"><![CDATA[<blockquote class="prompt-info">
  <p>هذه الصفحة جزء من شرح <a href="/java-project-from-scratch">بناء تطبيق جافا إف إكس من الصفر</a></p>
</blockquote>

<p>لنقم الآن بجعل النافذة الأولى للتطبيق هي نافذة تسجيل الدخول.</p>

<p>ضمن تطبيق IntelliJ اضغط على ملف sample.fxml باليمين ثم Refactor ثم Rename واجعل اسمه الجديد login.fxml وبنفس الطريقة غير اسم الملف Controller الموجود ضمن المجلد controller إلى LoginController ولاحظ أننا نكتب أسماء ملفات الجافا بحيث تبدأ بحرف كبير دائمًا.</p>

<h2 id="تصميم-نافذة-تسجيل-الدخول">تصميم نافذة تسجيل الدخول</h2>

<p>اضغط باليمين على الملف login.fxml واختر Open in SceneBuilder</p>

<p>في القائمة Hierarchy أسفل يسار البرنامج ستجد عنصر GridPane اضغط عليه باليمين واختر Delete، ثم في القائمة Container أعلاه اسحب العنصر AnchorPane وافلته في القائمة Hierarchy كما في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/Gluon1.png" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 1" /></p>

<p>بعد ذلك يمكنك تغيير خصائص هذا العنصر الذي سيحتوي باقي العناصر، مثلا يمكن تغيير أبعاده بالذهاب للقائمة Layout على اليمين وتغيير Pref Width من 600 لـ 700 كما في الصورة السابقة.</p>

<p>الآن لنقم بإضافة حقلي اسم المستخدم وكلمة المرور ونضعهم في وسط النافذة، ابحث في مربع البحث (أعلى اليسار) على TextField ثم بمواصلة النقر عليه اسحبه للنافذة التي لدينا في المنتصف، واصل النقر عليه وحركه ضمن النافذة ولاحظ الخطوط الظاهرة لتبين لك منتصف النافذة أفقيا وعموديا، قم بوضع الحقل في المنتصف تمامًا بالنسبة للطول وللعرض بحيث ترى خطين يتقاطعان مع بعضهما.</p>

<p>يمكنك توسيع هذا الحقل عرضًا ليتسنى للمستخدم تعبئة الحقل لاحقا بشكل جيد.</p>

<p>الآن قم بالبحث مجددا عن حقل PasswordField، عند سحبه للنافذة، وبعد تغيير عرض الحقل الأول ستلاحظ أن هناك خطان جدد سيظهرون عند تحريك الحقل الأخير هذا، خط لمحاذاة هذا الحقل مع الحقل السابق يمينا وخط لمحاذاته يسارا كما في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/Gluon2.gif" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 2" /></p>

<p>هذه الخطوط يمكن استخدامها دائمًا لتنسيق الحقول ومحاذاتها مع بعضها ومع النافذة عموما.</p>

<p>هل لاحظت وجود قسم أحمر أعلى النافذة في الصورة السابقة؟ لقد وضعت هذا القسم لعرض عنوان النافذة الموجودين فيها أو اسم التطبيق في نافذة البداية. يمكنك عمل نفس الشي بالبحث عن AnchorPane واضافته لأعلى النافذة بالحجم المناسب، ثم تغيير اللون للأحمر مثلا من القائمة Properties على اليمين ستجد حقل Style اختر fx-background-color- ثم حدد اللون في الحقل بجانبه، كما في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/fx-background-color-gluon.png" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 3" /></p>

<p>حقل تحديد اللون الأخير هذا يمكن إدخال اللون به باللغة الإنجليزية مثلا “red” أو “blue” أو إذا أردنا ألوان أكثر تحديدا فيمكن أن تذهب لجوجل وتكتب “color picker” سيظهر لك قسم يمكنك اختيار اللون الذي تريد منه ثم نسخ كود HEX الخاص به ولصقه في الحقل هنا.</p>

<p><strong>ملاحظة:</strong> إذا كنت تريد حذف لون الخلفية تمامًا أي زر بلا خلفية (شفاف تمامًا) فيمكنك كتابة none في حقل اللون.</p>

<p>ولإضافة حقل نصي لقسم العناوين الأحمر الذي أضفناه، حيث سنكتب لاحقا اسم التطبيق أو النافذة في ذلك الحقل النصي، قم بالبحث عن Label وإفلاته ضمن المنطقة الحمراء.</p>

<p>لاحظ أن الـ label الأخير المضاف سيكون عنصرا من المنطقة الحمراء “AnchorPane” كما هو مبين في قسم Hierarchy أسفل يسار البرنامج لديك وكما في الصورة</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-hierarchy.png" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 4" /></p>

<p>الآن قم بالحبث عن Button وإضافته أسفل حقلي اسم المستخدم وكلمة المرور، والذي سيكون زر تسجيل الدخول.</p>

<p>يمكنك دائما تجربة الواجهة من خلال النقر على خيار Preview في الأعلى ثم Show Preview in Window كما هو موضح في الصورة</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-preview.png" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 5" /></p>

<p>أخيرًا قم بإضافة Label جديد أسفر الزر الأخير الذي أضفته، هذا الحقل النصي سنستخدمه لاحقا لعرض رسائل الخطأ للمستخدم، مثل الرسالة “اسم المستخدم أو كلمة المرور خاطئة” وغيرها ربما..</p>

<p>الآن لنقم بالتخصيص أكثر وثم تجهيز النافذة هذه للبدء بالبرمجة..</p>

<h2 id="تخصيص-الواجهة">تخصيص الواجهة</h2>

<h3 id="تغيير-الألوان">تغيير الألوان</h3>

<p>لاحظت أعلاه كيف قمنا بتغيير لون الحقل في الأعلى إلى الأحمر وهذا أحد أجزاء التخصيص.</p>

<p>الآن لنقم بتغيير لون زر تسجيل الدخول حيث أنه افتراضيا لونه بلون الخلفية وهذا يجعله غير واضح تمامًا.</p>

<p>انقر على الزر ضمن النافذة وبنفس الطريقة أعلاه يمكنك الذهاب في القائمة اليمنى Properties ثم Style حيث سيكون fx-background-color- ثم أدخل اللون بالحقل المجاور. سأختاره أنا أسود “black” ثم سأقوم بتغيير لون الخط للأبيض للوضوح، وهذا ستراه في نفس القسم في الأعلى “Text Fill” وستراه مضبوطا على Black، سأغيره أنا للأبيض.</p>

<h3 id="استخدام-أيقونات-للبرنامج">استخدام أيقونات للبرنامج</h3>

<p>يمكنك استخدام أيقونات ووضعها في النافذة لتحسين جمالية تطبيقك، كأن تضيف مثلا بجانب حقل كلمة المرور أيقونة مفتاح وما إلى ذلك.</p>

<p>هناك مواقع على الإنترنت تتيح لك استخدام أيقوناتها وصورها مجانا وحتى للاستخدام التجاري أيضًا، منهم موقع <a href="https://material.io/icons">material.io</a>.</p>

<p>ولإضافة الأيقونات والصور لتطبيقك فهناك حقل في محرر الواجهة يدعى “ImageView” حيث يمكنك تحديد مسار الصورة من خصائص هذا الحقل.</p>

<h3 id="النص-وتلميحات-المستخدم">النص وتلميحات المستخدم</h3>

<p>كما تلاحظ فالزر الذي وضعناه مكتوب عليه Button ونريد هنا تغييره لـ “تسجيل الدخول”، قم بالنقر عليه واكتب في حقل Text على اليمين (ضمن قسم Properties) عبارة “تسجيل الدخول”.</p>

<p>لاحط أن عرض الزر تغير بناء على النص جديد، قم بإعادة تموضع الزر ليصبح في الوسط من جديد.</p>

<p>الآن وكما هو ملاحظ فإن حقول الإدخال فارغة، وبالتالي كيف سيعرف المستخدم ماالذي يجب إدخاله في كل حقل؟ إذًا لا بد من كتابة عبارة توضح المطلوب. انقر على الحقل الأول الخاص باسم المستخدم وستجد على اليمين حقل باسم “Prompt text” قم بإدخال العبارة “اسم المستخدم” فيه.</p>

<p>ونفس الشيئ بالنسبة لحقل كلمة السر.</p>

<p><strong>ملاحظة:</strong> ماهو الفرق بين الحقلين Prompt text  و Text؟</p>

<p>الفرق هو أن الحقل Text يضبط نص الحقل المحدد، ليصبح هذا النص قابل للتحديد والنسخ ويُعطى أيضًا كقيمة في البرمجة، أي أننا يمكننا لاحقا استدعاء والحصول على نص الحقل ذلك برمجيًا، بينما الحقل Prompt text لا يضبط نص الحقل بل يبقى عمليا نص الحقل فارغا وإنما يتم إضافة تلميح للمستخدم، هذا التلميح غير قابل للتحديد أو النسخ ويُزال تلقائيًا بمجرد بدء المستخدم بالكتابة، ولو أضفنا التلميح كـ text فسيضطر المستخدم لحذف ذلك النص ليتمكن من تفريغ الحقل وكتابة اسم المستخدم الخاص به وهذا لا نريده طبعا.</p>

<p>لاحظ أنه يمكن تغيير جهة الحقل (النص) لليمين بدل اليسار من خيار Alignment كما في الصورة</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-text-alignment.png" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 6" /></p>

<p>الآن قم بتغيير نص الحقل Label في الأعلى ليحمل اسم التطبيق، مثلا “مشروع جافا” ولاحظ أنه يمكنك تغيير حجم ولون الخط من الإعدادات في نفس القسم على اليمين.</p>

<p>الحقل الأخير Label الذي أضفناه أسفل الزر قم بحذف النص الخاص به تمامًا، حيث نريد للحقل أن يكون افتراضيًا غير مرئي على الإطلاق، فقط عند حدوث خطأ ما سنضبط النص الخاص به من الكود البرمجي.</p>

<p>قم بمعاينة الواجهة كما هو موضح سابقا للتأكد من أن كل شيئ على مايرام ثم احفظ عملك بالذهاب من الأعلى يسارا للقائمة File ثم Save. عند الضغط على Save هنا فسيتم حفظ عملنا في الملف login.fxml الموجود في المشروع. ويبقى ربطه بملف جافا للتحكم بعناصر النافذة هذه برمجيًا.</p>

<h2 id="إضافة-مايلزم-للبرمجة">إضافة مايلزم للبرمجة</h2>

<p>الآن سنقوم بثلاثة أشياء سريعًا:</p>

<ol>
  <li>إعطاء id لكل حقل</li>
  <li>ربط النافذة هذه بكود الجافا أي بالـ Controller</li>
  <li>نسخ الكود ولصقه في ملف الـ Controller لتحديثه</li>
</ol>

<p>الخطوة الأولى تتم ببساطة بالضغط على الحقل ثم ستجد على اليمين قسم Code به حقل fx:id قم بإعطاء اسم id فريد له ويعبر عنه، مثلا حقل اسم المستخدم سيكون username_field (لاحظ أنه لايمكن استخدام الفراغات، هذه الـ ids سيتم استخدامها في البرمجة لاحقا) كما في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-ids.png" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 7" /></p>

<p>والخطوة الثانية تتم بالذهاب يسارا لقسم Controller (سيكون أسفل يسار الشاشة) وفي حقل Controller class سنقوم بإدخال ملف الجافا المراد ربط هذه النافذة به مع مساره، والذي هو في حالتنا “LoginController” والمسار يبدأ من مجلد sample لذا سأكتب في هذا الحقل “sample.controller.LoginController” كما في الصورة:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-controller.png" alt="شرح برنامج تصميم الواجهة لتطبيق جافا - محرر جلون Gluon 8" /></p>

<p>أخيرا <strong>وبعد حفظ تعديلاتنا</strong> إلى الآن، نذهب في الأعلى يسارا للقائمة view (بجانب زر File) ثم آخر خيار “Show sample controller skeleton” ستظهر لك نافذة، اضغط أسفلها يمينا على الخيار Full ثم انسخ الكود بأكمله بالضغط على زر copy</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-sample-skeleton.png" alt="نسخ كود جافا من محرر جلون Gluon 9" /></p>

<p>أغلق الآن برنامج محرر الواجهة واذهب ضمن برنامج IntelliJ للملف LoginController وقم بتحديد كل شيئ فيه وحذفه ثم لصق ما نسخته بدلا منه، وتم.</p>

<p><strong>ملاحظة:</strong> قم دائمًا بحذف كل شيئ داخل دالة void initialize فهو غير مهم</p>

<p>هكذا يتم تصميم النوافذ وتعريفهم في الكود، لذا لن أكرر لاحقا شرح عمل أي نافذة أخرى، فجميعهم يتم عملهم بنفس الخطوات.</p>

<h2 id="تأثيرات-إضافية">تأثيرات إضافية</h2>

<p>يمكن إضافة صنف (كلاس) جافا إضافي مثلا من أجل عمل بعض التأثيرات، مثلًا عندما يتم ملء نموذج تسجيل الدخول بمعلومات خاطئة يهتز حقلي اسم المستخدم وكلمة المرور للدلالة على أن المعلومات التي تحتويها غير صحيحة، لعمل هذا الاهتزاز يمكنك إنشاء مجلد animations بالضغط باليمين على مجلد sample ثم New ثم Package.</p>

<p>بعد ذلك انقر باليمين على المجلد الجديد animations ثم New ثم Java Class وقم بتسميته Shaker واجعل محتواه كالتالي:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre>
<span class="kn">package</span> <span class="nn">sample.animations</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javafx.animation.TranslateTransition</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javafx.scene.Node</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javafx.util.Duration</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Shaker</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">TranslateTransition</span> <span class="n">translateTransition</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Shaker</span><span class="o">(</span><span class="nc">Node</span> <span class="n">node</span><span class="o">){</span>
        <span class="n">translateTransition</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TranslateTransition</span><span class="o">(</span><span class="nc">Duration</span><span class="o">.</span><span class="na">millis</span><span class="o">(</span><span class="mi">50</span><span class="o">),</span> <span class="n">node</span><span class="o">);</span>   <span class="c1">//مدة الانتقال</span>
        <span class="n">translateTransition</span><span class="o">.</span><span class="na">setFromX</span><span class="o">(</span><span class="mi">0</span><span class="n">f</span><span class="o">);</span>   <span class="c1">//بدء الحركة من المسافة 0 على محور الإكس</span>
        <span class="n">translateTransition</span><span class="o">.</span><span class="na">setByX</span><span class="o">(</span><span class="mi">10</span><span class="n">f</span><span class="o">);</span>    <span class="c1">// وحتى المسافة 10</span>
        <span class="n">translateTransition</span><span class="o">.</span><span class="na">setCycleCount</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>   <span class="c1">//تكرار الهزة مرتين</span>
        <span class="n">translateTransition</span><span class="o">.</span><span class="na">setAutoReverse</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>   <span class="c1">//عكس العملية لعودة الحقول لمكانها الأصلي في النهاية</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">shake</span><span class="o">(){</span>
        <span class="n">translateTransition</span><span class="o">.</span><span class="na">playFromStart</span><span class="o">();</span>    <span class="c1">//لبدء الحركة</span>
    <span class="o">}</span>


<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>وبهذا يمكننا لاحقًا استدعاء الصنف هذا عند أي عنصر لإضافة حركة الاهتزاز المكتوبة إليه.</p>

<p>يمكنك الآن تشغيل البرنامج للتأكد من أنه يعمل وكل شيئ على مايرام.</p>

<p><strong>ملاحظة:</strong> قم بتغيير أبعاد نوافذ البرنامج من ملف Main.java في السطر التالي إلى الأبعاد التي وضعتها في محرر الواجهة:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    primaryStage.setScene(new Scene(root, 700, 400));
</pre></td></tr></tbody></table></code></pre></div></div>

<p>كما يمكنك تغيير العنوان الذي يظهر في شريط العناوين من نفس الملف</p>

<p><strong>ملاحظة2:</strong> ستلاحظ عند تشغيل البرنامج وتكبير النافذة أن العناصر لا تتغير وفق حجم النافذة الجديد، لحل هذه المشكلة يجب استخدم العنصر GridPane بدلا من AnchorPane في محرر الواجهة، ولكن شرحنا هذا لا يشمل شرح GridPane.</p>

<hr />

<p><strong>التالي:</strong> <a href="/java-database-handler">الربط مع قاعدة البيانات</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[تصميم نوافذ تطبيق جافا إف إكس في محرر الواجهة Gluon]]></summary></entry><entry><title type="html">إدارة المستخدمين في تطبيق جافا إف إكس</title><link href="https://mulham.github.io/javafx-manage-users/" rel="alternate" type="text/html" title="إدارة المستخدمين في تطبيق جافا إف إكس" /><published>2021-03-02T00:00:00+03:00</published><updated>2024-10-18T00:18:26+03:00</updated><id>https://mulham.github.io/javafx-manage-users</id><content type="html" xml:base="https://mulham.github.io/javafx-manage-users/"><![CDATA[<blockquote class="prompt-info">
  <p>هذه الصفحة جزء من شرح <a href="/java-project-from-scratch">بناء تطبيق جافا إف إكس من الصفر</a></p>
</blockquote>

<p>لنقم الآن بإنشاء نافذة إدارة المستخدمين حيث يمكن للمدير أن يضيف أو يعدل أو يحذف مستخدما ما.</p>

<p>وبالتالي سنقوم بعمل نافذتين، نافذة لعرض المستخدمين الموجودين ونافذة لإضافة مستخدم، وسنستخدم الأخيرة (نسخة منها) لتعديل بيانات المستخدم حيث ستظهر بياناته في نموذج الإضافة نفسه لإمكانية تعديلها.</p>

<p>اضغط باليمين على المجلد view واختر New ثم FXML File وسمه users وهي النافذة التي سنعرض فيها المستخدمين الموجودين في قاعدة البيانات.</p>

<p>الجديد في النافذة هذه والتي تعرض المستخدمين الموجودين، هو الجدول، وهو في محرر الواجهة باسم TabelView وستجد أنك عندما تضيفه سيحوي عمودَين، يمكنك النقر باليمين على أحد الأعمدة واختيار Duplicate لإضافة عمود جديد أو Delete لحذفه، كما يمكنك تغيير عرض أحد الأعمد بالنقر على حافته اليمنى أو اليسرى والسحب. وبالنسبة لتغيير اسمه ومعلوماته وإعطائه id مخصص فيتم من قائمة الخصائص على اليمين (حيث يجب إعطاء id لكل عمود). ستكون النافذة لدي على الشكل التالي:</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-users-window.png" alt="نافذة إدارة المستخدمين في تطبيق جافا إف إكس" /></p>

<p>طبعا تلك النافذة يجب أن يتم ربطها مع controller لذا بعد نسخ المحتوى من محرر الواجهة (من خيار sample skeleton الموضح سابقا في صفحة <a href="/javafx-interface-design/#إضافة-مايلزم-للبرمجة">تصميم الواجهة</a>) اضغط (في محرر الكود IntelliJ) باليمين على المجلد controller ثم New ثم Java Class وسمه UserController والذي ستلصق الكود الخاص به من محرر الواجهة كما ذكرنا.</p>

<p>ولكن هنا يجب تغيير محتوى UserController قليلًا..فمثلا سيقوم محرر الواجهة بإعطائك حقل الجدول على الشكل التالي:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>    @FXML
    private TableView&lt;?&gt; table;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>إشارة الاستفهام هذه يجب تبديلها بنوع الكائن الذي سيحتويه الجدول، والذي سيكون في حالتنا User، كذلك بالنسبة للأعمدة، فمثلا أول عمود تجده في الصورة أعلاه هو الـ id الخاص بالمستخدم والذي سيعطيه محرر الواجهة بالشكل التالي:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>     @FXML
        private TableColumn&lt;?, ?&gt; tableId;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>قم باستبدال إشارة الاستفهام الأولى بنوع الكائن كما ذكرنا وهو User والثانية بنوع المتغير الذي سيحتويه العمود وهو في هذا العمود سيكون رقم صحيح أي Integer وبالتالي بعد التعديل سيصبح:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>     @FXML
        private TableColumn&lt;User, Integer&gt; tableId;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>وهكذا.. علمًا أن حقل التاريخ سيكون نوعه Date.</p>

<p>والآن يجب علينا أن نتعلم شيئًا جديدًا، وهو ال model.. أو ببساطة العناصر. الآن من الواضح أنه سيكون لدينا مستخدمين في التطبيق، ولكل مستخدم معلومات عديدة (الاسم الكنية كلمة السر..الخ) ولهذا السبب يجب إنشاء صنف يُعرِّف المستخدم والمعلومات التي سيحتويها (القالب وليس بيانات فعلية يعني فقط متغير الاسم ومتغير الكنية وهكذا دون إعطائهم قيم - باختصار فهم أسماء الأعمدة في جدول المستخدمين في قاعدة البيانات)، وعندها يمكننا أن نأخذ عنصر من هذا الكائن ونتعامل معه بالشكل الذي نريد.</p>

<p>ألم تفهم شيئًا؟</p>

<p>دعني أشرح لك بضعة حالات لاستخدام عناصر الكائن “المستخدم”: عندما أريد عرض المستخدم على الجدول فسأعرضه بكامل معلوماته أو جزء منها، عندما أريد حذف مستخدم من الجدول فيكفي أن أحذفه بناء على رقم الـ id الخاص به، وعندما أريد تعديل بياناته فسيلزمني استدعاء جميع معلوماته لعرضها للمستخدم حتى يعدل ما يشاء.. إذًا مرة أحتاج الـ id فقط، ومرة أحتاج كل المعلومات ومرة جزء منها، لابد إذًا من أن يكون هناك عنصر أستطيع أن آخذ منه أي معلومة أريدها في الوقت الذي أشاء، لذا فإن User (يبدأ بحرف كبير) سيكون هو الصنف وهو عبارة عن قالب يحوي المتغييرات فقط، أسماء المتغييرات، ومنه سآخذ عنصر user (يبدأ بحرف صغير) وأعطيه قيم لتلك المتغيرات.</p>

<p>وبالتطبيق أيضا ستفهم أكثر، لذا قم بالضغط على مجلد model ثم New ثم Java Class وسمه User، ثم اكتب جميع الأعمدة التي يحتويها جدول المستخدمين في قاعدة البيانات، على الشكل التالي:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>    private Integer idUser;
    private String Name;
    private String Surname;
    private String Level;
    private String password;
    private LocalDate Certificate_date;
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>ملاحظة:</strong> ستحتاج لاستيراد مكتبة LocalDate. ودائمًا عند ظهور خطأ باللون الأحمر يمكنك وضع مؤشر الفأرة عنده ليقوم محرر الكود بإعطاء اقتراح لحله، وفي مثل هذا الحال سيظهر زر يقترح استيراد المكتبة، فقط انقر عليه وسيضيف لك المحرر السطر المناسب تلقائيًا.</p>

<p>والآن لإنشاء setters و getters وهم الدالات التي تقوم بإعطاء قيم لهذه المتغيرات أو عرضها عند الحاجة، حيث لايمكن مشاهدة أو ضبط قيم هذه المتغيرات مباشرة كونهم من نوع private أي خاص. وهكذا يجب أن تسير الأمور في لغة جافا.</p>

<p>الآن لإنشاء تلك الدالات اضغط من الأعلى بجانب file على القائمة code ثم Generate ثم Getter and Setter ثم اختر جميع المتغيرات من القائمة واضغط ok.</p>

<p>أخيرا يجب أن نضيف باني أو أكثر لهذا الصنف، والباني أو Consturctor هي دالة تحمل نفس اسم الصنف ويتم استخدامها تلقائيًا عند إنشاء عنصر من ذلك الصنف، فعند إنشاء عنصر من صنف ما وإعطاء بارامترين عند الإنشاء، هذا يعني أن هناك باني في ذلك الصنف يتطلب بارامترين وسيتم استدعاءه تلقائيا في تلك الحالة، وهكذا.</p>

<p>(أنصح بمراجعة فقرة “مفهوم الكونستركتور في جافا” في الصفحة <a href="https://harmash.com/java/java-class-and-object/">هذه</a> من موقع “هرماش”)</p>

<p>لإتمام الصنف هذا ووفقا لمشروعنا هنا فسأقوم بإنشاء باني يتطلب جميع معلومات المستخدم عدا الـ id وآخر مع الـ id:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>
<span class="kd">public</span> <span class="nf">User</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">nachname</span><span class="o">,</span> <span class="nc">String</span> <span class="n">level</span><span class="o">,</span> <span class="nc">String</span> <span class="n">password</span><span class="o">,</span> <span class="nc">LocalDate</span> <span class="n">zertifikat_datum</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
        <span class="nc">Nachname</span> <span class="o">=</span> <span class="n">nachname</span><span class="o">;</span>
        <span class="nc">Level</span> <span class="o">=</span> <span class="n">level</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>
        <span class="n">Zertifikat_datum</span> <span class="o">=</span> <span class="n">zertifikat_datum</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="nf">User</span><span class="o">(</span><span class="nc">Integer</span> <span class="n">id_User</span><span class="o">,</span> <span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">nachname</span><span class="o">,</span> <span class="nc">String</span> <span class="n">level</span><span class="o">,</span> <span class="nc">LocalDate</span> <span class="n">zertifikat_datum</span><span class="o">,</span> <span class="nc">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">idUser</span> <span class="o">=</span> <span class="n">id_User</span><span class="o">;</span>
        <span class="nc">Name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
        <span class="nc">Nachname</span> <span class="o">=</span> <span class="n">nachname</span><span class="o">;</span>
        <span class="nc">Level</span> <span class="o">=</span> <span class="n">level</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>
        <span class="n">Zertifikat_datum</span> <span class="o">=</span> <span class="n">zertifikat_datum</span><span class="o">;</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>لنذهب الآن لملف (صنف) UserController، وسنقوم في بدايته بإضافة الأسطر التالية لاستخدام صنف User وغيره في هذا الصنف:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>    import sample.Database.DatabaseHandler;
    import sample.animations.Shaker;
    import sample.model.User;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>ثم قبل السطرين التاليين:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>    @FXML
        void initialize() {
</pre></td></tr></tbody></table></code></pre></div></div>

<p>سنضيف التالي (كالعادة لإنشاء عنصر من صنق قاعدة البيانات وعنصر من صنف تغيير النافذة):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>    DatabaseHandler databaseHandler;
    private SceneController sceneController;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>ولكننا سنضيف التالي أيضا لحفظ النتائج القادمة من قاعدة البيانات لها (ضمن قائمة) سميناها oblist اختصارا:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    ObservableList&lt;User&gt; oblist = FXCollections.observableArrayList();
</pre></td></tr></tbody></table></code></pre></div></div>

<p>وستحتاج لإضافة المكتبتين التالييتين في بداية ملف UserController للتعرف على السطر السابق:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>    import javafx.collections.FXCollections;
    import javafx.collections.ObservableList;
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="عرض-المستخدمين">عرض المستخدمين</h2>

<p>لعرض المستخدمين في الجدول لدينا يجب في البداية كتابة الدالة في صنف DatabaseHandler والتي تستخرج جميع المستخدمين وبياناتهم من جدول المستخدمين في قاعدة البيانات، لذا سنضيف الدالة التالية لصنف DatabaseHandler:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>
<span class="kd">public</span> <span class="nc">ResultSet</span> <span class="nf">getTable</span><span class="o">(</span><span class="nc">String</span> <span class="n">table</span><span class="o">){</span>    <span class="c1">// لاحظ أن الدالة تأخذ بارامتر واحد وهو اسم الجدول وبالتالي يمكن استخدامها لإعطاء بيانات أي جدول نريده وذلك فقط بتغيير الاسم في البرامتر عند الاستدعاء</span>
        <span class="nc">ResultSet</span> <span class="n">resultset</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"SELECT * FROM mydb."</span> <span class="o">+</span> <span class="n">table</span><span class="o">;</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">resultset</span> <span class="o">=</span> <span class="n">getDbConnection</span><span class="o">().</span><span class="na">createStatement</span><span class="o">().</span><span class="na">executeQuery</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>

        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SQLException</span> <span class="o">|</span> <span class="nc">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">return</span>  <span class="n">resultset</span><span class="o">;</span>  <span class="c1">// تقوم الدالة بالتالي بإرجاع معلومات الجدول كاملة أي كل الأسطر التي يحتويها أو ستكون خالية إذا كان الجدول فارغا</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>بعد ذلك في صنف UserController وخارج دالة initialize سنقوم بإضافة الدالة التي تعرض محتويات الجدول عند عرض النافذة، ولاحظ إضافة جميع محتويات الجدول القادم من قاعدة البيانات للقائمة oblist وفي آخر سطر نقوم بضبط محتوى الجدول في النافذة هنا على محتويات القائمة oblist:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre>

 <span class="kd">public</span> <span class="kt">void</span> <span class="nf">tableView</span><span class="o">(){</span>
        <span class="n">databaseHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DatabaseHandler</span><span class="o">();</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="nc">ResultSet</span> <span class="n">rs</span> <span class="o">=</span> <span class="n">databaseHandler</span><span class="o">.</span><span class="na">getTable</span><span class="o">(</span><span class="s">"Users"</span><span class="o">);</span>


            <span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span> <span class="c1">// أي بينما يوجد سطر آخر في النتائج القادمة من قاعدة البيانات</span>
            <span class="c1">// أسماء الحقول أدناه من Name و Nachname يجب أن تطابق أسماء المتغيرات في صنف User</span>
                <span class="n">oblist</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">User</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"idUser"</span><span class="o">),</span><span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"Name"</span><span class="o">),</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"Nachname"</span><span class="o">)</span>
                        <span class="o">,</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"Level"</span><span class="o">),</span><span class="n">rs</span><span class="o">.</span><span class="na">getDate</span><span class="o">(</span><span class="s">"Zertifikat_datum"</span><span class="o">).</span><span class="na">toLocalDate</span><span class="o">(),</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"password"</span><span class="o">)));</span>   <span class="c1">// إنشاء عنصر من المستخدم وإضافة كافة معلومات السطر له ثم إضافتها للقائمة</span>
            <span class="o">}</span> <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SQLException</span> <span class="n">throwables</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">throwables</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="n">tableId</span><span class="o">.</span><span class="na">setCellValueFactory</span><span class="o">(</span><span class="k">new</span> <span class="nc">PropertyValueFactory</span><span class="o">&lt;&gt;(</span><span class="s">"idUser"</span><span class="o">));</span>  
        <span class="c1">//الحقل أعلاه idUser وما يوازيه أدناه يجب أن يطابق اسم العمود في قاعدة البيانات</span>
        <span class="n">table_name</span><span class="o">.</span><span class="na">setCellValueFactory</span><span class="o">(</span><span class="k">new</span> <span class="nc">PropertyValueFactory</span><span class="o">&lt;&gt;(</span><span class="s">"Name"</span><span class="o">));</span> 
        <span class="n">table_surname</span><span class="o">.</span><span class="na">setCellValueFactory</span><span class="o">(</span><span class="k">new</span> <span class="nc">PropertyValueFactory</span><span class="o">&lt;&gt;(</span><span class="s">"Nachname"</span><span class="o">));</span>
        <span class="n">table_level</span><span class="o">.</span><span class="na">setCellValueFactory</span><span class="o">(</span><span class="k">new</span> <span class="nc">PropertyValueFactory</span><span class="o">&lt;&gt;(</span><span class="s">"Level"</span><span class="o">));</span>
        <span class="n">table_date</span><span class="o">.</span><span class="na">setCellValueFactory</span><span class="o">(</span><span class="k">new</span> <span class="nc">PropertyValueFactory</span><span class="o">&lt;&gt;(</span><span class="s">"Zertifikat_datum"</span><span class="o">));</span>
        <span class="n">table_pass</span><span class="o">.</span><span class="na">setCellValueFactory</span><span class="o">(</span><span class="k">new</span> <span class="nc">PropertyValueFactory</span><span class="o">&lt;&gt;(</span><span class="s">"password"</span><span class="o">));</span>
        <span class="n">table</span><span class="o">.</span><span class="na">setItems</span><span class="o">(</span><span class="n">oblist</span><span class="o">);</span> <span class="c1">// ضبط عناصر الجدول وفق عناصر القائمة</span>
    <span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>حيث يتم استدعاء هذه الدالة مباشرة عند الضغط على زر “المستخدمين” في النافذة الرئيسية، أي في صنف MainController (وضمن دالة initialize):</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre> <span class="n">mainUsers</span><span class="o">.</span><span class="na">setOnAction</span><span class="o">(</span><span class="n">event</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="n">mainUsers</span><span class="o">.</span><span class="na">getScene</span><span class="o">().</span><span class="na">getWindow</span><span class="o">().</span><span class="na">hide</span><span class="o">();</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">FXMLLoader</span> <span class="n">loader</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FXMLLoader</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"/sample/view/users.fxml"</span><span class="o">));</span>
                <span class="nc">Parent</span> <span class="n">root</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Parent</span><span class="o">)</span> <span class="n">loader</span><span class="o">.</span><span class="na">load</span><span class="o">();</span>
                <span class="nc">UserController</span> <span class="n">userController</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="na">getController</span><span class="o">();</span>
                <span class="n">userController</span><span class="o">.</span><span class="na">tableView</span><span class="o">();</span> <span class="c1">// استدعاء دالة عرض الجدول</span>
                <span class="nc">Stage</span> <span class="n">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stage</span><span class="o">();</span>
                <span class="n">stage</span><span class="o">.</span><span class="na">setScene</span><span class="o">(</span><span class="k">new</span> <span class="nc">Scene</span><span class="o">(</span><span class="n">root</span><span class="o">));</span>
                <span class="n">stage</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
            <span class="o">}</span><span class="k">catch</span>  <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">){</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>       <span class="o">});</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>لاحظ أننا لم نستخدم دالة changeScene من صنف SceneController هنا، وذلك بسبب حاجتنا لاستدعاء بيانات من قاعدة البيانات واستدعاء دالة من صنف النافذة الجديدة أثناء تغيير النافذة.</p>

<p>الآن قم بتشغيل التطبيق، ويجب أن ترى عند الذهاب لنافذة المستخدمين المستخدم admin في الجدول.</p>

<h2 id="حذف-مستخدم">حذف مستخدم</h2>

<p>لحذف المستخدم يتوجب علينا إضافة دالة لقاعدة البيانات تقوم بحذف المستخدم المطلوب من قاعدة البيانات، وكذلك يجب إضافة دالة في صنف UserController لضبط زر الحذف بالشكل الصحيح والتي ستستدعي أيضا دالة tableView لتحديث الجدول المعروض في النافذة.</p>

<p>لنقم أولا بإضافة دالة الحذف للصنف DatabaseHandler:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>
  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">deleteUser</span><span class="o">(</span><span class="nc">User</span> <span class="n">user</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">delete</span> <span class="o">=</span> <span class="s">"DELETE FROM Users "</span> <span class="o">+</span> <span class="s">" Where idUser"</span> <span class="o">+</span> <span class="s">" = ?"</span><span class="o">;</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">PreparedStatement</span> <span class="n">preparedStatement</span> <span class="o">=</span> <span class="n">getDbConnection</span><span class="o">().</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">delete</span><span class="o">);</span>
            <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>
            <span class="n">preparedStatement</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SQLException</span> <span class="o">|</span> <span class="nc">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>ثم في صنف UserController وضمن دالة initialize سنضيف التالي:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="rouge-code"><pre>
        <span class="n">sceneController</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SceneController</span><span class="o">();</span>

        <span class="n">mainLogout</span><span class="o">.</span><span class="na">setOnAction</span><span class="o">(</span><span class="n">event</span> <span class="o">-&gt;</span> <span class="o">{</span>       <span class="c1">// زر تسجيل الخروج</span>
            <span class="n">sceneController</span><span class="o">.</span><span class="na">changeScene</span><span class="o">(</span><span class="n">mainLogout</span><span class="o">,</span> <span class="s">"login.fxml"</span><span class="o">);</span>
        <span class="o">});</span>
        <span class="n">table_back</span><span class="o">.</span><span class="na">setOnAction</span><span class="o">(</span><span class="n">event</span> <span class="o">-&gt;</span> <span class="o">{</span>       <span class="c1">// زر العودة للخلف</span>
            <span class="n">sceneController</span><span class="o">.</span><span class="na">changeScene</span><span class="o">(</span><span class="n">table_back</span><span class="o">,</span> <span class="s">"main.fxml"</span><span class="o">);</span>
        <span class="o">});</span>

         <span class="n">user_delete</span><span class="o">.</span><span class="na">setOnAction</span><span class="o">(</span><span class="n">event</span> <span class="o">-&gt;{</span>      <span class="n">زر</span> <span class="n">حذف</span> <span class="n">مستخدم</span>
            <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="n">table</span><span class="o">.</span><span class="na">getSelectionModel</span><span class="o">().</span><span class="na">getSelectedItem</span><span class="o">();</span>    <span class="c1">// إنشاء عنصر من المستخدم والذي سيكون العنصر الذي تم تحديده في الجدول</span>
            <span class="k">if</span> <span class="o">(!</span><span class="n">table</span><span class="o">.</span><span class="na">getSelectionModel</span><span class="o">().</span><span class="na">isEmpty</span><span class="o">()){</span>  <span class="c1">// إذا قام المستخدم بتحديد عنصر من الجدول</span>
                <span class="kt">boolean</span> <span class="n">check</span> <span class="o">=</span> <span class="n">databaseHandler</span><span class="o">.</span><span class="na">deleteUser</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>   <span class="c1">// إرسال المستخدم لدالة الحذف في صنف قاعدة البيانات</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">check</span><span class="o">){</span>     <span class="c1">// جيث ترجع تلك الدالة صح إذا تم الحذف بشكل صحيح</span>
                    <span class="n">radiographer_label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"User deleted Successfully!"</span><span class="o">);</span>
                    <span class="n">oblist</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span> <span class="c1">// إفراغ القائمة ليتم بناؤها من جديد في السطر الذي يليه وبالتالي لا يتم عرض محتوى الجدول مرتين</span>
                    <span class="n">tableView</span><span class="o">();</span>    <span class="c1">// استدعاء دالة عرض الجدول التي تقوم بدورها بملء القائمة وفقا للبيانات الحالية في قواعد البيانات</span>
                    <span class="nc">FadeTransition</span> <span class="n">fadeTransition</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FadeTransition</span><span class="o">(</span><span class="nc">Duration</span><span class="o">.</span><span class="na">millis</span><span class="o">(</span><span class="mi">5000</span><span class="o">),</span><span class="n">radiographer_label</span><span class="o">);</span>
                    <span class="n">fadeTransition</span><span class="o">.</span><span class="na">setFromValue</span><span class="o">(</span><span class="mi">1</span><span class="n">f</span><span class="o">);</span>
                    <span class="n">fadeTransition</span><span class="o">.</span><span class="na">setToValue</span><span class="o">(</span><span class="mi">0</span><span class="n">f</span><span class="o">);</span>
                    <span class="n">fadeTransition</span><span class="o">.</span><span class="na">setCycleCount</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
                    <span class="n">fadeTransition</span><span class="o">.</span><span class="na">play</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                    <span class="n">radiographer_label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"User couldn't be deleted!"</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                <span class="n">radiographer_label</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"You should select an Item"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">});</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>ملاحظة:</strong> في الشرط أعلاه (if (check تعني</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>      if (check == true)
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="إضافة-مستخدم">إضافة مستخدم</h2>

<p>بنفس الطريقة سنضيف دالة إضافة مستخدم لقاعدة البيانات في صنف DatabaseHandler:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre>
<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">addUser</span><span class="o">(</span><span class="nc">User</span> <span class="n">user</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">insert</span> <span class="o">=</span> <span class="s">"INSERT INTO Users "</span> <span class="o">+</span> <span class="s">" (Name, Nachname, Level, Zertifikat_datum, password) VALUES (?,?,?,?,?);"</span><span class="o">;</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">PreparedStatement</span> <span class="n">preparedStatement</span> <span class="o">=</span> <span class="n">getDbConnection</span><span class="o">().</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">insert</span><span class="o">);</span>
                <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
                <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="na">getNachname</span><span class="o">());</span>
                <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="na">getLevel</span><span class="o">());</span>
                <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setDate</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="nc">Date</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="na">getZertifikat_datum</span><span class="o">()));</span>
                <span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>
                <span class="n">preparedStatement</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
                <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SQLException</span> <span class="o">|</span> <span class="nc">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>والآن سنحتاج لإنشاء نافذة جديدة مع controller جديد، حيث أن زر إضافة مستخدم سيقوم بالتحويل لنافذة إضافة مستخدم حيث يتم إدخال البيانات، وعند الضغط هناك على زر إضافة يتم استدعاء الدالة أعلاه لإضافة تلك البيانات لجدول المستخدمين في قاعدة البيانات، النافذة الخاصة بإضافة مستخدمين لدي ستكون على الشكل التالي (addUser.fxml):</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/gluon-add-user-window.png" alt="نافذة إضافة مستخدم في تطبيق جافا إف إكس" /></p>

<p>وفي صنف AddUserController سيكون زر إضافة المستخدم مبرمج في الشكل التالي (ضمن دالة initialize):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>     addButton.setOnAction(event -&gt; {
                createUser();
           });
</pre></td></tr></tbody></table></code></pre></div></div>

<p>حيث دالة createUser (خارج دالة initialize):</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">createUser</span><span class="o">(){</span>
        <span class="nc">DatabaseHandler</span> <span class="n">databaseHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DatabaseHandler</span><span class="o">();</span>
        <span class="nc">String</span> <span class="nc">Name</span> <span class="o">=</span> <span class="n">addName</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
        <span class="nc">String</span> <span class="nc">Nachname</span> <span class="o">=</span> <span class="n">addSurname</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
        <span class="nc">String</span> <span class="nc">Level</span> <span class="o">=</span> <span class="n">addLevel</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
        <span class="nc">LocalDate</span> <span class="n">date</span> <span class="o">=</span> <span class="n">addDate</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">pass</span> <span class="o">=</span> <span class="n">addPassword</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
        <span class="kt">boolean</span> <span class="n">check</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="o">(</span><span class="nc">Name</span><span class="o">,</span><span class="nc">Nachname</span><span class="o">,</span><span class="nc">Level</span><span class="o">,</span><span class="n">pass</span><span class="o">,</span><span class="n">date</span><span class="o">);</span>
            <span class="n">check</span> <span class="o">=</span> <span class="n">databaseHandler</span><span class="o">.</span><span class="na">addUser</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">check</span><span class="o">){</span>
            <span class="n">addName</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Name"</span><span class="o">);</span>
            <span class="n">addSurname</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Surname"</span><span class="o">);</span>
            <span class="n">addLevel</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Level"</span><span class="o">);</span>
            <span class="n">addDate</span><span class="o">.</span><span class="na">getEditor</span><span class="o">().</span><span class="na">clear</span><span class="o">();</span>
            <span class="n">addPassword</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"Password"</span><span class="o">);</span>
            <span class="n">addLabel</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"User has been added Successfully!"</span><span class="o">);</span>
            <span class="nc">FadeTransition</span> <span class="n">fadeTransition</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FadeTransition</span><span class="o">(</span><span class="nc">Duration</span><span class="o">.</span><span class="na">millis</span><span class="o">(</span><span class="mi">5000</span><span class="o">),</span><span class="n">addLabel</span><span class="o">);</span>
            <span class="n">fadeTransition</span><span class="o">.</span><span class="na">setFromValue</span><span class="o">(</span><span class="mi">1</span><span class="n">f</span><span class="o">);</span>
            <span class="n">fadeTransition</span><span class="o">.</span><span class="na">setToValue</span><span class="o">(</span><span class="mi">0</span><span class="n">f</span><span class="o">);</span>
            <span class="n">fadeTransition</span><span class="o">.</span><span class="na">setCycleCount</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
            <span class="n">fadeTransition</span><span class="o">.</span><span class="na">play</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">else</span><span class="o">{</span>
            <span class="n">addLabel</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">"User Couldn't be added!"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>لاحظ أنني هنا في زر الرجوع لنافذة المستخدمين أيضا لن أستخدم دالة changeScene بسبب حاجتي لاستدعاء دالة tableView، لذا سيكون زر الرجوع هنا بالشكل التالي:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>
 <span class="n">table_back</span><span class="o">.</span><span class="na">setOnAction</span><span class="o">(</span><span class="n">event</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="n">table_back</span><span class="o">.</span><span class="na">getScene</span><span class="o">().</span><span class="na">getWindow</span><span class="o">().</span><span class="na">hide</span><span class="o">();</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="nc">FXMLLoader</span> <span class="n">loader</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FXMLLoader</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"/sample/view/users.fxml"</span><span class="o">));</span>
                <span class="nc">Parent</span> <span class="n">root</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Parent</span><span class="o">)</span> <span class="n">loader</span><span class="o">.</span><span class="na">load</span><span class="o">();</span>
                <span class="nc">UserController</span> <span class="n">userController</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="na">getController</span><span class="o">();</span>
                <span class="n">userController</span><span class="o">.</span><span class="na">tableView</span><span class="o">();</span>
                <span class="nc">Stage</span> <span class="n">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stage</span><span class="o">();</span>
                <span class="n">stage</span><span class="o">.</span><span class="na">setScene</span><span class="o">(</span><span class="k">new</span> <span class="nc">Scene</span><span class="o">(</span><span class="n">root</span><span class="o">));</span>
                <span class="n">stage</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
            <span class="o">}</span><span class="k">catch</span>  <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">){</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
            <span class="o">}</span>       <span class="o">});</span>
    <span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>في صنف UserController لاننسى ربط زر الإضافة بدالة تغيير النوافذ للذهاب للنافذة الجديدة:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>     addUser.addEventHandler(MouseEvent.MOUSE_CLICKED, event -&gt; {

                sceneController.changeSceneImage(addUser, "addUser.fxml");
                    }

                    );
</pre></td></tr></tbody></table></code></pre></div></div>

<p>قم بتشغيل البرنامج الآن وجرب إضافة مستخدم ثم حذفه للتأكد من أن كل شيئ تم بالشكل الصحيح.</p>

<p><strong>ملاحظة</strong>: جميع حقول إضافة المستخدم إجبارية ويجب ألا تكون فارغة وإلا سينتج خطأ في البرنامج بسبب تمرير عبارات فارغة في SQL.</p>

<p>يمكنك معاينة الكود في الوضع الحالي من <a href="https://github.com/Mulham/Java-Project/tree/addUser">هنا</a></p>

<p>الآن لإمكانية تعديل بيانات مستخدم يتوجب علينا إرسال بياناته لنافذة التعديل حتى يتم عرضها ونتمكن من تعديلها، ولكن كيف يمكن لنا إرسال بيانات ومعلومات المستخدم من نافذة ﻷخرى؟ تابع الصفحة القادمة للتعرف على ذلك.</p>

<hr />

<p><strong>التالي:</strong> <a href="/javafx-transfer-data-between-scenes">إرسال بيانات من نافذة ﻷخرى</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[كيفية برمجة تطبيق جافا إف إكس لحذف وتعديل وإضافة مستخدمين وباستخدام قواعد بيانات MySQL]]></summary></entry><entry><title type="html">الانتقال بين النوافذ في تطبيق جافا إف إكس</title><link href="https://mulham.github.io/javafx-scene-changer/" rel="alternate" type="text/html" title="الانتقال بين النوافذ في تطبيق جافا إف إكس" /><published>2021-03-02T00:00:00+03:00</published><updated>2024-10-18T00:18:26+03:00</updated><id>https://mulham.github.io/javafx-scene-changer</id><content type="html" xml:base="https://mulham.github.io/javafx-scene-changer/"><![CDATA[<blockquote class="prompt-info">
  <p>هذه الصفحة جزء من شرح <a href="/java-project-from-scratch">بناء تطبيق جافا إف إكس من الصفر</a></p>
</blockquote>

<p>بعد تصميم وبرمجة نافذة تسجيل الدخول قم الآن في محرر الكود IntelliJ بالضغط باليمين على مجلد view ثم New ثم FXML File وسمها main.fxml لإنشاء النافذة الرئيسية التي سيتم عرضها بعد تسجيل الدخول.</p>

<p>قم بفتح هذه النافذة في محرر الواجهة بالضغط على الملف باليمين واختيار Open in Scene Builder</p>

<p>قم بتصميم هذه النافذة بالشكل الذي ترغب وكما هو موضح سابقًا في صفحة <a href="/javafx-interface-design">تصميم الواجهة</a>.</p>

<p>ستكون النافذة الرئيسية لدي أنا على الشكل التالي (حيث قمت بإضافة مجلد assets وإضافة الأيقونات التي أرغب بإضافتها للنافذة إليه):</p>

<p><img src="https://raw.githubusercontent.com/Mulham/Java-Project/images/images/UI2.png" alt="النافذة الرئيسية في تطبيق جافا إف إكس" /></p>

<p>وستكون مرتبطة بملف الجافا MainController، والربط هذا قم تم شرحه سابقا أيضًا.</p>

<p>لنقم الآن بعمل صنف (كلاس) جافا وظيفته تغيير النافذة المعروضة للمستخدم.</p>

<p>قم بالضغط باليمين على مجلد controller ثم New ثم Java Class وسمه SceneController (حيث النافذة تُدعى عمومًا Scene أو مشهد).</p>

<p>وسيكون محتوى الملف على الشكل التالي:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre>
<span class="kn">package</span> <span class="nn">sample.controller</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javafx.fxml.FXMLLoader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javafx.scene.Parent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javafx.scene.Scene</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javafx.scene.control.Button</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javafx.scene.image.ImageView</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javafx.stage.Stage</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SceneController</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">changeScene</span><span class="o">(</span><span class="nc">Button</span> <span class="n">button</span><span class="o">,</span> <span class="nc">String</span> <span class="n">scene</span> <span class="o">){</span>
        <span class="n">button</span><span class="o">.</span><span class="na">getScene</span><span class="o">().</span><span class="na">getWindow</span><span class="o">().</span><span class="na">hide</span><span class="o">();</span>   <span class="c1">// إخفاء النافذة الحالية</span>
        <span class="nc">FXMLLoader</span> <span class="n">loader</span>   <span class="o">=</span> <span class="k">new</span> <span class="nc">FXMLLoader</span><span class="o">();</span>
        <span class="n">loader</span><span class="o">.</span><span class="na">setLocation</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"/sample/view/"</span> <span class="o">+</span> <span class="n">scene</span><span class="o">));</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="n">loader</span><span class="o">.</span><span class="na">load</span><span class="o">();</span>  <span class="c1">// تحميل النافذة الجديدة</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">){</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nc">Parent</span> <span class="n">root</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="na">getRoot</span><span class="o">();</span>
        <span class="nc">Stage</span> <span class="n">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stage</span><span class="o">();</span>
        <span class="n">stage</span><span class="o">.</span><span class="na">setScene</span><span class="o">(</span><span class="k">new</span> <span class="nc">Scene</span><span class="o">(</span><span class="n">root</span><span class="o">));</span>
        <span class="n">stage</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>   <span class="c1">// عرض النافذة الجديدة</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>وعلى غرار الدالة هذه (changeScene) سأضيف دالة أخرى لإمكانية استخدام صورة بدل زر (سيختلف فقط البارامتر الأول وسيصبح من نوع صورة بدل زر):</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">changeSceneImage</span><span class="o">(</span><span class="nc">ImageView</span> <span class="n">image</span><span class="o">,</span> <span class="nc">String</span> <span class="n">scene</span> <span class="o">){</span>
        <span class="n">image</span><span class="o">.</span><span class="na">getScene</span><span class="o">().</span><span class="na">getWindow</span><span class="o">().</span><span class="na">hide</span><span class="o">();</span>
        <span class="nc">FXMLLoader</span> <span class="n">loader</span>   <span class="o">=</span> <span class="k">new</span> <span class="nc">FXMLLoader</span><span class="o">();</span>
        <span class="n">loader</span><span class="o">.</span><span class="na">setLocation</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">"/sample/view/"</span> <span class="o">+</span> <span class="n">scene</span><span class="o">));</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="n">loader</span><span class="o">.</span><span class="na">load</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">){</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nc">Parent</span> <span class="n">root</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="na">getRoot</span><span class="o">();</span>
        <span class="nc">Stage</span> <span class="n">stage</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stage</span><span class="o">();</span>
        <span class="n">stage</span><span class="o">.</span><span class="na">setScene</span><span class="o">(</span><span class="k">new</span> <span class="nc">Scene</span><span class="o">(</span><span class="n">root</span><span class="o">));</span>
        <span class="n">stage</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>والآن في نافذة تسجيل الدخول، وعند تسجيل الدخول بنجاح فسيتم تغيير النافذة للنافذة الرئيسية، لنبرمج ذلك. اذهب لملف LoginController، أسفل السطر:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    private DatabaseHandler databaseHandler; 
</pre></td></tr></tbody></table></code></pre></div></div>

<p>قم بإضافة السطر التالي لاستدعاء صنف تغيير النوافذ:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>      private SceneController sceneController;
</pre></td></tr></tbody></table></code></pre></div></div>

<p>ثم أسفل سطر:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    databaseHandler = new DatabaseHandler();
</pre></td></tr></tbody></table></code></pre></div></div>

<p>قم بإضافة السطر التالي لإنشاء عنصر من ذلك الصنف:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    sceneController = new SceneController();
</pre></td></tr></tbody></table></code></pre></div></div>

<p>الآن أصبحنا جاهزين لاستخدام دالة changeScene الموجودة في صنف SceneController.</p>

<p>أسفل السطر التالي:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    System.out.println("Login Successful!!!");
</pre></td></tr></tbody></table></code></pre></div></div>

<p>أضف التالي:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    sceneController.changeScene(loginButton, "main.fxml");
</pre></td></tr></tbody></table></code></pre></div></div>

<p>وبالتالي عند تسجيل الدخول بنجاح سيتم استدعاء دالة changeScene والانتقال لنافذة main.fxml وبالتالي حققنا المطلوب.</p>

<p>شغل البرنامج وتأكد من عمله بالشكل المطلوب.</p>

<p>النافذة الرئيسية لدي هي عبارة عن أزرار تقوم فقط بنقل المستخدم لنوافذ أخرى.</p>

<p>كما أن زر تسجيل الخروج أيضا يقوم بنقل المستخدم لنافذة تسجيل الدخول، في الواقع فإن آلية تسجيل الخروج لا تتم بهذه الطريقة ولكنها تحتاج لشرح مستقل، لذا سنكتفي بتغيير النافذة هنا عند تسجيل الخروج.</p>

<p>يمكنك معاينة الكود في الوضع الحالي من <a href="https://github.com/Mulham/Java-Project/tree/SceneChanger">هنا</a></p>

<hr />

<p><strong>التالي:</strong> <a href="/javafx-manage-users">إدارة المستخدمين</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[كيفية تغيير النوافذ والانتقال بينهم في تطبيق JavaFX]]></summary></entry></feed>